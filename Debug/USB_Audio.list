
USB_Audio.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001e0  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000045a8  080001e0  080001e0  000011e0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000380  08004788  08004788  00005788  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004b08  08004b08  000061d0  2**0
                  CONTENTS
  4 .ARM          00000008  08004b08  08004b08  00005b08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08004b10  08004b10  000061d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004b10  08004b10  00005b10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08004b14  08004b14  00005b14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001d0  20000000  08004b18  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000170  200001d0  08004ce8  000061d0  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000340  08004ce8  00006340  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000061d0  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002f3b  00000000  00000000  00006200  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000b3e  00000000  00000000  0000913b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000260  00000000  00000000  00009c80  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000001a2  00000000  00000000  00009ee0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001abff  00000000  00000000  0000a082  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00003f85  00000000  00000000  00024c81  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00091ce7  00000000  00000000  00028c06  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000ba8ed  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000177c  00000000  00000000  000ba930  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000060  00000000  00000000  000bc0ac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001e0 <__do_global_dtors_aux>:
 80001e0:	b510      	push	{r4, lr}
 80001e2:	4c05      	ldr	r4, [pc, #20]	@ (80001f8 <__do_global_dtors_aux+0x18>)
 80001e4:	7823      	ldrb	r3, [r4, #0]
 80001e6:	b933      	cbnz	r3, 80001f6 <__do_global_dtors_aux+0x16>
 80001e8:	4b04      	ldr	r3, [pc, #16]	@ (80001fc <__do_global_dtors_aux+0x1c>)
 80001ea:	b113      	cbz	r3, 80001f2 <__do_global_dtors_aux+0x12>
 80001ec:	4804      	ldr	r0, [pc, #16]	@ (8000200 <__do_global_dtors_aux+0x20>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	2301      	movs	r3, #1
 80001f4:	7023      	strb	r3, [r4, #0]
 80001f6:	bd10      	pop	{r4, pc}
 80001f8:	200001d0 	.word	0x200001d0
 80001fc:	00000000 	.word	0x00000000
 8000200:	08004770 	.word	0x08004770

08000204 <frame_dummy>:
 8000204:	b508      	push	{r3, lr}
 8000206:	4b03      	ldr	r3, [pc, #12]	@ (8000214 <frame_dummy+0x10>)
 8000208:	b11b      	cbz	r3, 8000212 <frame_dummy+0xe>
 800020a:	4903      	ldr	r1, [pc, #12]	@ (8000218 <frame_dummy+0x14>)
 800020c:	4803      	ldr	r0, [pc, #12]	@ (800021c <frame_dummy+0x18>)
 800020e:	f3af 8000 	nop.w
 8000212:	bd08      	pop	{r3, pc}
 8000214:	00000000 	.word	0x00000000
 8000218:	200001d4 	.word	0x200001d4
 800021c:	08004770 	.word	0x08004770

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	@ 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <strlen>:
 80002c0:	4603      	mov	r3, r0
 80002c2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80002c6:	2a00      	cmp	r2, #0
 80002c8:	d1fb      	bne.n	80002c2 <strlen+0x2>
 80002ca:	1a18      	subs	r0, r3, r0
 80002cc:	3801      	subs	r0, #1
 80002ce:	4770      	bx	lr

080002d0 <__aeabi_drsub>:
 80002d0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80002d4:	e002      	b.n	80002dc <__adddf3>
 80002d6:	bf00      	nop

080002d8 <__aeabi_dsub>:
 80002d8:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080002dc <__adddf3>:
 80002dc:	b530      	push	{r4, r5, lr}
 80002de:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002e2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002e6:	ea94 0f05 	teq	r4, r5
 80002ea:	bf08      	it	eq
 80002ec:	ea90 0f02 	teqeq	r0, r2
 80002f0:	bf1f      	itttt	ne
 80002f2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002f6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002fa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002fe:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000302:	f000 80e2 	beq.w	80004ca <__adddf3+0x1ee>
 8000306:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800030a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800030e:	bfb8      	it	lt
 8000310:	426d      	neglt	r5, r5
 8000312:	dd0c      	ble.n	800032e <__adddf3+0x52>
 8000314:	442c      	add	r4, r5
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	ea82 0000 	eor.w	r0, r2, r0
 8000322:	ea83 0101 	eor.w	r1, r3, r1
 8000326:	ea80 0202 	eor.w	r2, r0, r2
 800032a:	ea81 0303 	eor.w	r3, r1, r3
 800032e:	2d36      	cmp	r5, #54	@ 0x36
 8000330:	bf88      	it	hi
 8000332:	bd30      	pophi	{r4, r5, pc}
 8000334:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000338:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800033c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000340:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000344:	d002      	beq.n	800034c <__adddf3+0x70>
 8000346:	4240      	negs	r0, r0
 8000348:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800034c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000350:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000354:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000358:	d002      	beq.n	8000360 <__adddf3+0x84>
 800035a:	4252      	negs	r2, r2
 800035c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000360:	ea94 0f05 	teq	r4, r5
 8000364:	f000 80a7 	beq.w	80004b6 <__adddf3+0x1da>
 8000368:	f1a4 0401 	sub.w	r4, r4, #1
 800036c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000370:	db0d      	blt.n	800038e <__adddf3+0xb2>
 8000372:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000376:	fa22 f205 	lsr.w	r2, r2, r5
 800037a:	1880      	adds	r0, r0, r2
 800037c:	f141 0100 	adc.w	r1, r1, #0
 8000380:	fa03 f20e 	lsl.w	r2, r3, lr
 8000384:	1880      	adds	r0, r0, r2
 8000386:	fa43 f305 	asr.w	r3, r3, r5
 800038a:	4159      	adcs	r1, r3
 800038c:	e00e      	b.n	80003ac <__adddf3+0xd0>
 800038e:	f1a5 0520 	sub.w	r5, r5, #32
 8000392:	f10e 0e20 	add.w	lr, lr, #32
 8000396:	2a01      	cmp	r2, #1
 8000398:	fa03 fc0e 	lsl.w	ip, r3, lr
 800039c:	bf28      	it	cs
 800039e:	f04c 0c02 	orrcs.w	ip, ip, #2
 80003a2:	fa43 f305 	asr.w	r3, r3, r5
 80003a6:	18c0      	adds	r0, r0, r3
 80003a8:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80003ac:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80003b0:	d507      	bpl.n	80003c2 <__adddf3+0xe6>
 80003b2:	f04f 0e00 	mov.w	lr, #0
 80003b6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003ba:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003be:	eb6e 0101 	sbc.w	r1, lr, r1
 80003c2:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80003c6:	d31b      	bcc.n	8000400 <__adddf3+0x124>
 80003c8:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80003cc:	d30c      	bcc.n	80003e8 <__adddf3+0x10c>
 80003ce:	0849      	lsrs	r1, r1, #1
 80003d0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003d4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003d8:	f104 0401 	add.w	r4, r4, #1
 80003dc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003e0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003e4:	f080 809a 	bcs.w	800051c <__adddf3+0x240>
 80003e8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003ec:	bf08      	it	eq
 80003ee:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003f2:	f150 0000 	adcs.w	r0, r0, #0
 80003f6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003fa:	ea41 0105 	orr.w	r1, r1, r5
 80003fe:	bd30      	pop	{r4, r5, pc}
 8000400:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000404:	4140      	adcs	r0, r0
 8000406:	eb41 0101 	adc.w	r1, r1, r1
 800040a:	3c01      	subs	r4, #1
 800040c:	bf28      	it	cs
 800040e:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 8000412:	d2e9      	bcs.n	80003e8 <__adddf3+0x10c>
 8000414:	f091 0f00 	teq	r1, #0
 8000418:	bf04      	itt	eq
 800041a:	4601      	moveq	r1, r0
 800041c:	2000      	moveq	r0, #0
 800041e:	fab1 f381 	clz	r3, r1
 8000422:	bf08      	it	eq
 8000424:	3320      	addeq	r3, #32
 8000426:	f1a3 030b 	sub.w	r3, r3, #11
 800042a:	f1b3 0220 	subs.w	r2, r3, #32
 800042e:	da0c      	bge.n	800044a <__adddf3+0x16e>
 8000430:	320c      	adds	r2, #12
 8000432:	dd08      	ble.n	8000446 <__adddf3+0x16a>
 8000434:	f102 0c14 	add.w	ip, r2, #20
 8000438:	f1c2 020c 	rsb	r2, r2, #12
 800043c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000440:	fa21 f102 	lsr.w	r1, r1, r2
 8000444:	e00c      	b.n	8000460 <__adddf3+0x184>
 8000446:	f102 0214 	add.w	r2, r2, #20
 800044a:	bfd8      	it	le
 800044c:	f1c2 0c20 	rsble	ip, r2, #32
 8000450:	fa01 f102 	lsl.w	r1, r1, r2
 8000454:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000458:	bfdc      	itt	le
 800045a:	ea41 010c 	orrle.w	r1, r1, ip
 800045e:	4090      	lslle	r0, r2
 8000460:	1ae4      	subs	r4, r4, r3
 8000462:	bfa2      	ittt	ge
 8000464:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000468:	4329      	orrge	r1, r5
 800046a:	bd30      	popge	{r4, r5, pc}
 800046c:	ea6f 0404 	mvn.w	r4, r4
 8000470:	3c1f      	subs	r4, #31
 8000472:	da1c      	bge.n	80004ae <__adddf3+0x1d2>
 8000474:	340c      	adds	r4, #12
 8000476:	dc0e      	bgt.n	8000496 <__adddf3+0x1ba>
 8000478:	f104 0414 	add.w	r4, r4, #20
 800047c:	f1c4 0220 	rsb	r2, r4, #32
 8000480:	fa20 f004 	lsr.w	r0, r0, r4
 8000484:	fa01 f302 	lsl.w	r3, r1, r2
 8000488:	ea40 0003 	orr.w	r0, r0, r3
 800048c:	fa21 f304 	lsr.w	r3, r1, r4
 8000490:	ea45 0103 	orr.w	r1, r5, r3
 8000494:	bd30      	pop	{r4, r5, pc}
 8000496:	f1c4 040c 	rsb	r4, r4, #12
 800049a:	f1c4 0220 	rsb	r2, r4, #32
 800049e:	fa20 f002 	lsr.w	r0, r0, r2
 80004a2:	fa01 f304 	lsl.w	r3, r1, r4
 80004a6:	ea40 0003 	orr.w	r0, r0, r3
 80004aa:	4629      	mov	r1, r5
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	fa21 f004 	lsr.w	r0, r1, r4
 80004b2:	4629      	mov	r1, r5
 80004b4:	bd30      	pop	{r4, r5, pc}
 80004b6:	f094 0f00 	teq	r4, #0
 80004ba:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80004be:	bf06      	itte	eq
 80004c0:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80004c4:	3401      	addeq	r4, #1
 80004c6:	3d01      	subne	r5, #1
 80004c8:	e74e      	b.n	8000368 <__adddf3+0x8c>
 80004ca:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ce:	bf18      	it	ne
 80004d0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004d4:	d029      	beq.n	800052a <__adddf3+0x24e>
 80004d6:	ea94 0f05 	teq	r4, r5
 80004da:	bf08      	it	eq
 80004dc:	ea90 0f02 	teqeq	r0, r2
 80004e0:	d005      	beq.n	80004ee <__adddf3+0x212>
 80004e2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004e6:	bf04      	itt	eq
 80004e8:	4619      	moveq	r1, r3
 80004ea:	4610      	moveq	r0, r2
 80004ec:	bd30      	pop	{r4, r5, pc}
 80004ee:	ea91 0f03 	teq	r1, r3
 80004f2:	bf1e      	ittt	ne
 80004f4:	2100      	movne	r1, #0
 80004f6:	2000      	movne	r0, #0
 80004f8:	bd30      	popne	{r4, r5, pc}
 80004fa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004fe:	d105      	bne.n	800050c <__adddf3+0x230>
 8000500:	0040      	lsls	r0, r0, #1
 8000502:	4149      	adcs	r1, r1
 8000504:	bf28      	it	cs
 8000506:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 800050a:	bd30      	pop	{r4, r5, pc}
 800050c:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000510:	bf3c      	itt	cc
 8000512:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 8000516:	bd30      	popcc	{r4, r5, pc}
 8000518:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 800051c:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000520:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000524:	f04f 0000 	mov.w	r0, #0
 8000528:	bd30      	pop	{r4, r5, pc}
 800052a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800052e:	bf1a      	itte	ne
 8000530:	4619      	movne	r1, r3
 8000532:	4610      	movne	r0, r2
 8000534:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000538:	bf1c      	itt	ne
 800053a:	460b      	movne	r3, r1
 800053c:	4602      	movne	r2, r0
 800053e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000542:	bf06      	itte	eq
 8000544:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000548:	ea91 0f03 	teqeq	r1, r3
 800054c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000550:	bd30      	pop	{r4, r5, pc}
 8000552:	bf00      	nop

08000554 <__aeabi_ui2d>:
 8000554:	f090 0f00 	teq	r0, #0
 8000558:	bf04      	itt	eq
 800055a:	2100      	moveq	r1, #0
 800055c:	4770      	bxeq	lr
 800055e:	b530      	push	{r4, r5, lr}
 8000560:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000564:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000568:	f04f 0500 	mov.w	r5, #0
 800056c:	f04f 0100 	mov.w	r1, #0
 8000570:	e750      	b.n	8000414 <__adddf3+0x138>
 8000572:	bf00      	nop

08000574 <__aeabi_i2d>:
 8000574:	f090 0f00 	teq	r0, #0
 8000578:	bf04      	itt	eq
 800057a:	2100      	moveq	r1, #0
 800057c:	4770      	bxeq	lr
 800057e:	b530      	push	{r4, r5, lr}
 8000580:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000584:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000588:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800058c:	bf48      	it	mi
 800058e:	4240      	negmi	r0, r0
 8000590:	f04f 0100 	mov.w	r1, #0
 8000594:	e73e      	b.n	8000414 <__adddf3+0x138>
 8000596:	bf00      	nop

08000598 <__aeabi_f2d>:
 8000598:	0042      	lsls	r2, r0, #1
 800059a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800059e:	ea4f 0131 	mov.w	r1, r1, rrx
 80005a2:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80005a6:	bf1f      	itttt	ne
 80005a8:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 80005ac:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80005b0:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80005b4:	4770      	bxne	lr
 80005b6:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80005ba:	bf08      	it	eq
 80005bc:	4770      	bxeq	lr
 80005be:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80005c2:	bf04      	itt	eq
 80005c4:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80005c8:	4770      	bxeq	lr
 80005ca:	b530      	push	{r4, r5, lr}
 80005cc:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80005d0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005d4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005d8:	e71c      	b.n	8000414 <__adddf3+0x138>
 80005da:	bf00      	nop

080005dc <__aeabi_ul2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f04f 0500 	mov.w	r5, #0
 80005ea:	e00a      	b.n	8000602 <__aeabi_l2d+0x16>

080005ec <__aeabi_l2d>:
 80005ec:	ea50 0201 	orrs.w	r2, r0, r1
 80005f0:	bf08      	it	eq
 80005f2:	4770      	bxeq	lr
 80005f4:	b530      	push	{r4, r5, lr}
 80005f6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005fa:	d502      	bpl.n	8000602 <__aeabi_l2d+0x16>
 80005fc:	4240      	negs	r0, r0
 80005fe:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000602:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000606:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800060a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800060e:	f43f aed8 	beq.w	80003c2 <__adddf3+0xe6>
 8000612:	f04f 0203 	mov.w	r2, #3
 8000616:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800061a:	bf18      	it	ne
 800061c:	3203      	addne	r2, #3
 800061e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000622:	bf18      	it	ne
 8000624:	3203      	addne	r2, #3
 8000626:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800062a:	f1c2 0320 	rsb	r3, r2, #32
 800062e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000632:	fa20 f002 	lsr.w	r0, r0, r2
 8000636:	fa01 fe03 	lsl.w	lr, r1, r3
 800063a:	ea40 000e 	orr.w	r0, r0, lr
 800063e:	fa21 f102 	lsr.w	r1, r1, r2
 8000642:	4414      	add	r4, r2
 8000644:	e6bd      	b.n	80003c2 <__adddf3+0xe6>
 8000646:	bf00      	nop

08000648 <__aeabi_dmul>:
 8000648:	b570      	push	{r4, r5, r6, lr}
 800064a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800064e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000652:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000656:	bf1d      	ittte	ne
 8000658:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800065c:	ea94 0f0c 	teqne	r4, ip
 8000660:	ea95 0f0c 	teqne	r5, ip
 8000664:	f000 f8de 	bleq	8000824 <__aeabi_dmul+0x1dc>
 8000668:	442c      	add	r4, r5
 800066a:	ea81 0603 	eor.w	r6, r1, r3
 800066e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000672:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000676:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800067a:	bf18      	it	ne
 800067c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000680:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000684:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000688:	d038      	beq.n	80006fc <__aeabi_dmul+0xb4>
 800068a:	fba0 ce02 	umull	ip, lr, r0, r2
 800068e:	f04f 0500 	mov.w	r5, #0
 8000692:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000696:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800069a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800069e:	f04f 0600 	mov.w	r6, #0
 80006a2:	fbe1 5603 	umlal	r5, r6, r1, r3
 80006a6:	f09c 0f00 	teq	ip, #0
 80006aa:	bf18      	it	ne
 80006ac:	f04e 0e01 	orrne.w	lr, lr, #1
 80006b0:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 80006b4:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 80006b8:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 80006bc:	d204      	bcs.n	80006c8 <__aeabi_dmul+0x80>
 80006be:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006c2:	416d      	adcs	r5, r5
 80006c4:	eb46 0606 	adc.w	r6, r6, r6
 80006c8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006cc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006d0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006d4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006d8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006dc:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006e0:	bf88      	it	hi
 80006e2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006e6:	d81e      	bhi.n	8000726 <__aeabi_dmul+0xde>
 80006e8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006ec:	bf08      	it	eq
 80006ee:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006f2:	f150 0000 	adcs.w	r0, r0, #0
 80006f6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006fa:	bd70      	pop	{r4, r5, r6, pc}
 80006fc:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000700:	ea46 0101 	orr.w	r1, r6, r1
 8000704:	ea40 0002 	orr.w	r0, r0, r2
 8000708:	ea81 0103 	eor.w	r1, r1, r3
 800070c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000710:	bfc2      	ittt	gt
 8000712:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000716:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800071a:	bd70      	popgt	{r4, r5, r6, pc}
 800071c:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000720:	f04f 0e00 	mov.w	lr, #0
 8000724:	3c01      	subs	r4, #1
 8000726:	f300 80ab 	bgt.w	8000880 <__aeabi_dmul+0x238>
 800072a:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 800072e:	bfde      	ittt	le
 8000730:	2000      	movle	r0, #0
 8000732:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 8000736:	bd70      	pople	{r4, r5, r6, pc}
 8000738:	f1c4 0400 	rsb	r4, r4, #0
 800073c:	3c20      	subs	r4, #32
 800073e:	da35      	bge.n	80007ac <__aeabi_dmul+0x164>
 8000740:	340c      	adds	r4, #12
 8000742:	dc1b      	bgt.n	800077c <__aeabi_dmul+0x134>
 8000744:	f104 0414 	add.w	r4, r4, #20
 8000748:	f1c4 0520 	rsb	r5, r4, #32
 800074c:	fa00 f305 	lsl.w	r3, r0, r5
 8000750:	fa20 f004 	lsr.w	r0, r0, r4
 8000754:	fa01 f205 	lsl.w	r2, r1, r5
 8000758:	ea40 0002 	orr.w	r0, r0, r2
 800075c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000760:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000764:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000768:	fa21 f604 	lsr.w	r6, r1, r4
 800076c:	eb42 0106 	adc.w	r1, r2, r6
 8000770:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000774:	bf08      	it	eq
 8000776:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800077a:	bd70      	pop	{r4, r5, r6, pc}
 800077c:	f1c4 040c 	rsb	r4, r4, #12
 8000780:	f1c4 0520 	rsb	r5, r4, #32
 8000784:	fa00 f304 	lsl.w	r3, r0, r4
 8000788:	fa20 f005 	lsr.w	r0, r0, r5
 800078c:	fa01 f204 	lsl.w	r2, r1, r4
 8000790:	ea40 0002 	orr.w	r0, r0, r2
 8000794:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000798:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800079c:	f141 0100 	adc.w	r1, r1, #0
 80007a0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007a4:	bf08      	it	eq
 80007a6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007aa:	bd70      	pop	{r4, r5, r6, pc}
 80007ac:	f1c4 0520 	rsb	r5, r4, #32
 80007b0:	fa00 f205 	lsl.w	r2, r0, r5
 80007b4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007b8:	fa20 f304 	lsr.w	r3, r0, r4
 80007bc:	fa01 f205 	lsl.w	r2, r1, r5
 80007c0:	ea43 0302 	orr.w	r3, r3, r2
 80007c4:	fa21 f004 	lsr.w	r0, r1, r4
 80007c8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007cc:	fa21 f204 	lsr.w	r2, r1, r4
 80007d0:	ea20 0002 	bic.w	r0, r0, r2
 80007d4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007d8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007dc:	bf08      	it	eq
 80007de:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007e2:	bd70      	pop	{r4, r5, r6, pc}
 80007e4:	f094 0f00 	teq	r4, #0
 80007e8:	d10f      	bne.n	800080a <__aeabi_dmul+0x1c2>
 80007ea:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007ee:	0040      	lsls	r0, r0, #1
 80007f0:	eb41 0101 	adc.w	r1, r1, r1
 80007f4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007f8:	bf08      	it	eq
 80007fa:	3c01      	subeq	r4, #1
 80007fc:	d0f7      	beq.n	80007ee <__aeabi_dmul+0x1a6>
 80007fe:	ea41 0106 	orr.w	r1, r1, r6
 8000802:	f095 0f00 	teq	r5, #0
 8000806:	bf18      	it	ne
 8000808:	4770      	bxne	lr
 800080a:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 800080e:	0052      	lsls	r2, r2, #1
 8000810:	eb43 0303 	adc.w	r3, r3, r3
 8000814:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000818:	bf08      	it	eq
 800081a:	3d01      	subeq	r5, #1
 800081c:	d0f7      	beq.n	800080e <__aeabi_dmul+0x1c6>
 800081e:	ea43 0306 	orr.w	r3, r3, r6
 8000822:	4770      	bx	lr
 8000824:	ea94 0f0c 	teq	r4, ip
 8000828:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800082c:	bf18      	it	ne
 800082e:	ea95 0f0c 	teqne	r5, ip
 8000832:	d00c      	beq.n	800084e <__aeabi_dmul+0x206>
 8000834:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000838:	bf18      	it	ne
 800083a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800083e:	d1d1      	bne.n	80007e4 <__aeabi_dmul+0x19c>
 8000840:	ea81 0103 	eor.w	r1, r1, r3
 8000844:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000848:	f04f 0000 	mov.w	r0, #0
 800084c:	bd70      	pop	{r4, r5, r6, pc}
 800084e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000852:	bf06      	itte	eq
 8000854:	4610      	moveq	r0, r2
 8000856:	4619      	moveq	r1, r3
 8000858:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800085c:	d019      	beq.n	8000892 <__aeabi_dmul+0x24a>
 800085e:	ea94 0f0c 	teq	r4, ip
 8000862:	d102      	bne.n	800086a <__aeabi_dmul+0x222>
 8000864:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000868:	d113      	bne.n	8000892 <__aeabi_dmul+0x24a>
 800086a:	ea95 0f0c 	teq	r5, ip
 800086e:	d105      	bne.n	800087c <__aeabi_dmul+0x234>
 8000870:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000874:	bf1c      	itt	ne
 8000876:	4610      	movne	r0, r2
 8000878:	4619      	movne	r1, r3
 800087a:	d10a      	bne.n	8000892 <__aeabi_dmul+0x24a>
 800087c:	ea81 0103 	eor.w	r1, r1, r3
 8000880:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000884:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000888:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800088c:	f04f 0000 	mov.w	r0, #0
 8000890:	bd70      	pop	{r4, r5, r6, pc}
 8000892:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000896:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800089a:	bd70      	pop	{r4, r5, r6, pc}

0800089c <__aeabi_ddiv>:
 800089c:	b570      	push	{r4, r5, r6, lr}
 800089e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80008a2:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80008a6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80008aa:	bf1d      	ittte	ne
 80008ac:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008b0:	ea94 0f0c 	teqne	r4, ip
 80008b4:	ea95 0f0c 	teqne	r5, ip
 80008b8:	f000 f8a7 	bleq	8000a0a <__aeabi_ddiv+0x16e>
 80008bc:	eba4 0405 	sub.w	r4, r4, r5
 80008c0:	ea81 0e03 	eor.w	lr, r1, r3
 80008c4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008c8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008cc:	f000 8088 	beq.w	80009e0 <__aeabi_ddiv+0x144>
 80008d0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008d4:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 80008d8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008dc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008e0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008e4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008e8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ec:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008f0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008f4:	429d      	cmp	r5, r3
 80008f6:	bf08      	it	eq
 80008f8:	4296      	cmpeq	r6, r2
 80008fa:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008fe:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 8000902:	d202      	bcs.n	800090a <__aeabi_ddiv+0x6e>
 8000904:	085b      	lsrs	r3, r3, #1
 8000906:	ea4f 0232 	mov.w	r2, r2, rrx
 800090a:	1ab6      	subs	r6, r6, r2
 800090c:	eb65 0503 	sbc.w	r5, r5, r3
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 800091a:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 800091e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000922:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000926:	bf22      	ittt	cs
 8000928:	1ab6      	subcs	r6, r6, r2
 800092a:	4675      	movcs	r5, lr
 800092c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000930:	085b      	lsrs	r3, r3, #1
 8000932:	ea4f 0232 	mov.w	r2, r2, rrx
 8000936:	ebb6 0e02 	subs.w	lr, r6, r2
 800093a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800093e:	bf22      	ittt	cs
 8000940:	1ab6      	subcs	r6, r6, r2
 8000942:	4675      	movcs	r5, lr
 8000944:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000948:	085b      	lsrs	r3, r3, #1
 800094a:	ea4f 0232 	mov.w	r2, r2, rrx
 800094e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000952:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000956:	bf22      	ittt	cs
 8000958:	1ab6      	subcs	r6, r6, r2
 800095a:	4675      	movcs	r5, lr
 800095c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000960:	085b      	lsrs	r3, r3, #1
 8000962:	ea4f 0232 	mov.w	r2, r2, rrx
 8000966:	ebb6 0e02 	subs.w	lr, r6, r2
 800096a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800096e:	bf22      	ittt	cs
 8000970:	1ab6      	subcs	r6, r6, r2
 8000972:	4675      	movcs	r5, lr
 8000974:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000978:	ea55 0e06 	orrs.w	lr, r5, r6
 800097c:	d018      	beq.n	80009b0 <__aeabi_ddiv+0x114>
 800097e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000982:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000986:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800098a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800098e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000992:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000996:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800099a:	d1c0      	bne.n	800091e <__aeabi_ddiv+0x82>
 800099c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80009a0:	d10b      	bne.n	80009ba <__aeabi_ddiv+0x11e>
 80009a2:	ea41 0100 	orr.w	r1, r1, r0
 80009a6:	f04f 0000 	mov.w	r0, #0
 80009aa:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 80009ae:	e7b6      	b.n	800091e <__aeabi_ddiv+0x82>
 80009b0:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80009b4:	bf04      	itt	eq
 80009b6:	4301      	orreq	r1, r0
 80009b8:	2000      	moveq	r0, #0
 80009ba:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80009be:	bf88      	it	hi
 80009c0:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80009c4:	f63f aeaf 	bhi.w	8000726 <__aeabi_dmul+0xde>
 80009c8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009cc:	bf04      	itt	eq
 80009ce:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009d2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009d6:	f150 0000 	adcs.w	r0, r0, #0
 80009da:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009de:	bd70      	pop	{r4, r5, r6, pc}
 80009e0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009e4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009e8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ec:	bfc2      	ittt	gt
 80009ee:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009f2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009f6:	bd70      	popgt	{r4, r5, r6, pc}
 80009f8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009fc:	f04f 0e00 	mov.w	lr, #0
 8000a00:	3c01      	subs	r4, #1
 8000a02:	e690      	b.n	8000726 <__aeabi_dmul+0xde>
 8000a04:	ea45 0e06 	orr.w	lr, r5, r6
 8000a08:	e68d      	b.n	8000726 <__aeabi_dmul+0xde>
 8000a0a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000a0e:	ea94 0f0c 	teq	r4, ip
 8000a12:	bf08      	it	eq
 8000a14:	ea95 0f0c 	teqeq	r5, ip
 8000a18:	f43f af3b 	beq.w	8000892 <__aeabi_dmul+0x24a>
 8000a1c:	ea94 0f0c 	teq	r4, ip
 8000a20:	d10a      	bne.n	8000a38 <__aeabi_ddiv+0x19c>
 8000a22:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a26:	f47f af34 	bne.w	8000892 <__aeabi_dmul+0x24a>
 8000a2a:	ea95 0f0c 	teq	r5, ip
 8000a2e:	f47f af25 	bne.w	800087c <__aeabi_dmul+0x234>
 8000a32:	4610      	mov	r0, r2
 8000a34:	4619      	mov	r1, r3
 8000a36:	e72c      	b.n	8000892 <__aeabi_dmul+0x24a>
 8000a38:	ea95 0f0c 	teq	r5, ip
 8000a3c:	d106      	bne.n	8000a4c <__aeabi_ddiv+0x1b0>
 8000a3e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a42:	f43f aefd 	beq.w	8000840 <__aeabi_dmul+0x1f8>
 8000a46:	4610      	mov	r0, r2
 8000a48:	4619      	mov	r1, r3
 8000a4a:	e722      	b.n	8000892 <__aeabi_dmul+0x24a>
 8000a4c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a56:	f47f aec5 	bne.w	80007e4 <__aeabi_dmul+0x19c>
 8000a5a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a5e:	f47f af0d 	bne.w	800087c <__aeabi_dmul+0x234>
 8000a62:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a66:	f47f aeeb 	bne.w	8000840 <__aeabi_dmul+0x1f8>
 8000a6a:	e712      	b.n	8000892 <__aeabi_dmul+0x24a>

08000a6c <__gedf2>:
 8000a6c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a70:	e006      	b.n	8000a80 <__cmpdf2+0x4>
 8000a72:	bf00      	nop

08000a74 <__ledf2>:
 8000a74:	f04f 0c01 	mov.w	ip, #1
 8000a78:	e002      	b.n	8000a80 <__cmpdf2+0x4>
 8000a7a:	bf00      	nop

08000a7c <__cmpdf2>:
 8000a7c:	f04f 0c01 	mov.w	ip, #1
 8000a80:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a84:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a88:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a8c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a90:	bf18      	it	ne
 8000a92:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a96:	d01b      	beq.n	8000ad0 <__cmpdf2+0x54>
 8000a98:	b001      	add	sp, #4
 8000a9a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a9e:	bf0c      	ite	eq
 8000aa0:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000aa4:	ea91 0f03 	teqne	r1, r3
 8000aa8:	bf02      	ittt	eq
 8000aaa:	ea90 0f02 	teqeq	r0, r2
 8000aae:	2000      	moveq	r0, #0
 8000ab0:	4770      	bxeq	lr
 8000ab2:	f110 0f00 	cmn.w	r0, #0
 8000ab6:	ea91 0f03 	teq	r1, r3
 8000aba:	bf58      	it	pl
 8000abc:	4299      	cmppl	r1, r3
 8000abe:	bf08      	it	eq
 8000ac0:	4290      	cmpeq	r0, r2
 8000ac2:	bf2c      	ite	cs
 8000ac4:	17d8      	asrcs	r0, r3, #31
 8000ac6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aca:	f040 0001 	orr.w	r0, r0, #1
 8000ace:	4770      	bx	lr
 8000ad0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d102      	bne.n	8000ae0 <__cmpdf2+0x64>
 8000ada:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ade:	d107      	bne.n	8000af0 <__cmpdf2+0x74>
 8000ae0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ae4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ae8:	d1d6      	bne.n	8000a98 <__cmpdf2+0x1c>
 8000aea:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aee:	d0d3      	beq.n	8000a98 <__cmpdf2+0x1c>
 8000af0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000af4:	4770      	bx	lr
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdrcmple>:
 8000af8:	4684      	mov	ip, r0
 8000afa:	4610      	mov	r0, r2
 8000afc:	4662      	mov	r2, ip
 8000afe:	468c      	mov	ip, r1
 8000b00:	4619      	mov	r1, r3
 8000b02:	4663      	mov	r3, ip
 8000b04:	e000      	b.n	8000b08 <__aeabi_cdcmpeq>
 8000b06:	bf00      	nop

08000b08 <__aeabi_cdcmpeq>:
 8000b08:	b501      	push	{r0, lr}
 8000b0a:	f7ff ffb7 	bl	8000a7c <__cmpdf2>
 8000b0e:	2800      	cmp	r0, #0
 8000b10:	bf48      	it	mi
 8000b12:	f110 0f00 	cmnmi.w	r0, #0
 8000b16:	bd01      	pop	{r0, pc}

08000b18 <__aeabi_dcmpeq>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff fff4 	bl	8000b08 <__aeabi_cdcmpeq>
 8000b20:	bf0c      	ite	eq
 8000b22:	2001      	moveq	r0, #1
 8000b24:	2000      	movne	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmplt>:
 8000b2c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b30:	f7ff ffea 	bl	8000b08 <__aeabi_cdcmpeq>
 8000b34:	bf34      	ite	cc
 8000b36:	2001      	movcc	r0, #1
 8000b38:	2000      	movcs	r0, #0
 8000b3a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3e:	bf00      	nop

08000b40 <__aeabi_dcmple>:
 8000b40:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b44:	f7ff ffe0 	bl	8000b08 <__aeabi_cdcmpeq>
 8000b48:	bf94      	ite	ls
 8000b4a:	2001      	movls	r0, #1
 8000b4c:	2000      	movhi	r0, #0
 8000b4e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b52:	bf00      	nop

08000b54 <__aeabi_dcmpge>:
 8000b54:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b58:	f7ff ffce 	bl	8000af8 <__aeabi_cdrcmple>
 8000b5c:	bf94      	ite	ls
 8000b5e:	2001      	movls	r0, #1
 8000b60:	2000      	movhi	r0, #0
 8000b62:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b66:	bf00      	nop

08000b68 <__aeabi_dcmpgt>:
 8000b68:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b6c:	f7ff ffc4 	bl	8000af8 <__aeabi_cdrcmple>
 8000b70:	bf34      	ite	cc
 8000b72:	2001      	movcc	r0, #1
 8000b74:	2000      	movcs	r0, #0
 8000b76:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b7a:	bf00      	nop

08000b7c <__aeabi_dcmpun>:
 8000b7c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b84:	d102      	bne.n	8000b8c <__aeabi_dcmpun+0x10>
 8000b86:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b8a:	d10a      	bne.n	8000ba2 <__aeabi_dcmpun+0x26>
 8000b8c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b90:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b94:	d102      	bne.n	8000b9c <__aeabi_dcmpun+0x20>
 8000b96:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b9a:	d102      	bne.n	8000ba2 <__aeabi_dcmpun+0x26>
 8000b9c:	f04f 0000 	mov.w	r0, #0
 8000ba0:	4770      	bx	lr
 8000ba2:	f04f 0001 	mov.w	r0, #1
 8000ba6:	4770      	bx	lr

08000ba8 <__aeabi_d2iz>:
 8000ba8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bac:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000bb0:	d215      	bcs.n	8000bde <__aeabi_d2iz+0x36>
 8000bb2:	d511      	bpl.n	8000bd8 <__aeabi_d2iz+0x30>
 8000bb4:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000bb8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bbc:	d912      	bls.n	8000be4 <__aeabi_d2iz+0x3c>
 8000bbe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bc2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000bc6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bca:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000bce:	fa23 f002 	lsr.w	r0, r3, r2
 8000bd2:	bf18      	it	ne
 8000bd4:	4240      	negne	r0, r0
 8000bd6:	4770      	bx	lr
 8000bd8:	f04f 0000 	mov.w	r0, #0
 8000bdc:	4770      	bx	lr
 8000bde:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000be2:	d105      	bne.n	8000bf0 <__aeabi_d2iz+0x48>
 8000be4:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000be8:	bf08      	it	eq
 8000bea:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000bee:	4770      	bx	lr
 8000bf0:	f04f 0000 	mov.w	r0, #0
 8000bf4:	4770      	bx	lr
 8000bf6:	bf00      	nop

08000bf8 <__aeabi_uldivmod>:
 8000bf8:	b953      	cbnz	r3, 8000c10 <__aeabi_uldivmod+0x18>
 8000bfa:	b94a      	cbnz	r2, 8000c10 <__aeabi_uldivmod+0x18>
 8000bfc:	2900      	cmp	r1, #0
 8000bfe:	bf08      	it	eq
 8000c00:	2800      	cmpeq	r0, #0
 8000c02:	bf1c      	itt	ne
 8000c04:	f04f 31ff 	movne.w	r1, #4294967295
 8000c08:	f04f 30ff 	movne.w	r0, #4294967295
 8000c0c:	f000 b96a 	b.w	8000ee4 <__aeabi_idiv0>
 8000c10:	f1ad 0c08 	sub.w	ip, sp, #8
 8000c14:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000c18:	f000 f806 	bl	8000c28 <__udivmoddi4>
 8000c1c:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c20:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c24:	b004      	add	sp, #16
 8000c26:	4770      	bx	lr

08000c28 <__udivmoddi4>:
 8000c28:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c2c:	9d08      	ldr	r5, [sp, #32]
 8000c2e:	460c      	mov	r4, r1
 8000c30:	2b00      	cmp	r3, #0
 8000c32:	d14e      	bne.n	8000cd2 <__udivmoddi4+0xaa>
 8000c34:	4694      	mov	ip, r2
 8000c36:	458c      	cmp	ip, r1
 8000c38:	4686      	mov	lr, r0
 8000c3a:	fab2 f282 	clz	r2, r2
 8000c3e:	d962      	bls.n	8000d06 <__udivmoddi4+0xde>
 8000c40:	b14a      	cbz	r2, 8000c56 <__udivmoddi4+0x2e>
 8000c42:	f1c2 0320 	rsb	r3, r2, #32
 8000c46:	4091      	lsls	r1, r2
 8000c48:	fa20 f303 	lsr.w	r3, r0, r3
 8000c4c:	fa0c fc02 	lsl.w	ip, ip, r2
 8000c50:	4319      	orrs	r1, r3
 8000c52:	fa00 fe02 	lsl.w	lr, r0, r2
 8000c56:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000c5a:	fa1f f68c 	uxth.w	r6, ip
 8000c5e:	fbb1 f4f7 	udiv	r4, r1, r7
 8000c62:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000c66:	fb07 1114 	mls	r1, r7, r4, r1
 8000c6a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000c6e:	fb04 f106 	mul.w	r1, r4, r6
 8000c72:	4299      	cmp	r1, r3
 8000c74:	d90a      	bls.n	8000c8c <__udivmoddi4+0x64>
 8000c76:	eb1c 0303 	adds.w	r3, ip, r3
 8000c7a:	f104 30ff 	add.w	r0, r4, #4294967295
 8000c7e:	f080 8112 	bcs.w	8000ea6 <__udivmoddi4+0x27e>
 8000c82:	4299      	cmp	r1, r3
 8000c84:	f240 810f 	bls.w	8000ea6 <__udivmoddi4+0x27e>
 8000c88:	3c02      	subs	r4, #2
 8000c8a:	4463      	add	r3, ip
 8000c8c:	1a59      	subs	r1, r3, r1
 8000c8e:	fa1f f38e 	uxth.w	r3, lr
 8000c92:	fbb1 f0f7 	udiv	r0, r1, r7
 8000c96:	fb07 1110 	mls	r1, r7, r0, r1
 8000c9a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000c9e:	fb00 f606 	mul.w	r6, r0, r6
 8000ca2:	429e      	cmp	r6, r3
 8000ca4:	d90a      	bls.n	8000cbc <__udivmoddi4+0x94>
 8000ca6:	eb1c 0303 	adds.w	r3, ip, r3
 8000caa:	f100 31ff 	add.w	r1, r0, #4294967295
 8000cae:	f080 80fc 	bcs.w	8000eaa <__udivmoddi4+0x282>
 8000cb2:	429e      	cmp	r6, r3
 8000cb4:	f240 80f9 	bls.w	8000eaa <__udivmoddi4+0x282>
 8000cb8:	4463      	add	r3, ip
 8000cba:	3802      	subs	r0, #2
 8000cbc:	1b9b      	subs	r3, r3, r6
 8000cbe:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8000cc2:	2100      	movs	r1, #0
 8000cc4:	b11d      	cbz	r5, 8000cce <__udivmoddi4+0xa6>
 8000cc6:	40d3      	lsrs	r3, r2
 8000cc8:	2200      	movs	r2, #0
 8000cca:	e9c5 3200 	strd	r3, r2, [r5]
 8000cce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cd2:	428b      	cmp	r3, r1
 8000cd4:	d905      	bls.n	8000ce2 <__udivmoddi4+0xba>
 8000cd6:	b10d      	cbz	r5, 8000cdc <__udivmoddi4+0xb4>
 8000cd8:	e9c5 0100 	strd	r0, r1, [r5]
 8000cdc:	2100      	movs	r1, #0
 8000cde:	4608      	mov	r0, r1
 8000ce0:	e7f5      	b.n	8000cce <__udivmoddi4+0xa6>
 8000ce2:	fab3 f183 	clz	r1, r3
 8000ce6:	2900      	cmp	r1, #0
 8000ce8:	d146      	bne.n	8000d78 <__udivmoddi4+0x150>
 8000cea:	42a3      	cmp	r3, r4
 8000cec:	d302      	bcc.n	8000cf4 <__udivmoddi4+0xcc>
 8000cee:	4290      	cmp	r0, r2
 8000cf0:	f0c0 80f0 	bcc.w	8000ed4 <__udivmoddi4+0x2ac>
 8000cf4:	1a86      	subs	r6, r0, r2
 8000cf6:	eb64 0303 	sbc.w	r3, r4, r3
 8000cfa:	2001      	movs	r0, #1
 8000cfc:	2d00      	cmp	r5, #0
 8000cfe:	d0e6      	beq.n	8000cce <__udivmoddi4+0xa6>
 8000d00:	e9c5 6300 	strd	r6, r3, [r5]
 8000d04:	e7e3      	b.n	8000cce <__udivmoddi4+0xa6>
 8000d06:	2a00      	cmp	r2, #0
 8000d08:	f040 8090 	bne.w	8000e2c <__udivmoddi4+0x204>
 8000d0c:	eba1 040c 	sub.w	r4, r1, ip
 8000d10:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000d14:	fa1f f78c 	uxth.w	r7, ip
 8000d18:	2101      	movs	r1, #1
 8000d1a:	fbb4 f6f8 	udiv	r6, r4, r8
 8000d1e:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000d22:	fb08 4416 	mls	r4, r8, r6, r4
 8000d26:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000d2a:	fb07 f006 	mul.w	r0, r7, r6
 8000d2e:	4298      	cmp	r0, r3
 8000d30:	d908      	bls.n	8000d44 <__udivmoddi4+0x11c>
 8000d32:	eb1c 0303 	adds.w	r3, ip, r3
 8000d36:	f106 34ff 	add.w	r4, r6, #4294967295
 8000d3a:	d202      	bcs.n	8000d42 <__udivmoddi4+0x11a>
 8000d3c:	4298      	cmp	r0, r3
 8000d3e:	f200 80cd 	bhi.w	8000edc <__udivmoddi4+0x2b4>
 8000d42:	4626      	mov	r6, r4
 8000d44:	1a1c      	subs	r4, r3, r0
 8000d46:	fa1f f38e 	uxth.w	r3, lr
 8000d4a:	fbb4 f0f8 	udiv	r0, r4, r8
 8000d4e:	fb08 4410 	mls	r4, r8, r0, r4
 8000d52:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000d56:	fb00 f707 	mul.w	r7, r0, r7
 8000d5a:	429f      	cmp	r7, r3
 8000d5c:	d908      	bls.n	8000d70 <__udivmoddi4+0x148>
 8000d5e:	eb1c 0303 	adds.w	r3, ip, r3
 8000d62:	f100 34ff 	add.w	r4, r0, #4294967295
 8000d66:	d202      	bcs.n	8000d6e <__udivmoddi4+0x146>
 8000d68:	429f      	cmp	r7, r3
 8000d6a:	f200 80b0 	bhi.w	8000ece <__udivmoddi4+0x2a6>
 8000d6e:	4620      	mov	r0, r4
 8000d70:	1bdb      	subs	r3, r3, r7
 8000d72:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000d76:	e7a5      	b.n	8000cc4 <__udivmoddi4+0x9c>
 8000d78:	f1c1 0620 	rsb	r6, r1, #32
 8000d7c:	408b      	lsls	r3, r1
 8000d7e:	fa22 f706 	lsr.w	r7, r2, r6
 8000d82:	431f      	orrs	r7, r3
 8000d84:	fa20 fc06 	lsr.w	ip, r0, r6
 8000d88:	fa04 f301 	lsl.w	r3, r4, r1
 8000d8c:	ea43 030c 	orr.w	r3, r3, ip
 8000d90:	40f4      	lsrs	r4, r6
 8000d92:	fa00 f801 	lsl.w	r8, r0, r1
 8000d96:	0c38      	lsrs	r0, r7, #16
 8000d98:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000d9c:	fbb4 fef0 	udiv	lr, r4, r0
 8000da0:	fa1f fc87 	uxth.w	ip, r7
 8000da4:	fb00 441e 	mls	r4, r0, lr, r4
 8000da8:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000dac:	fb0e f90c 	mul.w	r9, lr, ip
 8000db0:	45a1      	cmp	r9, r4
 8000db2:	fa02 f201 	lsl.w	r2, r2, r1
 8000db6:	d90a      	bls.n	8000dce <__udivmoddi4+0x1a6>
 8000db8:	193c      	adds	r4, r7, r4
 8000dba:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000dbe:	f080 8084 	bcs.w	8000eca <__udivmoddi4+0x2a2>
 8000dc2:	45a1      	cmp	r9, r4
 8000dc4:	f240 8081 	bls.w	8000eca <__udivmoddi4+0x2a2>
 8000dc8:	f1ae 0e02 	sub.w	lr, lr, #2
 8000dcc:	443c      	add	r4, r7
 8000dce:	eba4 0409 	sub.w	r4, r4, r9
 8000dd2:	fa1f f983 	uxth.w	r9, r3
 8000dd6:	fbb4 f3f0 	udiv	r3, r4, r0
 8000dda:	fb00 4413 	mls	r4, r0, r3, r4
 8000dde:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000de2:	fb03 fc0c 	mul.w	ip, r3, ip
 8000de6:	45a4      	cmp	ip, r4
 8000de8:	d907      	bls.n	8000dfa <__udivmoddi4+0x1d2>
 8000dea:	193c      	adds	r4, r7, r4
 8000dec:	f103 30ff 	add.w	r0, r3, #4294967295
 8000df0:	d267      	bcs.n	8000ec2 <__udivmoddi4+0x29a>
 8000df2:	45a4      	cmp	ip, r4
 8000df4:	d965      	bls.n	8000ec2 <__udivmoddi4+0x29a>
 8000df6:	3b02      	subs	r3, #2
 8000df8:	443c      	add	r4, r7
 8000dfa:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8000dfe:	fba0 9302 	umull	r9, r3, r0, r2
 8000e02:	eba4 040c 	sub.w	r4, r4, ip
 8000e06:	429c      	cmp	r4, r3
 8000e08:	46ce      	mov	lr, r9
 8000e0a:	469c      	mov	ip, r3
 8000e0c:	d351      	bcc.n	8000eb2 <__udivmoddi4+0x28a>
 8000e0e:	d04e      	beq.n	8000eae <__udivmoddi4+0x286>
 8000e10:	b155      	cbz	r5, 8000e28 <__udivmoddi4+0x200>
 8000e12:	ebb8 030e 	subs.w	r3, r8, lr
 8000e16:	eb64 040c 	sbc.w	r4, r4, ip
 8000e1a:	fa04 f606 	lsl.w	r6, r4, r6
 8000e1e:	40cb      	lsrs	r3, r1
 8000e20:	431e      	orrs	r6, r3
 8000e22:	40cc      	lsrs	r4, r1
 8000e24:	e9c5 6400 	strd	r6, r4, [r5]
 8000e28:	2100      	movs	r1, #0
 8000e2a:	e750      	b.n	8000cce <__udivmoddi4+0xa6>
 8000e2c:	f1c2 0320 	rsb	r3, r2, #32
 8000e30:	fa20 f103 	lsr.w	r1, r0, r3
 8000e34:	fa0c fc02 	lsl.w	ip, ip, r2
 8000e38:	fa24 f303 	lsr.w	r3, r4, r3
 8000e3c:	4094      	lsls	r4, r2
 8000e3e:	430c      	orrs	r4, r1
 8000e40:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000e44:	fa00 fe02 	lsl.w	lr, r0, r2
 8000e48:	fa1f f78c 	uxth.w	r7, ip
 8000e4c:	fbb3 f0f8 	udiv	r0, r3, r8
 8000e50:	fb08 3110 	mls	r1, r8, r0, r3
 8000e54:	0c23      	lsrs	r3, r4, #16
 8000e56:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000e5a:	fb00 f107 	mul.w	r1, r0, r7
 8000e5e:	4299      	cmp	r1, r3
 8000e60:	d908      	bls.n	8000e74 <__udivmoddi4+0x24c>
 8000e62:	eb1c 0303 	adds.w	r3, ip, r3
 8000e66:	f100 36ff 	add.w	r6, r0, #4294967295
 8000e6a:	d22c      	bcs.n	8000ec6 <__udivmoddi4+0x29e>
 8000e6c:	4299      	cmp	r1, r3
 8000e6e:	d92a      	bls.n	8000ec6 <__udivmoddi4+0x29e>
 8000e70:	3802      	subs	r0, #2
 8000e72:	4463      	add	r3, ip
 8000e74:	1a5b      	subs	r3, r3, r1
 8000e76:	b2a4      	uxth	r4, r4
 8000e78:	fbb3 f1f8 	udiv	r1, r3, r8
 8000e7c:	fb08 3311 	mls	r3, r8, r1, r3
 8000e80:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000e84:	fb01 f307 	mul.w	r3, r1, r7
 8000e88:	42a3      	cmp	r3, r4
 8000e8a:	d908      	bls.n	8000e9e <__udivmoddi4+0x276>
 8000e8c:	eb1c 0404 	adds.w	r4, ip, r4
 8000e90:	f101 36ff 	add.w	r6, r1, #4294967295
 8000e94:	d213      	bcs.n	8000ebe <__udivmoddi4+0x296>
 8000e96:	42a3      	cmp	r3, r4
 8000e98:	d911      	bls.n	8000ebe <__udivmoddi4+0x296>
 8000e9a:	3902      	subs	r1, #2
 8000e9c:	4464      	add	r4, ip
 8000e9e:	1ae4      	subs	r4, r4, r3
 8000ea0:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8000ea4:	e739      	b.n	8000d1a <__udivmoddi4+0xf2>
 8000ea6:	4604      	mov	r4, r0
 8000ea8:	e6f0      	b.n	8000c8c <__udivmoddi4+0x64>
 8000eaa:	4608      	mov	r0, r1
 8000eac:	e706      	b.n	8000cbc <__udivmoddi4+0x94>
 8000eae:	45c8      	cmp	r8, r9
 8000eb0:	d2ae      	bcs.n	8000e10 <__udivmoddi4+0x1e8>
 8000eb2:	ebb9 0e02 	subs.w	lr, r9, r2
 8000eb6:	eb63 0c07 	sbc.w	ip, r3, r7
 8000eba:	3801      	subs	r0, #1
 8000ebc:	e7a8      	b.n	8000e10 <__udivmoddi4+0x1e8>
 8000ebe:	4631      	mov	r1, r6
 8000ec0:	e7ed      	b.n	8000e9e <__udivmoddi4+0x276>
 8000ec2:	4603      	mov	r3, r0
 8000ec4:	e799      	b.n	8000dfa <__udivmoddi4+0x1d2>
 8000ec6:	4630      	mov	r0, r6
 8000ec8:	e7d4      	b.n	8000e74 <__udivmoddi4+0x24c>
 8000eca:	46d6      	mov	lr, sl
 8000ecc:	e77f      	b.n	8000dce <__udivmoddi4+0x1a6>
 8000ece:	4463      	add	r3, ip
 8000ed0:	3802      	subs	r0, #2
 8000ed2:	e74d      	b.n	8000d70 <__udivmoddi4+0x148>
 8000ed4:	4606      	mov	r6, r0
 8000ed6:	4623      	mov	r3, r4
 8000ed8:	4608      	mov	r0, r1
 8000eda:	e70f      	b.n	8000cfc <__udivmoddi4+0xd4>
 8000edc:	3e02      	subs	r6, #2
 8000ede:	4463      	add	r3, ip
 8000ee0:	e730      	b.n	8000d44 <__udivmoddi4+0x11c>
 8000ee2:	bf00      	nop

08000ee4 <__aeabi_idiv0>:
 8000ee4:	4770      	bx	lr
 8000ee6:	bf00      	nop

08000ee8 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8000ee8:	b480      	push	{r7}
 8000eea:	af00      	add	r7, sp, #0
  return 1;
 8000eec:	2301      	movs	r3, #1
}
 8000eee:	4618      	mov	r0, r3
 8000ef0:	46bd      	mov	sp, r7
 8000ef2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ef6:	4770      	bx	lr

08000ef8 <_kill>:

int _kill(int pid, int sig)
{
 8000ef8:	b580      	push	{r7, lr}
 8000efa:	b082      	sub	sp, #8
 8000efc:	af00      	add	r7, sp, #0
 8000efe:	6078      	str	r0, [r7, #4]
 8000f00:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8000f02:	f001 fd67 	bl	80029d4 <__errno>
 8000f06:	4603      	mov	r3, r0
 8000f08:	2216      	movs	r2, #22
 8000f0a:	601a      	str	r2, [r3, #0]
  return -1;
 8000f0c:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000f10:	4618      	mov	r0, r3
 8000f12:	3708      	adds	r7, #8
 8000f14:	46bd      	mov	sp, r7
 8000f16:	bd80      	pop	{r7, pc}

08000f18 <_exit>:

void _exit (int status)
{
 8000f18:	b580      	push	{r7, lr}
 8000f1a:	b082      	sub	sp, #8
 8000f1c:	af00      	add	r7, sp, #0
 8000f1e:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8000f20:	f04f 31ff 	mov.w	r1, #4294967295
 8000f24:	6878      	ldr	r0, [r7, #4]
 8000f26:	f7ff ffe7 	bl	8000ef8 <_kill>
  while (1) {}    /* Make sure we hang here */
 8000f2a:	bf00      	nop
 8000f2c:	e7fd      	b.n	8000f2a <_exit+0x12>

08000f2e <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000f2e:	b580      	push	{r7, lr}
 8000f30:	b086      	sub	sp, #24
 8000f32:	af00      	add	r7, sp, #0
 8000f34:	60f8      	str	r0, [r7, #12]
 8000f36:	60b9      	str	r1, [r7, #8]
 8000f38:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000f3a:	2300      	movs	r3, #0
 8000f3c:	617b      	str	r3, [r7, #20]
 8000f3e:	e00a      	b.n	8000f56 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000f40:	f3af 8000 	nop.w
 8000f44:	4601      	mov	r1, r0
 8000f46:	68bb      	ldr	r3, [r7, #8]
 8000f48:	1c5a      	adds	r2, r3, #1
 8000f4a:	60ba      	str	r2, [r7, #8]
 8000f4c:	b2ca      	uxtb	r2, r1
 8000f4e:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000f50:	697b      	ldr	r3, [r7, #20]
 8000f52:	3301      	adds	r3, #1
 8000f54:	617b      	str	r3, [r7, #20]
 8000f56:	697a      	ldr	r2, [r7, #20]
 8000f58:	687b      	ldr	r3, [r7, #4]
 8000f5a:	429a      	cmp	r2, r3
 8000f5c:	dbf0      	blt.n	8000f40 <_read+0x12>
  }

  return len;
 8000f5e:	687b      	ldr	r3, [r7, #4]
}
 8000f60:	4618      	mov	r0, r3
 8000f62:	3718      	adds	r7, #24
 8000f64:	46bd      	mov	sp, r7
 8000f66:	bd80      	pop	{r7, pc}

08000f68 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000f68:	b580      	push	{r7, lr}
 8000f6a:	b086      	sub	sp, #24
 8000f6c:	af00      	add	r7, sp, #0
 8000f6e:	60f8      	str	r0, [r7, #12]
 8000f70:	60b9      	str	r1, [r7, #8]
 8000f72:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000f74:	2300      	movs	r3, #0
 8000f76:	617b      	str	r3, [r7, #20]
 8000f78:	e009      	b.n	8000f8e <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000f7a:	68bb      	ldr	r3, [r7, #8]
 8000f7c:	1c5a      	adds	r2, r3, #1
 8000f7e:	60ba      	str	r2, [r7, #8]
 8000f80:	781b      	ldrb	r3, [r3, #0]
 8000f82:	4618      	mov	r0, r3
 8000f84:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000f88:	697b      	ldr	r3, [r7, #20]
 8000f8a:	3301      	adds	r3, #1
 8000f8c:	617b      	str	r3, [r7, #20]
 8000f8e:	697a      	ldr	r2, [r7, #20]
 8000f90:	687b      	ldr	r3, [r7, #4]
 8000f92:	429a      	cmp	r2, r3
 8000f94:	dbf1      	blt.n	8000f7a <_write+0x12>
  }
  return len;
 8000f96:	687b      	ldr	r3, [r7, #4]
}
 8000f98:	4618      	mov	r0, r3
 8000f9a:	3718      	adds	r7, #24
 8000f9c:	46bd      	mov	sp, r7
 8000f9e:	bd80      	pop	{r7, pc}

08000fa0 <_close>:

int _close(int file)
{
 8000fa0:	b480      	push	{r7}
 8000fa2:	b083      	sub	sp, #12
 8000fa4:	af00      	add	r7, sp, #0
 8000fa6:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000fa8:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000fac:	4618      	mov	r0, r3
 8000fae:	370c      	adds	r7, #12
 8000fb0:	46bd      	mov	sp, r7
 8000fb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fb6:	4770      	bx	lr

08000fb8 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000fb8:	b480      	push	{r7}
 8000fba:	b083      	sub	sp, #12
 8000fbc:	af00      	add	r7, sp, #0
 8000fbe:	6078      	str	r0, [r7, #4]
 8000fc0:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000fc2:	683b      	ldr	r3, [r7, #0]
 8000fc4:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8000fc8:	605a      	str	r2, [r3, #4]
  return 0;
 8000fca:	2300      	movs	r3, #0
}
 8000fcc:	4618      	mov	r0, r3
 8000fce:	370c      	adds	r7, #12
 8000fd0:	46bd      	mov	sp, r7
 8000fd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fd6:	4770      	bx	lr

08000fd8 <_isatty>:

int _isatty(int file)
{
 8000fd8:	b480      	push	{r7}
 8000fda:	b083      	sub	sp, #12
 8000fdc:	af00      	add	r7, sp, #0
 8000fde:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000fe0:	2301      	movs	r3, #1
}
 8000fe2:	4618      	mov	r0, r3
 8000fe4:	370c      	adds	r7, #12
 8000fe6:	46bd      	mov	sp, r7
 8000fe8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fec:	4770      	bx	lr

08000fee <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000fee:	b480      	push	{r7}
 8000ff0:	b085      	sub	sp, #20
 8000ff2:	af00      	add	r7, sp, #0
 8000ff4:	60f8      	str	r0, [r7, #12]
 8000ff6:	60b9      	str	r1, [r7, #8]
 8000ff8:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000ffa:	2300      	movs	r3, #0
}
 8000ffc:	4618      	mov	r0, r3
 8000ffe:	3714      	adds	r7, #20
 8001000:	46bd      	mov	sp, r7
 8001002:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001006:	4770      	bx	lr

08001008 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001008:	b580      	push	{r7, lr}
 800100a:	b086      	sub	sp, #24
 800100c:	af00      	add	r7, sp, #0
 800100e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001010:	4a14      	ldr	r2, [pc, #80]	@ (8001064 <_sbrk+0x5c>)
 8001012:	4b15      	ldr	r3, [pc, #84]	@ (8001068 <_sbrk+0x60>)
 8001014:	1ad3      	subs	r3, r2, r3
 8001016:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001018:	697b      	ldr	r3, [r7, #20]
 800101a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800101c:	4b13      	ldr	r3, [pc, #76]	@ (800106c <_sbrk+0x64>)
 800101e:	681b      	ldr	r3, [r3, #0]
 8001020:	2b00      	cmp	r3, #0
 8001022:	d102      	bne.n	800102a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001024:	4b11      	ldr	r3, [pc, #68]	@ (800106c <_sbrk+0x64>)
 8001026:	4a12      	ldr	r2, [pc, #72]	@ (8001070 <_sbrk+0x68>)
 8001028:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800102a:	4b10      	ldr	r3, [pc, #64]	@ (800106c <_sbrk+0x64>)
 800102c:	681a      	ldr	r2, [r3, #0]
 800102e:	687b      	ldr	r3, [r7, #4]
 8001030:	4413      	add	r3, r2
 8001032:	693a      	ldr	r2, [r7, #16]
 8001034:	429a      	cmp	r2, r3
 8001036:	d207      	bcs.n	8001048 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001038:	f001 fccc 	bl	80029d4 <__errno>
 800103c:	4603      	mov	r3, r0
 800103e:	220c      	movs	r2, #12
 8001040:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001042:	f04f 33ff 	mov.w	r3, #4294967295
 8001046:	e009      	b.n	800105c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001048:	4b08      	ldr	r3, [pc, #32]	@ (800106c <_sbrk+0x64>)
 800104a:	681b      	ldr	r3, [r3, #0]
 800104c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800104e:	4b07      	ldr	r3, [pc, #28]	@ (800106c <_sbrk+0x64>)
 8001050:	681a      	ldr	r2, [r3, #0]
 8001052:	687b      	ldr	r3, [r7, #4]
 8001054:	4413      	add	r3, r2
 8001056:	4a05      	ldr	r2, [pc, #20]	@ (800106c <_sbrk+0x64>)
 8001058:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800105a:	68fb      	ldr	r3, [r7, #12]
}
 800105c:	4618      	mov	r0, r3
 800105e:	3718      	adds	r7, #24
 8001060:	46bd      	mov	sp, r7
 8001062:	bd80      	pop	{r7, pc}
 8001064:	20040000 	.word	0x20040000
 8001068:	00000400 	.word	0x00000400
 800106c:	200001ec 	.word	0x200001ec
 8001070:	20000340 	.word	0x20000340

08001074 <SystemInit>:
  *         SystemFrequency variable.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8001074:	b480      	push	{r7}
 8001076:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8001078:	4b08      	ldr	r3, [pc, #32]	@ (800109c <SystemInit+0x28>)
 800107a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800107e:	4a07      	ldr	r2, [pc, #28]	@ (800109c <SystemInit+0x28>)
 8001080:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001084:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
#endif

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 8001088:	4b04      	ldr	r3, [pc, #16]	@ (800109c <SystemInit+0x28>)
 800108a:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 800108e:	609a      	str	r2, [r3, #8]
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001090:	bf00      	nop
 8001092:	46bd      	mov	sp, r7
 8001094:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001098:	4770      	bx	lr
 800109a:	bf00      	nop
 800109c:	e000ed00 	.word	0xe000ed00

080010a0 <Clock_Setup_OSC>:
 */

#include <clock.h>

Error_HandleTypeDef Clock_Setup_OSC(OSC_ConfigSetTypeDef *osc_config)
{
 80010a0:	b480      	push	{r7}
 80010a2:	b085      	sub	sp, #20
 80010a4:	af00      	add	r7, sp, #0
 80010a6:	6078      	str	r0, [r7, #4]
	uint32_t TickStart;
	if(osc_config == NULL)
 80010a8:	687b      	ldr	r3, [r7, #4]
 80010aa:	2b00      	cmp	r3, #0
 80010ac:	d101      	bne.n	80010b2 <Clock_Setup_OSC+0x12>
	{
		return STATE_ERROR;
 80010ae:	2301      	movs	r3, #1
 80010b0:	e0fa      	b.n	80012a8 <Clock_Setup_OSC+0x208>
	}

	/* ---------------------HSE Configuration--------------------- */
	if((osc_config->OSC_TYPE & OSC_TYPE_HSE) == OSC_TYPE_HSE)
 80010b2:	687b      	ldr	r3, [r7, #4]
 80010b4:	681b      	ldr	r3, [r3, #0]
 80010b6:	f003 0301 	and.w	r3, r3, #1
 80010ba:	2b00      	cmp	r3, #0
 80010bc:	f000 8083 	beq.w	80011c6 <Clock_Setup_OSC+0x126>
	{
		if((RCC->CFGR & RCC_CFGR_SWS) == RCC_CFGR_SWS_HSE || ((RCC->CFGR & RCC_CFGR_SWS) == RCC_CFGR_SWS_PLL && (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC_HSE) == RCC_PLLCFGR_PLLSRC_HSE))
 80010c0:	4b7c      	ldr	r3, [pc, #496]	@ (80012b4 <Clock_Setup_OSC+0x214>)
 80010c2:	689b      	ldr	r3, [r3, #8]
 80010c4:	f003 030c 	and.w	r3, r3, #12
 80010c8:	2b04      	cmp	r3, #4
 80010ca:	d00c      	beq.n	80010e6 <Clock_Setup_OSC+0x46>
 80010cc:	4b79      	ldr	r3, [pc, #484]	@ (80012b4 <Clock_Setup_OSC+0x214>)
 80010ce:	689b      	ldr	r3, [r3, #8]
 80010d0:	f003 030c 	and.w	r3, r3, #12
 80010d4:	2b08      	cmp	r3, #8
 80010d6:	d112      	bne.n	80010fe <Clock_Setup_OSC+0x5e>
 80010d8:	4b76      	ldr	r3, [pc, #472]	@ (80012b4 <Clock_Setup_OSC+0x214>)
 80010da:	685b      	ldr	r3, [r3, #4]
 80010dc:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80010e0:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 80010e4:	d10b      	bne.n	80010fe <Clock_Setup_OSC+0x5e>
		{
			if((RCC->CR & RCC_CR_HSERDY) != RESET && (osc_config->HSE_SET.HSE_STATE) == HSE_OFF)
 80010e6:	4b73      	ldr	r3, [pc, #460]	@ (80012b4 <Clock_Setup_OSC+0x214>)
 80010e8:	681b      	ldr	r3, [r3, #0]
 80010ea:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80010ee:	2b00      	cmp	r3, #0
 80010f0:	d068      	beq.n	80011c4 <Clock_Setup_OSC+0x124>
 80010f2:	687b      	ldr	r3, [r7, #4]
 80010f4:	7f1b      	ldrb	r3, [r3, #28]
 80010f6:	2b00      	cmp	r3, #0
 80010f8:	d164      	bne.n	80011c4 <Clock_Setup_OSC+0x124>
			{
				return STATE_ERROR;
 80010fa:	2301      	movs	r3, #1
 80010fc:	e0d4      	b.n	80012a8 <Clock_Setup_OSC+0x208>
			}
		}
		else
		{
			HSE_CONFIG(osc_config->HSE_SET.HSE_STATE);
 80010fe:	687b      	ldr	r3, [r7, #4]
 8001100:	7f1b      	ldrb	r3, [r3, #28]
 8001102:	2b00      	cmp	r3, #0
 8001104:	d10c      	bne.n	8001120 <Clock_Setup_OSC+0x80>
 8001106:	4b6b      	ldr	r3, [pc, #428]	@ (80012b4 <Clock_Setup_OSC+0x214>)
 8001108:	681b      	ldr	r3, [r3, #0]
 800110a:	4a6a      	ldr	r2, [pc, #424]	@ (80012b4 <Clock_Setup_OSC+0x214>)
 800110c:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8001110:	6013      	str	r3, [r2, #0]
 8001112:	4b68      	ldr	r3, [pc, #416]	@ (80012b4 <Clock_Setup_OSC+0x214>)
 8001114:	681b      	ldr	r3, [r3, #0]
 8001116:	4a67      	ldr	r2, [pc, #412]	@ (80012b4 <Clock_Setup_OSC+0x214>)
 8001118:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800111c:	6013      	str	r3, [r2, #0]
 800111e:	e027      	b.n	8001170 <Clock_Setup_OSC+0xd0>
 8001120:	687b      	ldr	r3, [r7, #4]
 8001122:	7f1b      	ldrb	r3, [r3, #28]
 8001124:	2b01      	cmp	r3, #1
 8001126:	d106      	bne.n	8001136 <Clock_Setup_OSC+0x96>
 8001128:	4b62      	ldr	r3, [pc, #392]	@ (80012b4 <Clock_Setup_OSC+0x214>)
 800112a:	681b      	ldr	r3, [r3, #0]
 800112c:	4a61      	ldr	r2, [pc, #388]	@ (80012b4 <Clock_Setup_OSC+0x214>)
 800112e:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8001132:	6013      	str	r3, [r2, #0]
 8001134:	e01c      	b.n	8001170 <Clock_Setup_OSC+0xd0>
 8001136:	687b      	ldr	r3, [r7, #4]
 8001138:	7f1b      	ldrb	r3, [r3, #28]
 800113a:	2b02      	cmp	r3, #2
 800113c:	d10c      	bne.n	8001158 <Clock_Setup_OSC+0xb8>
 800113e:	4b5d      	ldr	r3, [pc, #372]	@ (80012b4 <Clock_Setup_OSC+0x214>)
 8001140:	681b      	ldr	r3, [r3, #0]
 8001142:	4a5c      	ldr	r2, [pc, #368]	@ (80012b4 <Clock_Setup_OSC+0x214>)
 8001144:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8001148:	6013      	str	r3, [r2, #0]
 800114a:	4b5a      	ldr	r3, [pc, #360]	@ (80012b4 <Clock_Setup_OSC+0x214>)
 800114c:	681b      	ldr	r3, [r3, #0]
 800114e:	4a59      	ldr	r2, [pc, #356]	@ (80012b4 <Clock_Setup_OSC+0x214>)
 8001150:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8001154:	6013      	str	r3, [r2, #0]
 8001156:	e00b      	b.n	8001170 <Clock_Setup_OSC+0xd0>
 8001158:	4b56      	ldr	r3, [pc, #344]	@ (80012b4 <Clock_Setup_OSC+0x214>)
 800115a:	681b      	ldr	r3, [r3, #0]
 800115c:	4a55      	ldr	r2, [pc, #340]	@ (80012b4 <Clock_Setup_OSC+0x214>)
 800115e:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8001162:	6013      	str	r3, [r2, #0]
 8001164:	4b53      	ldr	r3, [pc, #332]	@ (80012b4 <Clock_Setup_OSC+0x214>)
 8001166:	681b      	ldr	r3, [r3, #0]
 8001168:	4a52      	ldr	r2, [pc, #328]	@ (80012b4 <Clock_Setup_OSC+0x214>)
 800116a:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800116e:	6013      	str	r3, [r2, #0]
			if(osc_config->HSE_SET.HSE_STATE == HSE_ON)
 8001170:	687b      	ldr	r3, [r7, #4]
 8001172:	7f1b      	ldrb	r3, [r3, #28]
 8001174:	2b01      	cmp	r3, #1
 8001176:	d112      	bne.n	800119e <Clock_Setup_OSC+0xfe>
			{
				TickStart = uwTick;
 8001178:	4b4f      	ldr	r3, [pc, #316]	@ (80012b8 <Clock_Setup_OSC+0x218>)
 800117a:	681b      	ldr	r3, [r3, #0]
 800117c:	60fb      	str	r3, [r7, #12]

				while((RCC->CR & RCC_CR_HSERDY) == RESET)
 800117e:	e007      	b.n	8001190 <Clock_Setup_OSC+0xf0>
				{
					if((uwTick - TickStart) > HSE_TIMEOUT_VALUE)
 8001180:	4b4d      	ldr	r3, [pc, #308]	@ (80012b8 <Clock_Setup_OSC+0x218>)
 8001182:	681a      	ldr	r2, [r3, #0]
 8001184:	68fb      	ldr	r3, [r7, #12]
 8001186:	1ad3      	subs	r3, r2, r3
 8001188:	2b64      	cmp	r3, #100	@ 0x64
 800118a:	d901      	bls.n	8001190 <Clock_Setup_OSC+0xf0>
					{
						return STATE_TIMEOUT;
 800118c:	2303      	movs	r3, #3
 800118e:	e08b      	b.n	80012a8 <Clock_Setup_OSC+0x208>
				while((RCC->CR & RCC_CR_HSERDY) == RESET)
 8001190:	4b48      	ldr	r3, [pc, #288]	@ (80012b4 <Clock_Setup_OSC+0x214>)
 8001192:	681b      	ldr	r3, [r3, #0]
 8001194:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001198:	2b00      	cmp	r3, #0
 800119a:	d0f1      	beq.n	8001180 <Clock_Setup_OSC+0xe0>
 800119c:	e013      	b.n	80011c6 <Clock_Setup_OSC+0x126>
					}
				}
			}
			else
			{
				TickStart = uwTick;
 800119e:	4b46      	ldr	r3, [pc, #280]	@ (80012b8 <Clock_Setup_OSC+0x218>)
 80011a0:	681b      	ldr	r3, [r3, #0]
 80011a2:	60fb      	str	r3, [r7, #12]

				while((RCC->CR & RCC_CR_HSERDY) == RESET)
 80011a4:	e007      	b.n	80011b6 <Clock_Setup_OSC+0x116>
				{
					if((uwTick - TickStart) > HSE_TIMEOUT_VALUE)
 80011a6:	4b44      	ldr	r3, [pc, #272]	@ (80012b8 <Clock_Setup_OSC+0x218>)
 80011a8:	681a      	ldr	r2, [r3, #0]
 80011aa:	68fb      	ldr	r3, [r7, #12]
 80011ac:	1ad3      	subs	r3, r2, r3
 80011ae:	2b64      	cmp	r3, #100	@ 0x64
 80011b0:	d901      	bls.n	80011b6 <Clock_Setup_OSC+0x116>
					{
						return STATE_TIMEOUT;
 80011b2:	2303      	movs	r3, #3
 80011b4:	e078      	b.n	80012a8 <Clock_Setup_OSC+0x208>
				while((RCC->CR & RCC_CR_HSERDY) == RESET)
 80011b6:	4b3f      	ldr	r3, [pc, #252]	@ (80012b4 <Clock_Setup_OSC+0x214>)
 80011b8:	681b      	ldr	r3, [r3, #0]
 80011ba:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80011be:	2b00      	cmp	r3, #0
 80011c0:	d0f1      	beq.n	80011a6 <Clock_Setup_OSC+0x106>
 80011c2:	e000      	b.n	80011c6 <Clock_Setup_OSC+0x126>
			if((RCC->CR & RCC_CR_HSERDY) != RESET && (osc_config->HSE_SET.HSE_STATE) == HSE_OFF)
 80011c4:	bf00      	nop
			}
		}
	}

	/* ---------------------HSI Configuration--------------------- */
	if((osc_config->OSC_TYPE & OSC_TYPE_HSE) == OSC_TYPE_HSE)
 80011c6:	687b      	ldr	r3, [r7, #4]
 80011c8:	681b      	ldr	r3, [r3, #0]
 80011ca:	f003 0301 	and.w	r3, r3, #1
 80011ce:	2b00      	cmp	r3, #0
 80011d0:	d069      	beq.n	80012a6 <Clock_Setup_OSC+0x206>
	{
		if((RCC->CFGR & RCC_CFGR_SWS) == RCC_CFGR_SWS_HSI || ((RCC->CFGR & RCC_CFGR_SWS) == RCC_CFGR_SWS_PLL && (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI))
 80011d2:	4b38      	ldr	r3, [pc, #224]	@ (80012b4 <Clock_Setup_OSC+0x214>)
 80011d4:	689b      	ldr	r3, [r3, #8]
 80011d6:	f003 030c 	and.w	r3, r3, #12
 80011da:	2b00      	cmp	r3, #0
 80011dc:	d00b      	beq.n	80011f6 <Clock_Setup_OSC+0x156>
 80011de:	4b35      	ldr	r3, [pc, #212]	@ (80012b4 <Clock_Setup_OSC+0x214>)
 80011e0:	689b      	ldr	r3, [r3, #8]
 80011e2:	f003 030c 	and.w	r3, r3, #12
 80011e6:	2b08      	cmp	r3, #8
 80011e8:	d11d      	bne.n	8001226 <Clock_Setup_OSC+0x186>
 80011ea:	4b32      	ldr	r3, [pc, #200]	@ (80012b4 <Clock_Setup_OSC+0x214>)
 80011ec:	685b      	ldr	r3, [r3, #4]
 80011ee:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80011f2:	2b00      	cmp	r3, #0
 80011f4:	d117      	bne.n	8001226 <Clock_Setup_OSC+0x186>
		{
			if((RCC->CR & RCC_CR_HSIRDY) != RESET && (osc_config->HSI_SET.HSI_STATE) == HSI_OFF)
 80011f6:	4b2f      	ldr	r3, [pc, #188]	@ (80012b4 <Clock_Setup_OSC+0x214>)
 80011f8:	681b      	ldr	r3, [r3, #0]
 80011fa:	f003 0302 	and.w	r3, r3, #2
 80011fe:	2b00      	cmp	r3, #0
 8001200:	d006      	beq.n	8001210 <Clock_Setup_OSC+0x170>
 8001202:	687b      	ldr	r3, [r7, #4]
 8001204:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8001208:	2b00      	cmp	r3, #0
 800120a:	d101      	bne.n	8001210 <Clock_Setup_OSC+0x170>
			{
				return STATE_ERROR;
 800120c:	2301      	movs	r3, #1
 800120e:	e04b      	b.n	80012a8 <Clock_Setup_OSC+0x208>
			}
			else
			{
				RCC_HSI_CALIBRATION_ADJUST(osc_config->HSI_SET.HSI_CAL);
 8001210:	4b28      	ldr	r3, [pc, #160]	@ (80012b4 <Clock_Setup_OSC+0x214>)
 8001212:	681b      	ldr	r3, [r3, #0]
 8001214:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8001218:	687b      	ldr	r3, [r7, #4]
 800121a:	6a1b      	ldr	r3, [r3, #32]
 800121c:	00db      	lsls	r3, r3, #3
 800121e:	4925      	ldr	r1, [pc, #148]	@ (80012b4 <Clock_Setup_OSC+0x214>)
 8001220:	4313      	orrs	r3, r2
 8001222:	600b      	str	r3, [r1, #0]
			if((RCC->CR & RCC_CR_HSIRDY) != RESET && (osc_config->HSI_SET.HSI_STATE) == HSI_OFF)
 8001224:	e03f      	b.n	80012a6 <Clock_Setup_OSC+0x206>
			}
		}
		else
		{
			if(osc_config->HSI_SET.HSI_STATE == HSI_ON)
 8001226:	687b      	ldr	r3, [r7, #4]
 8001228:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 800122c:	2b01      	cmp	r3, #1
 800122e:	d122      	bne.n	8001276 <Clock_Setup_OSC+0x1d6>
			{
				HSI_ENABLE();
 8001230:	4b20      	ldr	r3, [pc, #128]	@ (80012b4 <Clock_Setup_OSC+0x214>)
 8001232:	681b      	ldr	r3, [r3, #0]
 8001234:	4a1f      	ldr	r2, [pc, #124]	@ (80012b4 <Clock_Setup_OSC+0x214>)
 8001236:	f043 0301 	orr.w	r3, r3, #1
 800123a:	6013      	str	r3, [r2, #0]
				TickStart = uwTick;
 800123c:	4b1e      	ldr	r3, [pc, #120]	@ (80012b8 <Clock_Setup_OSC+0x218>)
 800123e:	681b      	ldr	r3, [r3, #0]
 8001240:	60fb      	str	r3, [r7, #12]

				while((RCC->CR & RCC_CR_HSIRDY) == RESET)
 8001242:	e007      	b.n	8001254 <Clock_Setup_OSC+0x1b4>
				{
					if((uwTick - TickStart) > HSI_TIMEOUT_VALUE)
 8001244:	4b1c      	ldr	r3, [pc, #112]	@ (80012b8 <Clock_Setup_OSC+0x218>)
 8001246:	681a      	ldr	r2, [r3, #0]
 8001248:	68fb      	ldr	r3, [r7, #12]
 800124a:	1ad3      	subs	r3, r2, r3
 800124c:	2b02      	cmp	r3, #2
 800124e:	d901      	bls.n	8001254 <Clock_Setup_OSC+0x1b4>
					{
						return STATE_TIMEOUT;
 8001250:	2303      	movs	r3, #3
 8001252:	e029      	b.n	80012a8 <Clock_Setup_OSC+0x208>
				while((RCC->CR & RCC_CR_HSIRDY) == RESET)
 8001254:	4b17      	ldr	r3, [pc, #92]	@ (80012b4 <Clock_Setup_OSC+0x214>)
 8001256:	681b      	ldr	r3, [r3, #0]
 8001258:	f003 0302 	and.w	r3, r3, #2
 800125c:	2b00      	cmp	r3, #0
 800125e:	d0f1      	beq.n	8001244 <Clock_Setup_OSC+0x1a4>
					}
				}
				RCC_HSI_CALIBRATION_ADJUST(osc_config->HSI_SET.HSI_CAL);
 8001260:	4b14      	ldr	r3, [pc, #80]	@ (80012b4 <Clock_Setup_OSC+0x214>)
 8001262:	681b      	ldr	r3, [r3, #0]
 8001264:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8001268:	687b      	ldr	r3, [r7, #4]
 800126a:	6a1b      	ldr	r3, [r3, #32]
 800126c:	00db      	lsls	r3, r3, #3
 800126e:	4911      	ldr	r1, [pc, #68]	@ (80012b4 <Clock_Setup_OSC+0x214>)
 8001270:	4313      	orrs	r3, r2
 8001272:	600b      	str	r3, [r1, #0]
 8001274:	e017      	b.n	80012a6 <Clock_Setup_OSC+0x206>
			}
			else
			{
				HSI_DISEBLE();
 8001276:	4b0f      	ldr	r3, [pc, #60]	@ (80012b4 <Clock_Setup_OSC+0x214>)
 8001278:	681b      	ldr	r3, [r3, #0]
 800127a:	4a0e      	ldr	r2, [pc, #56]	@ (80012b4 <Clock_Setup_OSC+0x214>)
 800127c:	f023 0301 	bic.w	r3, r3, #1
 8001280:	6013      	str	r3, [r2, #0]
				TickStart = uwTick;
 8001282:	4b0d      	ldr	r3, [pc, #52]	@ (80012b8 <Clock_Setup_OSC+0x218>)
 8001284:	681b      	ldr	r3, [r3, #0]
 8001286:	60fb      	str	r3, [r7, #12]
				while((RCC->CR & RCC_CR_HSIRDY) == RESET)
 8001288:	e007      	b.n	800129a <Clock_Setup_OSC+0x1fa>
				{
					if((uwTick - TickStart) > HSI_TIMEOUT_VALUE)
 800128a:	4b0b      	ldr	r3, [pc, #44]	@ (80012b8 <Clock_Setup_OSC+0x218>)
 800128c:	681a      	ldr	r2, [r3, #0]
 800128e:	68fb      	ldr	r3, [r7, #12]
 8001290:	1ad3      	subs	r3, r2, r3
 8001292:	2b02      	cmp	r3, #2
 8001294:	d901      	bls.n	800129a <Clock_Setup_OSC+0x1fa>
					{
						return STATE_TIMEOUT;
 8001296:	2303      	movs	r3, #3
 8001298:	e006      	b.n	80012a8 <Clock_Setup_OSC+0x208>
				while((RCC->CR & RCC_CR_HSIRDY) == RESET)
 800129a:	4b06      	ldr	r3, [pc, #24]	@ (80012b4 <Clock_Setup_OSC+0x214>)
 800129c:	681b      	ldr	r3, [r3, #0]
 800129e:	f003 0302 	and.w	r3, r3, #2
 80012a2:	2b00      	cmp	r3, #0
 80012a4:	d0f1      	beq.n	800128a <Clock_Setup_OSC+0x1ea>
					}
				}
			}
		}
	}
	return STATE_OK;
 80012a6:	2300      	movs	r3, #0
}
 80012a8:	4618      	mov	r0, r3
 80012aa:	3714      	adds	r7, #20
 80012ac:	46bd      	mov	sp, r7
 80012ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012b2:	4770      	bx	lr
 80012b4:	40023800 	.word	0x40023800
 80012b8:	200001f0 	.word	0x200001f0

080012bc <Clock_Setup_Clock>:

Error_HandleTypeDef Clock_Setup_Clock(Clock_ConfigTypeDef *clock_config)
{
 80012bc:	b580      	push	{r7, lr}
 80012be:	b084      	sub	sp, #16
 80012c0:	af00      	add	r7, sp, #0
 80012c2:	6078      	str	r0, [r7, #4]
	uint32_t TickStart;

	if(clock_config == NULL)
 80012c4:	687b      	ldr	r3, [r7, #4]
 80012c6:	2b00      	cmp	r3, #0
 80012c8:	d101      	bne.n	80012ce <Clock_Setup_Clock+0x12>
	{
		return STATE_ERROR;
 80012ca:	2301      	movs	r3, #1
 80012cc:	e0cf      	b.n	800146e <Clock_Setup_Clock+0x1b2>
	}

	if(clock_config->FLatency > FLASH_GET_LATENCY())
 80012ce:	687b      	ldr	r3, [r7, #4]
 80012d0:	695a      	ldr	r2, [r3, #20]
 80012d2:	4b69      	ldr	r3, [pc, #420]	@ (8001478 <Clock_Setup_Clock+0x1bc>)
 80012d4:	681b      	ldr	r3, [r3, #0]
 80012d6:	f003 030f 	and.w	r3, r3, #15
 80012da:	429a      	cmp	r2, r3
 80012dc:	d912      	bls.n	8001304 <Clock_Setup_Clock+0x48>
	{
		FLASH_SET_LATENCY(clock_config->FLatency);
 80012de:	4b66      	ldr	r3, [pc, #408]	@ (8001478 <Clock_Setup_Clock+0x1bc>)
 80012e0:	681b      	ldr	r3, [r3, #0]
 80012e2:	f023 020f 	bic.w	r2, r3, #15
 80012e6:	687b      	ldr	r3, [r7, #4]
 80012e8:	695b      	ldr	r3, [r3, #20]
 80012ea:	4963      	ldr	r1, [pc, #396]	@ (8001478 <Clock_Setup_Clock+0x1bc>)
 80012ec:	4313      	orrs	r3, r2
 80012ee:	600b      	str	r3, [r1, #0]

		if(FLASH_GET_LATENCY() != clock_config->FLatency)
 80012f0:	4b61      	ldr	r3, [pc, #388]	@ (8001478 <Clock_Setup_Clock+0x1bc>)
 80012f2:	681b      	ldr	r3, [r3, #0]
 80012f4:	f003 020f 	and.w	r2, r3, #15
 80012f8:	687b      	ldr	r3, [r7, #4]
 80012fa:	695b      	ldr	r3, [r3, #20]
 80012fc:	429a      	cmp	r2, r3
 80012fe:	d001      	beq.n	8001304 <Clock_Setup_Clock+0x48>
		{
			return STATE_ERROR;
 8001300:	2301      	movs	r3, #1
 8001302:	e0b4      	b.n	800146e <Clock_Setup_Clock+0x1b2>
		}
	}

	if((clock_config->CLOCK_TYPE & RCC_CLK_TYPE_HCLK) == RCC_CLK_TYPE_HCLK)
 8001304:	687b      	ldr	r3, [r7, #4]
 8001306:	681b      	ldr	r3, [r3, #0]
 8001308:	f003 0302 	and.w	r3, r3, #2
 800130c:	2b00      	cmp	r3, #0
 800130e:	d020      	beq.n	8001352 <Clock_Setup_Clock+0x96>
	{
		if((clock_config->CLOCK_TYPE & RCC_CLK_TYPE_PCLK1) == RCC_CLK_TYPE_PCLK1)
 8001310:	687b      	ldr	r3, [r7, #4]
 8001312:	681b      	ldr	r3, [r3, #0]
 8001314:	f003 0304 	and.w	r3, r3, #4
 8001318:	2b00      	cmp	r3, #0
 800131a:	d005      	beq.n	8001328 <Clock_Setup_Clock+0x6c>
		{
			MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800131c:	4b57      	ldr	r3, [pc, #348]	@ (800147c <Clock_Setup_Clock+0x1c0>)
 800131e:	689b      	ldr	r3, [r3, #8]
 8001320:	4a56      	ldr	r2, [pc, #344]	@ (800147c <Clock_Setup_Clock+0x1c0>)
 8001322:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 8001326:	6093      	str	r3, [r2, #8]
		}
		if((clock_config->CLOCK_TYPE & RCC_CLK_TYPE_PCLK2) == RCC_CLK_TYPE_PCLK2)
 8001328:	687b      	ldr	r3, [r7, #4]
 800132a:	681b      	ldr	r3, [r3, #0]
 800132c:	f003 0308 	and.w	r3, r3, #8
 8001330:	2b00      	cmp	r3, #0
 8001332:	d005      	beq.n	8001340 <Clock_Setup_Clock+0x84>
		{
			MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8001334:	4b51      	ldr	r3, [pc, #324]	@ (800147c <Clock_Setup_Clock+0x1c0>)
 8001336:	689b      	ldr	r3, [r3, #8]
 8001338:	4a50      	ldr	r2, [pc, #320]	@ (800147c <Clock_Setup_Clock+0x1c0>)
 800133a:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 800133e:	6093      	str	r3, [r2, #8]
		}

		MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, clock_config->AHBCLK_DIV);
 8001340:	4b4e      	ldr	r3, [pc, #312]	@ (800147c <Clock_Setup_Clock+0x1c0>)
 8001342:	689b      	ldr	r3, [r3, #8]
 8001344:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8001348:	687b      	ldr	r3, [r7, #4]
 800134a:	689b      	ldr	r3, [r3, #8]
 800134c:	494b      	ldr	r1, [pc, #300]	@ (800147c <Clock_Setup_Clock+0x1c0>)
 800134e:	4313      	orrs	r3, r2
 8001350:	608b      	str	r3, [r1, #8]
	}

	if((clock_config->CLOCK_TYPE & RCC_CLK_TYPE_SYSCLK) == RCC_CLK_TYPE_SYSCLK)
 8001352:	687b      	ldr	r3, [r7, #4]
 8001354:	681b      	ldr	r3, [r3, #0]
 8001356:	f003 0301 	and.w	r3, r3, #1
 800135a:	2b00      	cmp	r3, #0
 800135c:	d03f      	beq.n	80013de <Clock_Setup_Clock+0x122>
	{
		if((clock_config->SYSCLK_SOURCE) == RCC_SYSCLKSOURCE_HSE)
 800135e:	687b      	ldr	r3, [r7, #4]
 8001360:	685b      	ldr	r3, [r3, #4]
 8001362:	2b01      	cmp	r3, #1
 8001364:	d107      	bne.n	8001376 <Clock_Setup_Clock+0xba>
		{
			if((RCC->CR & RCC_CR_HSERDY) == RESET)
 8001366:	4b45      	ldr	r3, [pc, #276]	@ (800147c <Clock_Setup_Clock+0x1c0>)
 8001368:	681b      	ldr	r3, [r3, #0]
 800136a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800136e:	2b00      	cmp	r3, #0
 8001370:	d115      	bne.n	800139e <Clock_Setup_Clock+0xe2>
			{
				return STATE_ERROR;
 8001372:	2301      	movs	r3, #1
 8001374:	e07b      	b.n	800146e <Clock_Setup_Clock+0x1b2>
			}
		}
		else if((clock_config->SYSCLK_SOURCE) == RCC_SYSCLKSOURCE_PLLCLK)
 8001376:	687b      	ldr	r3, [r7, #4]
 8001378:	685b      	ldr	r3, [r3, #4]
 800137a:	2b02      	cmp	r3, #2
 800137c:	d107      	bne.n	800138e <Clock_Setup_Clock+0xd2>
		{
			if((RCC->CR & RCC_CR_PLLRDY) == RESET)
 800137e:	4b3f      	ldr	r3, [pc, #252]	@ (800147c <Clock_Setup_Clock+0x1c0>)
 8001380:	681b      	ldr	r3, [r3, #0]
 8001382:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001386:	2b00      	cmp	r3, #0
 8001388:	d109      	bne.n	800139e <Clock_Setup_Clock+0xe2>
			{
				return STATE_ERROR;
 800138a:	2301      	movs	r3, #1
 800138c:	e06f      	b.n	800146e <Clock_Setup_Clock+0x1b2>
			}
		}
		else
		{
			if((RCC->CR & RCC_CR_HSIRDY) == RESET)
 800138e:	4b3b      	ldr	r3, [pc, #236]	@ (800147c <Clock_Setup_Clock+0x1c0>)
 8001390:	681b      	ldr	r3, [r3, #0]
 8001392:	f003 0302 	and.w	r3, r3, #2
 8001396:	2b00      	cmp	r3, #0
 8001398:	d101      	bne.n	800139e <Clock_Setup_Clock+0xe2>
			{
				return STATE_ERROR;
 800139a:	2301      	movs	r3, #1
 800139c:	e067      	b.n	800146e <Clock_Setup_Clock+0x1b2>
			}
		}

		MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, (clock_config->SYSCLK_SOURCE));
 800139e:	4b37      	ldr	r3, [pc, #220]	@ (800147c <Clock_Setup_Clock+0x1c0>)
 80013a0:	689b      	ldr	r3, [r3, #8]
 80013a2:	f023 0203 	bic.w	r2, r3, #3
 80013a6:	687b      	ldr	r3, [r7, #4]
 80013a8:	685b      	ldr	r3, [r3, #4]
 80013aa:	4934      	ldr	r1, [pc, #208]	@ (800147c <Clock_Setup_Clock+0x1c0>)
 80013ac:	4313      	orrs	r3, r2
 80013ae:	608b      	str	r3, [r1, #8]

		TickStart = uwTick;
 80013b0:	4b33      	ldr	r3, [pc, #204]	@ (8001480 <Clock_Setup_Clock+0x1c4>)
 80013b2:	681b      	ldr	r3, [r3, #0]
 80013b4:	60fb      	str	r3, [r7, #12]

		while((RCC->CFGR & RCC_CFGR_SWS) == (clock_config->SYSCLK_SOURCE) << RCC_CFGR_SWS_Pos)
 80013b6:	e009      	b.n	80013cc <Clock_Setup_Clock+0x110>
		{
			if((uwTick - TickStart) > CLK_SW_TIMEOUT_VALUE)
 80013b8:	4b31      	ldr	r3, [pc, #196]	@ (8001480 <Clock_Setup_Clock+0x1c4>)
 80013ba:	681a      	ldr	r2, [r3, #0]
 80013bc:	68fb      	ldr	r3, [r7, #12]
 80013be:	1ad3      	subs	r3, r2, r3
 80013c0:	f241 3288 	movw	r2, #5000	@ 0x1388
 80013c4:	4293      	cmp	r3, r2
 80013c6:	d901      	bls.n	80013cc <Clock_Setup_Clock+0x110>
			{
				return STATE_TIMEOUT;
 80013c8:	2303      	movs	r3, #3
 80013ca:	e050      	b.n	800146e <Clock_Setup_Clock+0x1b2>
		while((RCC->CFGR & RCC_CFGR_SWS) == (clock_config->SYSCLK_SOURCE) << RCC_CFGR_SWS_Pos)
 80013cc:	4b2b      	ldr	r3, [pc, #172]	@ (800147c <Clock_Setup_Clock+0x1c0>)
 80013ce:	689b      	ldr	r3, [r3, #8]
 80013d0:	f003 020c 	and.w	r2, r3, #12
 80013d4:	687b      	ldr	r3, [r7, #4]
 80013d6:	685b      	ldr	r3, [r3, #4]
 80013d8:	009b      	lsls	r3, r3, #2
 80013da:	429a      	cmp	r2, r3
 80013dc:	d0ec      	beq.n	80013b8 <Clock_Setup_Clock+0xfc>
			}
		}
	}

	if(clock_config->FLatency < FLASH_GET_LATENCY())
 80013de:	687b      	ldr	r3, [r7, #4]
 80013e0:	695a      	ldr	r2, [r3, #20]
 80013e2:	4b25      	ldr	r3, [pc, #148]	@ (8001478 <Clock_Setup_Clock+0x1bc>)
 80013e4:	681b      	ldr	r3, [r3, #0]
 80013e6:	f003 030f 	and.w	r3, r3, #15
 80013ea:	429a      	cmp	r2, r3
 80013ec:	d212      	bcs.n	8001414 <Clock_Setup_Clock+0x158>
	{
		FLASH_SET_LATENCY(clock_config->FLatency);
 80013ee:	4b22      	ldr	r3, [pc, #136]	@ (8001478 <Clock_Setup_Clock+0x1bc>)
 80013f0:	681b      	ldr	r3, [r3, #0]
 80013f2:	f023 020f 	bic.w	r2, r3, #15
 80013f6:	687b      	ldr	r3, [r7, #4]
 80013f8:	695b      	ldr	r3, [r3, #20]
 80013fa:	491f      	ldr	r1, [pc, #124]	@ (8001478 <Clock_Setup_Clock+0x1bc>)
 80013fc:	4313      	orrs	r3, r2
 80013fe:	600b      	str	r3, [r1, #0]

		if(FLASH_GET_LATENCY() != clock_config->FLatency)
 8001400:	4b1d      	ldr	r3, [pc, #116]	@ (8001478 <Clock_Setup_Clock+0x1bc>)
 8001402:	681b      	ldr	r3, [r3, #0]
 8001404:	f003 020f 	and.w	r2, r3, #15
 8001408:	687b      	ldr	r3, [r7, #4]
 800140a:	695b      	ldr	r3, [r3, #20]
 800140c:	429a      	cmp	r2, r3
 800140e:	d001      	beq.n	8001414 <Clock_Setup_Clock+0x158>
		{
			return STATE_ERROR;
 8001410:	2301      	movs	r3, #1
 8001412:	e02c      	b.n	800146e <Clock_Setup_Clock+0x1b2>
		}
	}

	if((clock_config->CLOCK_TYPE & RCC_CLK_TYPE_PCLK1) == RCC_CLK_TYPE_PCLK1)
 8001414:	687b      	ldr	r3, [r7, #4]
 8001416:	681b      	ldr	r3, [r3, #0]
 8001418:	f003 0304 	and.w	r3, r3, #4
 800141c:	2b00      	cmp	r3, #0
 800141e:	d008      	beq.n	8001432 <Clock_Setup_Clock+0x176>
	{
	    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, clock_config->APB1CLK_DIV);
 8001420:	4b16      	ldr	r3, [pc, #88]	@ (800147c <Clock_Setup_Clock+0x1c0>)
 8001422:	689b      	ldr	r3, [r3, #8]
 8001424:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8001428:	687b      	ldr	r3, [r7, #4]
 800142a:	68db      	ldr	r3, [r3, #12]
 800142c:	4913      	ldr	r1, [pc, #76]	@ (800147c <Clock_Setup_Clock+0x1c0>)
 800142e:	4313      	orrs	r3, r2
 8001430:	608b      	str	r3, [r1, #8]
	}
	if((clock_config->CLOCK_TYPE & RCC_CLK_TYPE_PCLK2) == RCC_CLK_TYPE_PCLK2)
 8001432:	687b      	ldr	r3, [r7, #4]
 8001434:	681b      	ldr	r3, [r3, #0]
 8001436:	f003 0308 	and.w	r3, r3, #8
 800143a:	2b00      	cmp	r3, #0
 800143c:	d008      	beq.n	8001450 <Clock_Setup_Clock+0x194>
	{
	    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, clock_config->APB2CLK_DIV);
 800143e:	4b0f      	ldr	r3, [pc, #60]	@ (800147c <Clock_Setup_Clock+0x1c0>)
 8001440:	689b      	ldr	r3, [r3, #8]
 8001442:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8001446:	687b      	ldr	r3, [r7, #4]
 8001448:	691b      	ldr	r3, [r3, #16]
 800144a:	490c      	ldr	r1, [pc, #48]	@ (800147c <Clock_Setup_Clock+0x1c0>)
 800144c:	4313      	orrs	r3, r2
 800144e:	608b      	str	r3, [r1, #8]
	}

	SystemCoreClock = Get_SysClock_Freq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8001450:	f000 f81c 	bl	800148c <Get_SysClock_Freq>
 8001454:	4602      	mov	r2, r0
 8001456:	4b09      	ldr	r3, [pc, #36]	@ (800147c <Clock_Setup_Clock+0x1c0>)
 8001458:	689b      	ldr	r3, [r3, #8]
 800145a:	091b      	lsrs	r3, r3, #4
 800145c:	f003 030f 	and.w	r3, r3, #15
 8001460:	4908      	ldr	r1, [pc, #32]	@ (8001484 <Clock_Setup_Clock+0x1c8>)
 8001462:	5ccb      	ldrb	r3, [r1, r3]
 8001464:	fa22 f303 	lsr.w	r3, r2, r3
 8001468:	4a07      	ldr	r2, [pc, #28]	@ (8001488 <Clock_Setup_Clock+0x1cc>)
 800146a:	6013      	str	r3, [r2, #0]

	return STATE_OK;
 800146c:	2300      	movs	r3, #0
}
 800146e:	4618      	mov	r0, r3
 8001470:	3710      	adds	r7, #16
 8001472:	46bd      	mov	sp, r7
 8001474:	bd80      	pop	{r7, pc}
 8001476:	bf00      	nop
 8001478:	40023c00 	.word	0x40023c00
 800147c:	40023800 	.word	0x40023800
 8001480:	200001f0 	.word	0x200001f0
 8001484:	08004788 	.word	0x08004788
 8001488:	20000000 	.word	0x20000000

0800148c <Get_SysClock_Freq>:

uint32_t Get_SysClock_Freq(void)
{
 800148c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8001490:	b090      	sub	sp, #64	@ 0x40
 8001492:	af00      	add	r7, sp, #0
	uint32_t pllm = 0, pllvco = 0, pllp = 0;
 8001494:	2300      	movs	r3, #0
 8001496:	637b      	str	r3, [r7, #52]	@ 0x34
 8001498:	2300      	movs	r3, #0
 800149a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800149c:	2300      	movs	r3, #0
 800149e:	633b      	str	r3, [r7, #48]	@ 0x30
	uint32_t sysclock_freq = 0;
 80014a0:	2300      	movs	r3, #0
 80014a2:	63bb      	str	r3, [r7, #56]	@ 0x38
	switch (RCC->CFGR & RCC_CFGR_SWS)
 80014a4:	4b5b      	ldr	r3, [pc, #364]	@ (8001614 <Get_SysClock_Freq+0x188>)
 80014a6:	689b      	ldr	r3, [r3, #8]
 80014a8:	f003 030c 	and.w	r3, r3, #12
 80014ac:	2b08      	cmp	r3, #8
 80014ae:	d00d      	beq.n	80014cc <Get_SysClock_Freq+0x40>
 80014b0:	2b08      	cmp	r3, #8
 80014b2:	f200 80a1 	bhi.w	80015f8 <Get_SysClock_Freq+0x16c>
 80014b6:	2b00      	cmp	r3, #0
 80014b8:	d002      	beq.n	80014c0 <Get_SysClock_Freq+0x34>
 80014ba:	2b04      	cmp	r3, #4
 80014bc:	d003      	beq.n	80014c6 <Get_SysClock_Freq+0x3a>
 80014be:	e09b      	b.n	80015f8 <Get_SysClock_Freq+0x16c>
	{
	case RCC_SYSCLKSOURCE_STATUS_HSI:
		sysclock_freq = HSI_VALUE;
 80014c0:	4b55      	ldr	r3, [pc, #340]	@ (8001618 <Get_SysClock_Freq+0x18c>)
 80014c2:	63bb      	str	r3, [r7, #56]	@ 0x38
		break;
 80014c4:	e09b      	b.n	80015fe <Get_SysClock_Freq+0x172>
	case RCC_SYSCLKSOURCE_STATUS_HSE:
		sysclock_freq = HSE_VALUE;
 80014c6:	4b55      	ldr	r3, [pc, #340]	@ (800161c <Get_SysClock_Freq+0x190>)
 80014c8:	63bb      	str	r3, [r7, #56]	@ 0x38
		break;
 80014ca:	e098      	b.n	80015fe <Get_SysClock_Freq+0x172>
	case RCC_SYSCLKSOURCE_STATUS_PLLCLK:
		pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80014cc:	4b51      	ldr	r3, [pc, #324]	@ (8001614 <Get_SysClock_Freq+0x188>)
 80014ce:	685b      	ldr	r3, [r3, #4]
 80014d0:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80014d4:	637b      	str	r3, [r7, #52]	@ 0x34
		if((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) != RCC_PLLCFGR_PLLSRC_HSI)
 80014d6:	4b4f      	ldr	r3, [pc, #316]	@ (8001614 <Get_SysClock_Freq+0x188>)
 80014d8:	685b      	ldr	r3, [r3, #4]
 80014da:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80014de:	2b00      	cmp	r3, #0
 80014e0:	d028      	beq.n	8001534 <Get_SysClock_Freq+0xa8>
		{
			pllvco = (uint32_t)((((uint64_t)HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80014e2:	4b4c      	ldr	r3, [pc, #304]	@ (8001614 <Get_SysClock_Freq+0x188>)
 80014e4:	685b      	ldr	r3, [r3, #4]
 80014e6:	099b      	lsrs	r3, r3, #6
 80014e8:	2200      	movs	r2, #0
 80014ea:	623b      	str	r3, [r7, #32]
 80014ec:	627a      	str	r2, [r7, #36]	@ 0x24
 80014ee:	6a3b      	ldr	r3, [r7, #32]
 80014f0:	f3c3 0008 	ubfx	r0, r3, #0, #9
 80014f4:	2100      	movs	r1, #0
 80014f6:	4b49      	ldr	r3, [pc, #292]	@ (800161c <Get_SysClock_Freq+0x190>)
 80014f8:	fb03 f201 	mul.w	r2, r3, r1
 80014fc:	2300      	movs	r3, #0
 80014fe:	fb00 f303 	mul.w	r3, r0, r3
 8001502:	4413      	add	r3, r2
 8001504:	4a45      	ldr	r2, [pc, #276]	@ (800161c <Get_SysClock_Freq+0x190>)
 8001506:	fba0 1202 	umull	r1, r2, r0, r2
 800150a:	62fa      	str	r2, [r7, #44]	@ 0x2c
 800150c:	460a      	mov	r2, r1
 800150e:	62ba      	str	r2, [r7, #40]	@ 0x28
 8001510:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8001512:	4413      	add	r3, r2
 8001514:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001516:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8001518:	2200      	movs	r2, #0
 800151a:	61bb      	str	r3, [r7, #24]
 800151c:	61fa      	str	r2, [r7, #28]
 800151e:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8001522:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	@ 0x28
 8001526:	f7ff fb67 	bl	8000bf8 <__aeabi_uldivmod>
 800152a:	4602      	mov	r2, r0
 800152c:	460b      	mov	r3, r1
 800152e:	4613      	mov	r3, r2
 8001530:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8001532:	e053      	b.n	80015dc <Get_SysClock_Freq+0x150>
		}
		else
		{
			pllvco = (uint32_t)((((uint64_t)HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8001534:	4b37      	ldr	r3, [pc, #220]	@ (8001614 <Get_SysClock_Freq+0x188>)
 8001536:	685b      	ldr	r3, [r3, #4]
 8001538:	099b      	lsrs	r3, r3, #6
 800153a:	2200      	movs	r2, #0
 800153c:	613b      	str	r3, [r7, #16]
 800153e:	617a      	str	r2, [r7, #20]
 8001540:	693b      	ldr	r3, [r7, #16]
 8001542:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 8001546:	f04f 0b00 	mov.w	fp, #0
 800154a:	4652      	mov	r2, sl
 800154c:	465b      	mov	r3, fp
 800154e:	f04f 0000 	mov.w	r0, #0
 8001552:	f04f 0100 	mov.w	r1, #0
 8001556:	0159      	lsls	r1, r3, #5
 8001558:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800155c:	0150      	lsls	r0, r2, #5
 800155e:	4602      	mov	r2, r0
 8001560:	460b      	mov	r3, r1
 8001562:	ebb2 080a 	subs.w	r8, r2, sl
 8001566:	eb63 090b 	sbc.w	r9, r3, fp
 800156a:	f04f 0200 	mov.w	r2, #0
 800156e:	f04f 0300 	mov.w	r3, #0
 8001572:	ea4f 1389 	mov.w	r3, r9, lsl #6
 8001576:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 800157a:	ea4f 1288 	mov.w	r2, r8, lsl #6
 800157e:	ebb2 0408 	subs.w	r4, r2, r8
 8001582:	eb63 0509 	sbc.w	r5, r3, r9
 8001586:	f04f 0200 	mov.w	r2, #0
 800158a:	f04f 0300 	mov.w	r3, #0
 800158e:	00eb      	lsls	r3, r5, #3
 8001590:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8001594:	00e2      	lsls	r2, r4, #3
 8001596:	4614      	mov	r4, r2
 8001598:	461d      	mov	r5, r3
 800159a:	eb14 030a 	adds.w	r3, r4, sl
 800159e:	603b      	str	r3, [r7, #0]
 80015a0:	eb45 030b 	adc.w	r3, r5, fp
 80015a4:	607b      	str	r3, [r7, #4]
 80015a6:	f04f 0200 	mov.w	r2, #0
 80015aa:	f04f 0300 	mov.w	r3, #0
 80015ae:	e9d7 4500 	ldrd	r4, r5, [r7]
 80015b2:	4629      	mov	r1, r5
 80015b4:	028b      	lsls	r3, r1, #10
 80015b6:	4621      	mov	r1, r4
 80015b8:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80015bc:	4621      	mov	r1, r4
 80015be:	028a      	lsls	r2, r1, #10
 80015c0:	4610      	mov	r0, r2
 80015c2:	4619      	mov	r1, r3
 80015c4:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80015c6:	2200      	movs	r2, #0
 80015c8:	60bb      	str	r3, [r7, #8]
 80015ca:	60fa      	str	r2, [r7, #12]
 80015cc:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 80015d0:	f7ff fb12 	bl	8000bf8 <__aeabi_uldivmod>
 80015d4:	4602      	mov	r2, r0
 80015d6:	460b      	mov	r3, r1
 80015d8:	4613      	mov	r3, r2
 80015da:	63fb      	str	r3, [r7, #60]	@ 0x3c
		}
		pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1) * 2);
 80015dc:	4b0d      	ldr	r3, [pc, #52]	@ (8001614 <Get_SysClock_Freq+0x188>)
 80015de:	685b      	ldr	r3, [r3, #4]
 80015e0:	0c1b      	lsrs	r3, r3, #16
 80015e2:	f003 0303 	and.w	r3, r3, #3
 80015e6:	3301      	adds	r3, #1
 80015e8:	005b      	lsls	r3, r3, #1
 80015ea:	633b      	str	r3, [r7, #48]	@ 0x30

		sysclock_freq = pllvco / pllp;
 80015ec:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 80015ee:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80015f0:	fbb2 f3f3 	udiv	r3, r2, r3
 80015f4:	63bb      	str	r3, [r7, #56]	@ 0x38
		break;
 80015f6:	e002      	b.n	80015fe <Get_SysClock_Freq+0x172>
	default:
		sysclock_freq = HSI_VALUE;
 80015f8:	4b07      	ldr	r3, [pc, #28]	@ (8001618 <Get_SysClock_Freq+0x18c>)
 80015fa:	63bb      	str	r3, [r7, #56]	@ 0x38
		break;
 80015fc:	bf00      	nop
	}

	Tick_Init(uwTickPrio);
 80015fe:	4b08      	ldr	r3, [pc, #32]	@ (8001620 <Get_SysClock_Freq+0x194>)
 8001600:	681b      	ldr	r3, [r3, #0]
 8001602:	4618      	mov	r0, r3
 8001604:	f000 fae2 	bl	8001bcc <Tick_Init>

	return sysclock_freq;
 8001608:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
}
 800160a:	4618      	mov	r0, r3
 800160c:	3740      	adds	r7, #64	@ 0x40
 800160e:	46bd      	mov	sp, r7
 8001610:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8001614:	40023800 	.word	0x40023800
 8001618:	00f42400 	.word	0x00f42400
 800161c:	016e3600 	.word	0x016e3600
 8001620:	20000004 	.word	0x20000004

08001624 <Delay_Ms>:

void Delay_Ms(uint32_t delay_time)
{
 8001624:	b480      	push	{r7}
 8001626:	b085      	sub	sp, #20
 8001628:	af00      	add	r7, sp, #0
 800162a:	6078      	str	r0, [r7, #4]
	uint32_t TickStart = uwTick;
 800162c:	4b0d      	ldr	r3, [pc, #52]	@ (8001664 <Delay_Ms+0x40>)
 800162e:	681b      	ldr	r3, [r3, #0]
 8001630:	60bb      	str	r3, [r7, #8]
	uint32_t wait = delay_time;
 8001632:	687b      	ldr	r3, [r7, #4]
 8001634:	60fb      	str	r3, [r7, #12]

	if(wait < 0xffffffffU)
 8001636:	68fb      	ldr	r3, [r7, #12]
 8001638:	f1b3 3fff 	cmp.w	r3, #4294967295
 800163c:	d002      	beq.n	8001644 <Delay_Ms+0x20>
	{
		wait += (uint32_t)1;
 800163e:	68fb      	ldr	r3, [r7, #12]
 8001640:	3301      	adds	r3, #1
 8001642:	60fb      	str	r3, [r7, #12]
	}

	while((uwTick - TickStart) < wait);
 8001644:	bf00      	nop
 8001646:	4b07      	ldr	r3, [pc, #28]	@ (8001664 <Delay_Ms+0x40>)
 8001648:	681a      	ldr	r2, [r3, #0]
 800164a:	68bb      	ldr	r3, [r7, #8]
 800164c:	1ad3      	subs	r3, r2, r3
 800164e:	68fa      	ldr	r2, [r7, #12]
 8001650:	429a      	cmp	r2, r3
 8001652:	d8f8      	bhi.n	8001646 <Delay_Ms+0x22>
}
 8001654:	bf00      	nop
 8001656:	bf00      	nop
 8001658:	3714      	adds	r7, #20
 800165a:	46bd      	mov	sp, r7
 800165c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001660:	4770      	bx	lr
 8001662:	bf00      	nop
 8001664:	200001f0 	.word	0x200001f0

08001668 <GPIO_Config>:

#define GPIO_NUMBER           ((uint32_t)16U)


void GPIO_Config(GPIO_TypeDef *GPIOx, GPIO_ConfigTypeDef *GPIO_Conf)
{
 8001668:	b480      	push	{r7}
 800166a:	b087      	sub	sp, #28
 800166c:	af00      	add	r7, sp, #0
 800166e:	6078      	str	r0, [r7, #4]
 8001670:	6039      	str	r1, [r7, #0]
	uint32_t position = 0;
 8001672:	2300      	movs	r3, #0
 8001674:	617b      	str	r3, [r7, #20]
	uint32_t ioposition = 0x00;
 8001676:	2300      	movs	r3, #0
 8001678:	60fb      	str	r3, [r7, #12]
	uint32_t iocurrent = 0x00;
 800167a:	2300      	movs	r3, #0
 800167c:	60bb      	str	r3, [r7, #8]
	uint32_t temp = 0x00;
 800167e:	2300      	movs	r3, #0
 8001680:	613b      	str	r3, [r7, #16]

	for(position = 0; position < GPIO_NUMBER; position++)
 8001682:	2300      	movs	r3, #0
 8001684:	617b      	str	r3, [r7, #20]
 8001686:	e163      	b.n	8001950 <GPIO_Config+0x2e8>
	{
		ioposition = ((uint32_t)0x01) << position;
 8001688:	2201      	movs	r2, #1
 800168a:	697b      	ldr	r3, [r7, #20]
 800168c:	fa02 f303 	lsl.w	r3, r2, r3
 8001690:	60fb      	str	r3, [r7, #12]

		iocurrent = (uint32_t)(GPIO_Conf->PIN) & ioposition;
 8001692:	683b      	ldr	r3, [r7, #0]
 8001694:	681b      	ldr	r3, [r3, #0]
 8001696:	68fa      	ldr	r2, [r7, #12]
 8001698:	4013      	ands	r3, r2
 800169a:	60bb      	str	r3, [r7, #8]

		if(iocurrent == ioposition)
 800169c:	68ba      	ldr	r2, [r7, #8]
 800169e:	68fb      	ldr	r3, [r7, #12]
 80016a0:	429a      	cmp	r2, r3
 80016a2:	f040 8152 	bne.w	800194a <GPIO_Config+0x2e2>
		{
			if(((GPIO_Conf->MODE & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Conf->MODE & GPIO_MODE) == MODE_AF))
 80016a6:	683b      	ldr	r3, [r7, #0]
 80016a8:	685b      	ldr	r3, [r3, #4]
 80016aa:	f003 0303 	and.w	r3, r3, #3
 80016ae:	2b01      	cmp	r3, #1
 80016b0:	d005      	beq.n	80016be <GPIO_Config+0x56>
 80016b2:	683b      	ldr	r3, [r7, #0]
 80016b4:	685b      	ldr	r3, [r3, #4]
 80016b6:	f003 0303 	and.w	r3, r3, #3
 80016ba:	2b02      	cmp	r3, #2
 80016bc:	d130      	bne.n	8001720 <GPIO_Config+0xb8>
			{
				temp = GPIOx->OSPEEDR;
 80016be:	687b      	ldr	r3, [r7, #4]
 80016c0:	689b      	ldr	r3, [r3, #8]
 80016c2:	613b      	str	r3, [r7, #16]
				temp &= ~(GPIO_OSPEEDR_OSPEEDR0 << (position * 2));
 80016c4:	697b      	ldr	r3, [r7, #20]
 80016c6:	005b      	lsls	r3, r3, #1
 80016c8:	2203      	movs	r2, #3
 80016ca:	fa02 f303 	lsl.w	r3, r2, r3
 80016ce:	43db      	mvns	r3, r3
 80016d0:	693a      	ldr	r2, [r7, #16]
 80016d2:	4013      	ands	r3, r2
 80016d4:	613b      	str	r3, [r7, #16]
				temp |= (GPIO_Conf->SPEED << (position * 2));
 80016d6:	683b      	ldr	r3, [r7, #0]
 80016d8:	68da      	ldr	r2, [r3, #12]
 80016da:	697b      	ldr	r3, [r7, #20]
 80016dc:	005b      	lsls	r3, r3, #1
 80016de:	fa02 f303 	lsl.w	r3, r2, r3
 80016e2:	693a      	ldr	r2, [r7, #16]
 80016e4:	4313      	orrs	r3, r2
 80016e6:	613b      	str	r3, [r7, #16]
				GPIOx->OSPEEDR = temp;
 80016e8:	687b      	ldr	r3, [r7, #4]
 80016ea:	693a      	ldr	r2, [r7, #16]
 80016ec:	609a      	str	r2, [r3, #8]

				temp = GPIOx->OTYPER;
 80016ee:	687b      	ldr	r3, [r7, #4]
 80016f0:	685b      	ldr	r3, [r3, #4]
 80016f2:	613b      	str	r3, [r7, #16]
				temp &= ~(GPIO_OTYPER_OT0 << position);
 80016f4:	2201      	movs	r2, #1
 80016f6:	697b      	ldr	r3, [r7, #20]
 80016f8:	fa02 f303 	lsl.w	r3, r2, r3
 80016fc:	43db      	mvns	r3, r3
 80016fe:	693a      	ldr	r2, [r7, #16]
 8001700:	4013      	ands	r3, r2
 8001702:	613b      	str	r3, [r7, #16]
				temp |= ((GPIO_Conf->MODE & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position;
 8001704:	683b      	ldr	r3, [r7, #0]
 8001706:	685b      	ldr	r3, [r3, #4]
 8001708:	091b      	lsrs	r3, r3, #4
 800170a:	f003 0201 	and.w	r2, r3, #1
 800170e:	697b      	ldr	r3, [r7, #20]
 8001710:	fa02 f303 	lsl.w	r3, r2, r3
 8001714:	693a      	ldr	r2, [r7, #16]
 8001716:	4313      	orrs	r3, r2
 8001718:	613b      	str	r3, [r7, #16]
				GPIOx->OTYPER = temp;
 800171a:	687b      	ldr	r3, [r7, #4]
 800171c:	693a      	ldr	r2, [r7, #16]
 800171e:	605a      	str	r2, [r3, #4]
			}
		    if((GPIO_Conf->MODE & GPIO_MODE) != MODE_ANALOG)
 8001720:	683b      	ldr	r3, [r7, #0]
 8001722:	685b      	ldr	r3, [r3, #4]
 8001724:	f003 0303 	and.w	r3, r3, #3
 8001728:	2b03      	cmp	r3, #3
 800172a:	d017      	beq.n	800175c <GPIO_Config+0xf4>
		    {
		        temp = GPIOx->PUPDR;
 800172c:	687b      	ldr	r3, [r7, #4]
 800172e:	68db      	ldr	r3, [r3, #12]
 8001730:	613b      	str	r3, [r7, #16]
		        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 8001732:	697b      	ldr	r3, [r7, #20]
 8001734:	005b      	lsls	r3, r3, #1
 8001736:	2203      	movs	r2, #3
 8001738:	fa02 f303 	lsl.w	r3, r2, r3
 800173c:	43db      	mvns	r3, r3
 800173e:	693a      	ldr	r2, [r7, #16]
 8001740:	4013      	ands	r3, r2
 8001742:	613b      	str	r3, [r7, #16]
		        temp |= ((GPIO_Conf->PULL) << (position * 2));
 8001744:	683b      	ldr	r3, [r7, #0]
 8001746:	689a      	ldr	r2, [r3, #8]
 8001748:	697b      	ldr	r3, [r7, #20]
 800174a:	005b      	lsls	r3, r3, #1
 800174c:	fa02 f303 	lsl.w	r3, r2, r3
 8001750:	693a      	ldr	r2, [r7, #16]
 8001752:	4313      	orrs	r3, r2
 8001754:	613b      	str	r3, [r7, #16]
		        GPIOx->PUPDR = temp;
 8001756:	687b      	ldr	r3, [r7, #4]
 8001758:	693a      	ldr	r2, [r7, #16]
 800175a:	60da      	str	r2, [r3, #12]
		    }
		    if ((GPIO_Conf->MODE & GPIO_MODE) == MODE_AF)
 800175c:	683b      	ldr	r3, [r7, #0]
 800175e:	685b      	ldr	r3, [r3, #4]
 8001760:	f003 0303 	and.w	r3, r3, #3
 8001764:	2b02      	cmp	r3, #2
 8001766:	d123      	bne.n	80017b0 <GPIO_Config+0x148>
		    {
		        temp = GPIOx->AFR[position >> 3];
 8001768:	697b      	ldr	r3, [r7, #20]
 800176a:	08da      	lsrs	r2, r3, #3
 800176c:	687b      	ldr	r3, [r7, #4]
 800176e:	3208      	adds	r2, #8
 8001770:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001774:	613b      	str	r3, [r7, #16]
		        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8001776:	697b      	ldr	r3, [r7, #20]
 8001778:	f003 0307 	and.w	r3, r3, #7
 800177c:	009b      	lsls	r3, r3, #2
 800177e:	220f      	movs	r2, #15
 8001780:	fa02 f303 	lsl.w	r3, r2, r3
 8001784:	43db      	mvns	r3, r3
 8001786:	693a      	ldr	r2, [r7, #16]
 8001788:	4013      	ands	r3, r2
 800178a:	613b      	str	r3, [r7, #16]
		        temp |= ((uint32_t)(GPIO_Conf->ALT) << (((uint32_t)position & (uint32_t)0x07) * 4));
 800178c:	683b      	ldr	r3, [r7, #0]
 800178e:	691a      	ldr	r2, [r3, #16]
 8001790:	697b      	ldr	r3, [r7, #20]
 8001792:	f003 0307 	and.w	r3, r3, #7
 8001796:	009b      	lsls	r3, r3, #2
 8001798:	fa02 f303 	lsl.w	r3, r2, r3
 800179c:	693a      	ldr	r2, [r7, #16]
 800179e:	4313      	orrs	r3, r2
 80017a0:	613b      	str	r3, [r7, #16]
		        GPIOx->AFR[position >> 3] = temp;
 80017a2:	697b      	ldr	r3, [r7, #20]
 80017a4:	08da      	lsrs	r2, r3, #3
 80017a6:	687b      	ldr	r3, [r7, #4]
 80017a8:	3208      	adds	r2, #8
 80017aa:	6939      	ldr	r1, [r7, #16]
 80017ac:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		    }
		    temp = GPIOx->MODER;
 80017b0:	687b      	ldr	r3, [r7, #4]
 80017b2:	681b      	ldr	r3, [r3, #0]
 80017b4:	613b      	str	r3, [r7, #16]
		    temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 80017b6:	697b      	ldr	r3, [r7, #20]
 80017b8:	005b      	lsls	r3, r3, #1
 80017ba:	2203      	movs	r2, #3
 80017bc:	fa02 f303 	lsl.w	r3, r2, r3
 80017c0:	43db      	mvns	r3, r3
 80017c2:	693a      	ldr	r2, [r7, #16]
 80017c4:	4013      	ands	r3, r2
 80017c6:	613b      	str	r3, [r7, #16]
		    temp |= ((GPIO_Conf->MODE & GPIO_MODE) << (position * 2));
 80017c8:	683b      	ldr	r3, [r7, #0]
 80017ca:	685b      	ldr	r3, [r3, #4]
 80017cc:	f003 0203 	and.w	r2, r3, #3
 80017d0:	697b      	ldr	r3, [r7, #20]
 80017d2:	005b      	lsls	r3, r3, #1
 80017d4:	fa02 f303 	lsl.w	r3, r2, r3
 80017d8:	693a      	ldr	r2, [r7, #16]
 80017da:	4313      	orrs	r3, r2
 80017dc:	613b      	str	r3, [r7, #16]
		    GPIOx->MODER = temp;
 80017de:	687b      	ldr	r3, [r7, #4]
 80017e0:	693a      	ldr	r2, [r7, #16]
 80017e2:	601a      	str	r2, [r3, #0]

		    if((GPIO_Conf->MODE & EXTI_MODE) != 0x00u)
 80017e4:	683b      	ldr	r3, [r7, #0]
 80017e6:	685b      	ldr	r3, [r3, #4]
 80017e8:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 80017ec:	2b00      	cmp	r3, #0
 80017ee:	f000 80ac 	beq.w	800194a <GPIO_Config+0x2e2>
		    {
		    	SET_BIT(RCC->APB2ENR, RCC_APB2ENR_SYSCFGEN);
 80017f2:	4b5d      	ldr	r3, [pc, #372]	@ (8001968 <GPIO_Config+0x300>)
 80017f4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80017f6:	4a5c      	ldr	r2, [pc, #368]	@ (8001968 <GPIO_Config+0x300>)
 80017f8:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80017fc:	6453      	str	r3, [r2, #68]	@ 0x44

		    	temp = SYSCFG->EXTICR[position >> 2];
 80017fe:	4a5b      	ldr	r2, [pc, #364]	@ (800196c <GPIO_Config+0x304>)
 8001800:	697b      	ldr	r3, [r7, #20]
 8001802:	089b      	lsrs	r3, r3, #2
 8001804:	3302      	adds	r3, #2
 8001806:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800180a:	613b      	str	r3, [r7, #16]
		    	temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 800180c:	697b      	ldr	r3, [r7, #20]
 800180e:	f003 0303 	and.w	r3, r3, #3
 8001812:	009b      	lsls	r3, r3, #2
 8001814:	220f      	movs	r2, #15
 8001816:	fa02 f303 	lsl.w	r3, r2, r3
 800181a:	43db      	mvns	r3, r3
 800181c:	693a      	ldr	r2, [r7, #16]
 800181e:	4013      	ands	r3, r2
 8001820:	613b      	str	r3, [r7, #16]
		    	temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 8001822:	687b      	ldr	r3, [r7, #4]
 8001824:	4a52      	ldr	r2, [pc, #328]	@ (8001970 <GPIO_Config+0x308>)
 8001826:	4293      	cmp	r3, r2
 8001828:	d02b      	beq.n	8001882 <GPIO_Config+0x21a>
 800182a:	687b      	ldr	r3, [r7, #4]
 800182c:	4a51      	ldr	r2, [pc, #324]	@ (8001974 <GPIO_Config+0x30c>)
 800182e:	4293      	cmp	r3, r2
 8001830:	d025      	beq.n	800187e <GPIO_Config+0x216>
 8001832:	687b      	ldr	r3, [r7, #4]
 8001834:	4a50      	ldr	r2, [pc, #320]	@ (8001978 <GPIO_Config+0x310>)
 8001836:	4293      	cmp	r3, r2
 8001838:	d01f      	beq.n	800187a <GPIO_Config+0x212>
 800183a:	687b      	ldr	r3, [r7, #4]
 800183c:	4a4f      	ldr	r2, [pc, #316]	@ (800197c <GPIO_Config+0x314>)
 800183e:	4293      	cmp	r3, r2
 8001840:	d019      	beq.n	8001876 <GPIO_Config+0x20e>
 8001842:	687b      	ldr	r3, [r7, #4]
 8001844:	4a4e      	ldr	r2, [pc, #312]	@ (8001980 <GPIO_Config+0x318>)
 8001846:	4293      	cmp	r3, r2
 8001848:	d013      	beq.n	8001872 <GPIO_Config+0x20a>
 800184a:	687b      	ldr	r3, [r7, #4]
 800184c:	4a4d      	ldr	r2, [pc, #308]	@ (8001984 <GPIO_Config+0x31c>)
 800184e:	4293      	cmp	r3, r2
 8001850:	d00d      	beq.n	800186e <GPIO_Config+0x206>
 8001852:	687b      	ldr	r3, [r7, #4]
 8001854:	4a4c      	ldr	r2, [pc, #304]	@ (8001988 <GPIO_Config+0x320>)
 8001856:	4293      	cmp	r3, r2
 8001858:	d007      	beq.n	800186a <GPIO_Config+0x202>
 800185a:	687b      	ldr	r3, [r7, #4]
 800185c:	4a4b      	ldr	r2, [pc, #300]	@ (800198c <GPIO_Config+0x324>)
 800185e:	4293      	cmp	r3, r2
 8001860:	d101      	bne.n	8001866 <GPIO_Config+0x1fe>
 8001862:	2307      	movs	r3, #7
 8001864:	e00e      	b.n	8001884 <GPIO_Config+0x21c>
 8001866:	2308      	movs	r3, #8
 8001868:	e00c      	b.n	8001884 <GPIO_Config+0x21c>
 800186a:	2306      	movs	r3, #6
 800186c:	e00a      	b.n	8001884 <GPIO_Config+0x21c>
 800186e:	2305      	movs	r3, #5
 8001870:	e008      	b.n	8001884 <GPIO_Config+0x21c>
 8001872:	2304      	movs	r3, #4
 8001874:	e006      	b.n	8001884 <GPIO_Config+0x21c>
 8001876:	2303      	movs	r3, #3
 8001878:	e004      	b.n	8001884 <GPIO_Config+0x21c>
 800187a:	2302      	movs	r3, #2
 800187c:	e002      	b.n	8001884 <GPIO_Config+0x21c>
 800187e:	2301      	movs	r3, #1
 8001880:	e000      	b.n	8001884 <GPIO_Config+0x21c>
 8001882:	2300      	movs	r3, #0
 8001884:	697a      	ldr	r2, [r7, #20]
 8001886:	f002 0203 	and.w	r2, r2, #3
 800188a:	0092      	lsls	r2, r2, #2
 800188c:	4093      	lsls	r3, r2
 800188e:	693a      	ldr	r2, [r7, #16]
 8001890:	4313      	orrs	r3, r2
 8001892:	613b      	str	r3, [r7, #16]
		    	SYSCFG->EXTICR[position >> 2] = temp;
 8001894:	4935      	ldr	r1, [pc, #212]	@ (800196c <GPIO_Config+0x304>)
 8001896:	697b      	ldr	r3, [r7, #20]
 8001898:	089b      	lsrs	r3, r3, #2
 800189a:	3302      	adds	r3, #2
 800189c:	693a      	ldr	r2, [r7, #16]
 800189e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

		        temp = EXTI->RTSR;
 80018a2:	4b3b      	ldr	r3, [pc, #236]	@ (8001990 <GPIO_Config+0x328>)
 80018a4:	689b      	ldr	r3, [r3, #8]
 80018a6:	613b      	str	r3, [r7, #16]
		        temp &= ~((uint32_t)iocurrent);
 80018a8:	68bb      	ldr	r3, [r7, #8]
 80018aa:	43db      	mvns	r3, r3
 80018ac:	693a      	ldr	r2, [r7, #16]
 80018ae:	4013      	ands	r3, r2
 80018b0:	613b      	str	r3, [r7, #16]
		        if ((GPIO_Conf->MODE & TRIGGER_RISING) != 0x00u)
 80018b2:	683b      	ldr	r3, [r7, #0]
 80018b4:	685b      	ldr	r3, [r3, #4]
 80018b6:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80018ba:	2b00      	cmp	r3, #0
 80018bc:	d003      	beq.n	80018c6 <GPIO_Config+0x25e>
		        {
		        	temp |= iocurrent;
 80018be:	693a      	ldr	r2, [r7, #16]
 80018c0:	68bb      	ldr	r3, [r7, #8]
 80018c2:	4313      	orrs	r3, r2
 80018c4:	613b      	str	r3, [r7, #16]
		        }
		        EXTI->RTSR = temp;
 80018c6:	4a32      	ldr	r2, [pc, #200]	@ (8001990 <GPIO_Config+0x328>)
 80018c8:	693b      	ldr	r3, [r7, #16]
 80018ca:	6093      	str	r3, [r2, #8]

		        temp = EXTI->FTSR;
 80018cc:	4b30      	ldr	r3, [pc, #192]	@ (8001990 <GPIO_Config+0x328>)
 80018ce:	68db      	ldr	r3, [r3, #12]
 80018d0:	613b      	str	r3, [r7, #16]
		        temp &= ~((uint32_t)iocurrent);
 80018d2:	68bb      	ldr	r3, [r7, #8]
 80018d4:	43db      	mvns	r3, r3
 80018d6:	693a      	ldr	r2, [r7, #16]
 80018d8:	4013      	ands	r3, r2
 80018da:	613b      	str	r3, [r7, #16]
		        if ((GPIO_Conf->MODE & TRIGGER_FALLING) != 0x00u)
 80018dc:	683b      	ldr	r3, [r7, #0]
 80018de:	685b      	ldr	r3, [r3, #4]
 80018e0:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80018e4:	2b00      	cmp	r3, #0
 80018e6:	d003      	beq.n	80018f0 <GPIO_Config+0x288>
		        {
		        	temp |= iocurrent;
 80018e8:	693a      	ldr	r2, [r7, #16]
 80018ea:	68bb      	ldr	r3, [r7, #8]
 80018ec:	4313      	orrs	r3, r2
 80018ee:	613b      	str	r3, [r7, #16]
		        }
		        EXTI->FTSR = temp;
 80018f0:	4a27      	ldr	r2, [pc, #156]	@ (8001990 <GPIO_Config+0x328>)
 80018f2:	693b      	ldr	r3, [r7, #16]
 80018f4:	60d3      	str	r3, [r2, #12]

		        temp = EXTI->EMR;
 80018f6:	4b26      	ldr	r3, [pc, #152]	@ (8001990 <GPIO_Config+0x328>)
 80018f8:	685b      	ldr	r3, [r3, #4]
 80018fa:	613b      	str	r3, [r7, #16]
		        temp &= ~((uint32_t)iocurrent);
 80018fc:	68bb      	ldr	r3, [r7, #8]
 80018fe:	43db      	mvns	r3, r3
 8001900:	693a      	ldr	r2, [r7, #16]
 8001902:	4013      	ands	r3, r2
 8001904:	613b      	str	r3, [r7, #16]
		        if ((GPIO_Conf->MODE & EXTI_EVT) != 0x00u)
 8001906:	683b      	ldr	r3, [r7, #0]
 8001908:	685b      	ldr	r3, [r3, #4]
 800190a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800190e:	2b00      	cmp	r3, #0
 8001910:	d003      	beq.n	800191a <GPIO_Config+0x2b2>
		        {
		        	temp |= iocurrent;
 8001912:	693a      	ldr	r2, [r7, #16]
 8001914:	68bb      	ldr	r3, [r7, #8]
 8001916:	4313      	orrs	r3, r2
 8001918:	613b      	str	r3, [r7, #16]
		        }
		        EXTI->EMR = temp;
 800191a:	4a1d      	ldr	r2, [pc, #116]	@ (8001990 <GPIO_Config+0x328>)
 800191c:	693b      	ldr	r3, [r7, #16]
 800191e:	6053      	str	r3, [r2, #4]

		        temp = EXTI->IMR;
 8001920:	4b1b      	ldr	r3, [pc, #108]	@ (8001990 <GPIO_Config+0x328>)
 8001922:	681b      	ldr	r3, [r3, #0]
 8001924:	613b      	str	r3, [r7, #16]
		        temp &= ~((uint32_t)iocurrent);
 8001926:	68bb      	ldr	r3, [r7, #8]
 8001928:	43db      	mvns	r3, r3
 800192a:	693a      	ldr	r2, [r7, #16]
 800192c:	4013      	ands	r3, r2
 800192e:	613b      	str	r3, [r7, #16]
		        if ((GPIO_Conf->MODE & EXTI_IT) != 0x00u)
 8001930:	683b      	ldr	r3, [r7, #0]
 8001932:	685b      	ldr	r3, [r3, #4]
 8001934:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001938:	2b00      	cmp	r3, #0
 800193a:	d003      	beq.n	8001944 <GPIO_Config+0x2dc>
		        {
		        	temp |= iocurrent;
 800193c:	693a      	ldr	r2, [r7, #16]
 800193e:	68bb      	ldr	r3, [r7, #8]
 8001940:	4313      	orrs	r3, r2
 8001942:	613b      	str	r3, [r7, #16]
		        }
		        EXTI->IMR = temp;
 8001944:	4a12      	ldr	r2, [pc, #72]	@ (8001990 <GPIO_Config+0x328>)
 8001946:	693b      	ldr	r3, [r7, #16]
 8001948:	6013      	str	r3, [r2, #0]
	for(position = 0; position < GPIO_NUMBER; position++)
 800194a:	697b      	ldr	r3, [r7, #20]
 800194c:	3301      	adds	r3, #1
 800194e:	617b      	str	r3, [r7, #20]
 8001950:	697b      	ldr	r3, [r7, #20]
 8001952:	2b0f      	cmp	r3, #15
 8001954:	f67f ae98 	bls.w	8001688 <GPIO_Config+0x20>
		    }
		}
	}
}
 8001958:	bf00      	nop
 800195a:	bf00      	nop
 800195c:	371c      	adds	r7, #28
 800195e:	46bd      	mov	sp, r7
 8001960:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001964:	4770      	bx	lr
 8001966:	bf00      	nop
 8001968:	40023800 	.word	0x40023800
 800196c:	40013800 	.word	0x40013800
 8001970:	40020000 	.word	0x40020000
 8001974:	40020400 	.word	0x40020400
 8001978:	40020800 	.word	0x40020800
 800197c:	40020c00 	.word	0x40020c00
 8001980:	40021000 	.word	0x40021000
 8001984:	40021400 	.word	0x40021400
 8001988:	40021800 	.word	0x40021800
 800198c:	40021c00 	.word	0x40021c00
 8001990:	40013c00 	.word	0x40013c00

08001994 <GPIO_Write>:

void GPIO_Write(GPIO_TypeDef *GPIOx, uint16_t Pin, GPIO_State State)
{
 8001994:	b480      	push	{r7}
 8001996:	b083      	sub	sp, #12
 8001998:	af00      	add	r7, sp, #0
 800199a:	6078      	str	r0, [r7, #4]
 800199c:	460b      	mov	r3, r1
 800199e:	807b      	strh	r3, [r7, #2]
 80019a0:	4613      	mov	r3, r2
 80019a2:	707b      	strb	r3, [r7, #1]
	if(State == GPIO_RESET)
 80019a4:	787b      	ldrb	r3, [r7, #1]
 80019a6:	2b00      	cmp	r3, #0
 80019a8:	d103      	bne.n	80019b2 <GPIO_Write+0x1e>
	{
		GPIOx->BSRR = Pin;
 80019aa:	887a      	ldrh	r2, [r7, #2]
 80019ac:	687b      	ldr	r3, [r7, #4]
 80019ae:	619a      	str	r2, [r3, #24]
	}
	else
	{
		GPIOx->BSRR = (uint32_t)Pin << 16;
	}
}
 80019b0:	e003      	b.n	80019ba <GPIO_Write+0x26>
		GPIOx->BSRR = (uint32_t)Pin << 16;
 80019b2:	887b      	ldrh	r3, [r7, #2]
 80019b4:	041a      	lsls	r2, r3, #16
 80019b6:	687b      	ldr	r3, [r7, #4]
 80019b8:	619a      	str	r2, [r3, #24]
}
 80019ba:	bf00      	nop
 80019bc:	370c      	adds	r7, #12
 80019be:	46bd      	mov	sp, r7
 80019c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019c4:	4770      	bx	lr

080019c6 <NMI_Handler>:
 */

#include "interrupt.h"

void NMI_Handler(void)
{
 80019c6:	b480      	push	{r7}
 80019c8:	af00      	add	r7, sp, #0
	while(1);
 80019ca:	bf00      	nop
 80019cc:	e7fd      	b.n	80019ca <NMI_Handler+0x4>

080019ce <HardFault_Handler>:
}

void HardFault_Handler(void)
{
 80019ce:	b480      	push	{r7}
 80019d0:	af00      	add	r7, sp, #0
	while(1);
 80019d2:	bf00      	nop
 80019d4:	e7fd      	b.n	80019d2 <HardFault_Handler+0x4>

080019d6 <MemManage_Handler>:
}

void MemManage_Handler(void)
{
 80019d6:	b480      	push	{r7}
 80019d8:	af00      	add	r7, sp, #0
	while(1);
 80019da:	bf00      	nop
 80019dc:	e7fd      	b.n	80019da <MemManage_Handler+0x4>

080019de <BusFault_Handler>:
}

void BusFault_Handler(void)
{
 80019de:	b480      	push	{r7}
 80019e0:	af00      	add	r7, sp, #0
	while(1);
 80019e2:	bf00      	nop
 80019e4:	e7fd      	b.n	80019e2 <BusFault_Handler+0x4>

080019e6 <UsageFault_Handler>:
}

void UsageFault_Handler(void)
{
 80019e6:	b480      	push	{r7}
 80019e8:	af00      	add	r7, sp, #0
	while(1);
 80019ea:	bf00      	nop
 80019ec:	e7fd      	b.n	80019ea <UsageFault_Handler+0x4>

080019ee <SVC_Handler>:
}

void SVC_Handler(void)
{
 80019ee:	b480      	push	{r7}
 80019f0:	af00      	add	r7, sp, #0

}
 80019f2:	bf00      	nop
 80019f4:	46bd      	mov	sp, r7
 80019f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019fa:	4770      	bx	lr

080019fc <DebugMon_Handler>:

void DebugMon_Handler(void)
{
 80019fc:	b480      	push	{r7}
 80019fe:	af00      	add	r7, sp, #0

}
 8001a00:	bf00      	nop
 8001a02:	46bd      	mov	sp, r7
 8001a04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a08:	4770      	bx	lr

08001a0a <PendSV_Handler>:

void PendSV_Handler(void)
{
 8001a0a:	b480      	push	{r7}
 8001a0c:	af00      	add	r7, sp, #0

}
 8001a0e:	bf00      	nop
 8001a10:	46bd      	mov	sp, r7
 8001a12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a16:	4770      	bx	lr

08001a18 <SysTick_Handler>:

void SysTick_Handler(void)
{
 8001a18:	b480      	push	{r7}
 8001a1a:	af00      	add	r7, sp, #0
	uwTick += 1U;
 8001a1c:	4b04      	ldr	r3, [pc, #16]	@ (8001a30 <SysTick_Handler+0x18>)
 8001a1e:	681b      	ldr	r3, [r3, #0]
 8001a20:	3301      	adds	r3, #1
 8001a22:	4a03      	ldr	r2, [pc, #12]	@ (8001a30 <SysTick_Handler+0x18>)
 8001a24:	6013      	str	r3, [r2, #0]
}
 8001a26:	bf00      	nop
 8001a28:	46bd      	mov	sp, r7
 8001a2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a2e:	4770      	bx	lr
 8001a30:	200001f0 	.word	0x200001f0

08001a34 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8001a34:	b480      	push	{r7}
 8001a36:	b085      	sub	sp, #20
 8001a38:	af00      	add	r7, sp, #0
 8001a3a:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8001a3c:	687b      	ldr	r3, [r7, #4]
 8001a3e:	f003 0307 	and.w	r3, r3, #7
 8001a42:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8001a44:	4b0b      	ldr	r3, [pc, #44]	@ (8001a74 <__NVIC_SetPriorityGrouping+0x40>)
 8001a46:	68db      	ldr	r3, [r3, #12]
 8001a48:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8001a4a:	68ba      	ldr	r2, [r7, #8]
 8001a4c:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8001a50:	4013      	ands	r3, r2
 8001a52:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8001a54:	68fb      	ldr	r3, [r7, #12]
 8001a56:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8001a58:	68bb      	ldr	r3, [r7, #8]
 8001a5a:	431a      	orrs	r2, r3
  reg_value  =  (reg_value                                   |
 8001a5c:	4b06      	ldr	r3, [pc, #24]	@ (8001a78 <__NVIC_SetPriorityGrouping+0x44>)
 8001a5e:	4313      	orrs	r3, r2
 8001a60:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8001a62:	4a04      	ldr	r2, [pc, #16]	@ (8001a74 <__NVIC_SetPriorityGrouping+0x40>)
 8001a64:	68bb      	ldr	r3, [r7, #8]
 8001a66:	60d3      	str	r3, [r2, #12]
}
 8001a68:	bf00      	nop
 8001a6a:	3714      	adds	r7, #20
 8001a6c:	46bd      	mov	sp, r7
 8001a6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a72:	4770      	bx	lr
 8001a74:	e000ed00 	.word	0xe000ed00
 8001a78:	05fa0000 	.word	0x05fa0000

08001a7c <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8001a7c:	b480      	push	{r7}
 8001a7e:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8001a80:	4b04      	ldr	r3, [pc, #16]	@ (8001a94 <__NVIC_GetPriorityGrouping+0x18>)
 8001a82:	68db      	ldr	r3, [r3, #12]
 8001a84:	0a1b      	lsrs	r3, r3, #8
 8001a86:	f003 0307 	and.w	r3, r3, #7
}
 8001a8a:	4618      	mov	r0, r3
 8001a8c:	46bd      	mov	sp, r7
 8001a8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a92:	4770      	bx	lr
 8001a94:	e000ed00 	.word	0xe000ed00

08001a98 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8001a98:	b480      	push	{r7}
 8001a9a:	b083      	sub	sp, #12
 8001a9c:	af00      	add	r7, sp, #0
 8001a9e:	4603      	mov	r3, r0
 8001aa0:	6039      	str	r1, [r7, #0]
 8001aa2:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001aa4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001aa8:	2b00      	cmp	r3, #0
 8001aaa:	db0a      	blt.n	8001ac2 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001aac:	683b      	ldr	r3, [r7, #0]
 8001aae:	b2da      	uxtb	r2, r3
 8001ab0:	490c      	ldr	r1, [pc, #48]	@ (8001ae4 <__NVIC_SetPriority+0x4c>)
 8001ab2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001ab6:	0112      	lsls	r2, r2, #4
 8001ab8:	b2d2      	uxtb	r2, r2
 8001aba:	440b      	add	r3, r1
 8001abc:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
  }
  else
  {
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8001ac0:	e00a      	b.n	8001ad8 <__NVIC_SetPriority+0x40>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001ac2:	683b      	ldr	r3, [r7, #0]
 8001ac4:	b2da      	uxtb	r2, r3
 8001ac6:	4908      	ldr	r1, [pc, #32]	@ (8001ae8 <__NVIC_SetPriority+0x50>)
 8001ac8:	79fb      	ldrb	r3, [r7, #7]
 8001aca:	f003 030f 	and.w	r3, r3, #15
 8001ace:	3b04      	subs	r3, #4
 8001ad0:	0112      	lsls	r2, r2, #4
 8001ad2:	b2d2      	uxtb	r2, r2
 8001ad4:	440b      	add	r3, r1
 8001ad6:	761a      	strb	r2, [r3, #24]
}
 8001ad8:	bf00      	nop
 8001ada:	370c      	adds	r7, #12
 8001adc:	46bd      	mov	sp, r7
 8001ade:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ae2:	4770      	bx	lr
 8001ae4:	e000e100 	.word	0xe000e100
 8001ae8:	e000ed00 	.word	0xe000ed00

08001aec <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8001aec:	b480      	push	{r7}
 8001aee:	b089      	sub	sp, #36	@ 0x24
 8001af0:	af00      	add	r7, sp, #0
 8001af2:	60f8      	str	r0, [r7, #12]
 8001af4:	60b9      	str	r1, [r7, #8]
 8001af6:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8001af8:	68fb      	ldr	r3, [r7, #12]
 8001afa:	f003 0307 	and.w	r3, r3, #7
 8001afe:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8001b00:	69fb      	ldr	r3, [r7, #28]
 8001b02:	f1c3 0307 	rsb	r3, r3, #7
 8001b06:	2b04      	cmp	r3, #4
 8001b08:	bf28      	it	cs
 8001b0a:	2304      	movcs	r3, #4
 8001b0c:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8001b0e:	69fb      	ldr	r3, [r7, #28]
 8001b10:	3304      	adds	r3, #4
 8001b12:	2b06      	cmp	r3, #6
 8001b14:	d902      	bls.n	8001b1c <NVIC_EncodePriority+0x30>
 8001b16:	69fb      	ldr	r3, [r7, #28]
 8001b18:	3b03      	subs	r3, #3
 8001b1a:	e000      	b.n	8001b1e <NVIC_EncodePriority+0x32>
 8001b1c:	2300      	movs	r3, #0
 8001b1e:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001b20:	f04f 32ff 	mov.w	r2, #4294967295
 8001b24:	69bb      	ldr	r3, [r7, #24]
 8001b26:	fa02 f303 	lsl.w	r3, r2, r3
 8001b2a:	43da      	mvns	r2, r3
 8001b2c:	68bb      	ldr	r3, [r7, #8]
 8001b2e:	401a      	ands	r2, r3
 8001b30:	697b      	ldr	r3, [r7, #20]
 8001b32:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8001b34:	f04f 31ff 	mov.w	r1, #4294967295
 8001b38:	697b      	ldr	r3, [r7, #20]
 8001b3a:	fa01 f303 	lsl.w	r3, r1, r3
 8001b3e:	43d9      	mvns	r1, r3
 8001b40:	687b      	ldr	r3, [r7, #4]
 8001b42:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001b44:	4313      	orrs	r3, r2
         );
}
 8001b46:	4618      	mov	r0, r3
 8001b48:	3724      	adds	r7, #36	@ 0x24
 8001b4a:	46bd      	mov	sp, r7
 8001b4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b50:	4770      	bx	lr
	...

08001b54 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8001b54:	b580      	push	{r7, lr}
 8001b56:	b082      	sub	sp, #8
 8001b58:	af00      	add	r7, sp, #0
 8001b5a:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8001b5c:	687b      	ldr	r3, [r7, #4]
 8001b5e:	3b01      	subs	r3, #1
 8001b60:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8001b64:	d301      	bcc.n	8001b6a <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8001b66:	2301      	movs	r3, #1
 8001b68:	e00f      	b.n	8001b8a <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8001b6a:	4a0a      	ldr	r2, [pc, #40]	@ (8001b94 <SysTick_Config+0x40>)
 8001b6c:	687b      	ldr	r3, [r7, #4]
 8001b6e:	3b01      	subs	r3, #1
 8001b70:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8001b72:	210f      	movs	r1, #15
 8001b74:	f04f 30ff 	mov.w	r0, #4294967295
 8001b78:	f7ff ff8e 	bl	8001a98 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8001b7c:	4b05      	ldr	r3, [pc, #20]	@ (8001b94 <SysTick_Config+0x40>)
 8001b7e:	2200      	movs	r2, #0
 8001b80:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8001b82:	4b04      	ldr	r3, [pc, #16]	@ (8001b94 <SysTick_Config+0x40>)
 8001b84:	2207      	movs	r2, #7
 8001b86:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8001b88:	2300      	movs	r3, #0
}
 8001b8a:	4618      	mov	r0, r3
 8001b8c:	3708      	adds	r7, #8
 8001b8e:	46bd      	mov	sp, r7
 8001b90:	bd80      	pop	{r7, pc}
 8001b92:	bf00      	nop
 8001b94:	e000e010 	.word	0xe000e010

08001b98 <System_Config>:

#include "system_config.h"


void System_Config(void)
{
 8001b98:	b580      	push	{r7, lr}
 8001b9a:	af00      	add	r7, sp, #0
	NVIC_SetPriorityGrouping((uint32_t)TICK_INT_PRIORITY);
 8001b9c:	2003      	movs	r0, #3
 8001b9e:	f7ff ff49 	bl	8001a34 <__NVIC_SetPriorityGrouping>

	Tick_Init(TICK_INT_PRIORITY);
 8001ba2:	2003      	movs	r0, #3
 8001ba4:	f000 f812 	bl	8001bcc <Tick_Init>

	SET_BIT(RCC->APB1ENR, RCC_APB1ENR_PWREN);
 8001ba8:	4b06      	ldr	r3, [pc, #24]	@ (8001bc4 <System_Config+0x2c>)
 8001baa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001bac:	4a05      	ldr	r2, [pc, #20]	@ (8001bc4 <System_Config+0x2c>)
 8001bae:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001bb2:	6413      	str	r3, [r2, #64]	@ 0x40
	MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_CR1_VOS);
 8001bb4:	4b04      	ldr	r3, [pc, #16]	@ (8001bc8 <System_Config+0x30>)
 8001bb6:	681b      	ldr	r3, [r3, #0]
 8001bb8:	4a03      	ldr	r2, [pc, #12]	@ (8001bc8 <System_Config+0x30>)
 8001bba:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8001bbe:	6013      	str	r3, [r2, #0]
}
 8001bc0:	bf00      	nop
 8001bc2:	bd80      	pop	{r7, pc}
 8001bc4:	40023800 	.word	0x40023800
 8001bc8:	40007000 	.word	0x40007000

08001bcc <Tick_Init>:

void Tick_Init(uint32_t TickPriority)
{
 8001bcc:	b580      	push	{r7, lr}
 8001bce:	b084      	sub	sp, #16
 8001bd0:	af00      	add	r7, sp, #0
 8001bd2:	6078      	str	r0, [r7, #4]
	uint32_t priority_group = 0x00;
 8001bd4:	2300      	movs	r3, #0
 8001bd6:	60fb      	str	r3, [r7, #12]

	priority_group = NVIC_GetPriorityGrouping();
 8001bd8:	f7ff ff50 	bl	8001a7c <__NVIC_GetPriorityGrouping>
 8001bdc:	60f8      	str	r0, [r7, #12]
	SysTick_Config(SystemCoreClock / (1000U / 1U));
 8001bde:	4b0f      	ldr	r3, [pc, #60]	@ (8001c1c <Tick_Init+0x50>)
 8001be0:	681b      	ldr	r3, [r3, #0]
 8001be2:	4a0f      	ldr	r2, [pc, #60]	@ (8001c20 <Tick_Init+0x54>)
 8001be4:	fba2 2303 	umull	r2, r3, r2, r3
 8001be8:	099b      	lsrs	r3, r3, #6
 8001bea:	4618      	mov	r0, r3
 8001bec:	f7ff ffb2 	bl	8001b54 <SysTick_Config>

	if(TickPriority < (1U << __NVIC_PRIO_BITS))
 8001bf0:	687b      	ldr	r3, [r7, #4]
 8001bf2:	2b0f      	cmp	r3, #15
 8001bf4:	d80d      	bhi.n	8001c12 <Tick_Init+0x46>
	{
		NVIC_SetPriority(SysTick_IRQn, NVIC_EncodePriority(priority_group, TickPriority, 0));
 8001bf6:	2200      	movs	r2, #0
 8001bf8:	6879      	ldr	r1, [r7, #4]
 8001bfa:	68f8      	ldr	r0, [r7, #12]
 8001bfc:	f7ff ff76 	bl	8001aec <NVIC_EncodePriority>
 8001c00:	4603      	mov	r3, r0
 8001c02:	4619      	mov	r1, r3
 8001c04:	f04f 30ff 	mov.w	r0, #4294967295
 8001c08:	f7ff ff46 	bl	8001a98 <__NVIC_SetPriority>
		uwTickPrio = TickPriority;
 8001c0c:	4a05      	ldr	r2, [pc, #20]	@ (8001c24 <Tick_Init+0x58>)
 8001c0e:	687b      	ldr	r3, [r7, #4]
 8001c10:	6013      	str	r3, [r2, #0]
	}
}
 8001c12:	bf00      	nop
 8001c14:	3710      	adds	r7, #16
 8001c16:	46bd      	mov	sp, r7
 8001c18:	bd80      	pop	{r7, pc}
 8001c1a:	bf00      	nop
 8001c1c:	20000000 	.word	0x20000000
 8001c20:	10624dd3 	.word	0x10624dd3
 8001c24:	20000004 	.word	0x20000004

08001c28 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 8001c28:	b580      	push	{r7, lr}
 8001c2a:	af00      	add	r7, sp, #0
	System_Config();
 8001c2c:	f7ff ffb4 	bl	8001b98 <System_Config>

	System_Clock_Config();
 8001c30:	f000 f818 	bl	8001c64 <System_Clock_Config>

	GPIO_Init();
 8001c34:	f000 f8ae 	bl	8001d94 <GPIO_Init>

	while(1)
	{
		GPIO_Write(GPIOA, (1<<0), GPIO_SET);
 8001c38:	2201      	movs	r2, #1
 8001c3a:	2101      	movs	r1, #1
 8001c3c:	4808      	ldr	r0, [pc, #32]	@ (8001c60 <main+0x38>)
 8001c3e:	f7ff fea9 	bl	8001994 <GPIO_Write>
		Delay_Ms(500);
 8001c42:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 8001c46:	f7ff fced 	bl	8001624 <Delay_Ms>
		GPIO_Write(GPIOA, (1<<0), GPIO_RESET);
 8001c4a:	2200      	movs	r2, #0
 8001c4c:	2101      	movs	r1, #1
 8001c4e:	4804      	ldr	r0, [pc, #16]	@ (8001c60 <main+0x38>)
 8001c50:	f7ff fea0 	bl	8001994 <GPIO_Write>
		Delay_Ms(500);
 8001c54:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 8001c58:	f7ff fce4 	bl	8001624 <Delay_Ms>
		GPIO_Write(GPIOA, (1<<0), GPIO_SET);
 8001c5c:	bf00      	nop
 8001c5e:	e7eb      	b.n	8001c38 <main+0x10>
 8001c60:	40020000 	.word	0x40020000

08001c64 <System_Clock_Config>:
	}
}

void System_Clock_Config(void)
{
 8001c64:	b580      	push	{r7, lr}
 8001c66:	b092      	sub	sp, #72	@ 0x48
 8001c68:	af00      	add	r7, sp, #0
	OSC_ConfigSetTypeDef config = {0};
 8001c6a:	f107 031c 	add.w	r3, r7, #28
 8001c6e:	2228      	movs	r2, #40	@ 0x28
 8001c70:	2100      	movs	r1, #0
 8001c72:	4618      	mov	r0, r3
 8001c74:	f000 fe5b 	bl	800292e <memset>
	Clock_ConfigTypeDef clock_config = {0};
 8001c78:	1d3b      	adds	r3, r7, #4
 8001c7a:	2200      	movs	r2, #0
 8001c7c:	601a      	str	r2, [r3, #0]
 8001c7e:	605a      	str	r2, [r3, #4]
 8001c80:	609a      	str	r2, [r3, #8]
 8001c82:	60da      	str	r2, [r3, #12]
 8001c84:	611a      	str	r2, [r3, #16]
 8001c86:	615a      	str	r2, [r3, #20]
	uint32_t TickStart;

	SET_BIT(RCC->APB1ENR, RCC_APB1ENR_PWREN);
 8001c88:	4b3f      	ldr	r3, [pc, #252]	@ (8001d88 <System_Clock_Config+0x124>)
 8001c8a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c8c:	4a3e      	ldr	r2, [pc, #248]	@ (8001d88 <System_Clock_Config+0x124>)
 8001c8e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001c92:	6413      	str	r3, [r2, #64]	@ 0x40
	MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_CR1_VOS);
 8001c94:	4b3d      	ldr	r3, [pc, #244]	@ (8001d8c <System_Clock_Config+0x128>)
 8001c96:	681b      	ldr	r3, [r3, #0]
 8001c98:	4a3c      	ldr	r2, [pc, #240]	@ (8001d8c <System_Clock_Config+0x128>)
 8001c9a:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8001c9e:	6013      	str	r3, [r2, #0]

	config.OSC_TYPE = OSC_TYPE_HSE;
 8001ca0:	2301      	movs	r3, #1
 8001ca2:	61fb      	str	r3, [r7, #28]
	config.HSE_SET.HSE_STATE = HSE_ON;
 8001ca4:	2301      	movs	r3, #1
 8001ca6:	f887 3038 	strb.w	r3, [r7, #56]	@ 0x38
	config.HSI_SET.HSI_STATE = HSI_OFF;
 8001caa:	2300      	movs	r3, #0
 8001cac:	f887 3040 	strb.w	r3, [r7, #64]	@ 0x40
	config.PLL_SET.PLL_STATE = PLL_ON;
 8001cb0:	2301      	movs	r3, #1
 8001cb2:	f887 3020 	strb.w	r3, [r7, #32]
	config.PLL_SET.PLLSRC = PLLSRC_HSE;
 8001cb6:	2301      	movs	r3, #1
 8001cb8:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
	config.PLL_SET.PLLM = 12;
 8001cbc:	230c      	movs	r3, #12
 8001cbe:	627b      	str	r3, [r7, #36]	@ 0x24
	config.PLL_SET.PLLN = 216;
 8001cc0:	23d8      	movs	r3, #216	@ 0xd8
 8001cc2:	62bb      	str	r3, [r7, #40]	@ 0x28
	config.PLL_SET.PLLP = 0;
 8001cc4:	2300      	movs	r3, #0
 8001cc6:	62fb      	str	r3, [r7, #44]	@ 0x2c
	config.PLL_SET.PLLQ = 9;
 8001cc8:	2309      	movs	r3, #9
 8001cca:	633b      	str	r3, [r7, #48]	@ 0x30
	if(Clock_Setup_OSC(&config) != STATE_OK)
 8001ccc:	f107 031c 	add.w	r3, r7, #28
 8001cd0:	4618      	mov	r0, r3
 8001cd2:	f7ff f9e5 	bl	80010a0 <Clock_Setup_OSC>
 8001cd6:	4603      	mov	r3, r0
 8001cd8:	2b00      	cmp	r3, #0
 8001cda:	d001      	beq.n	8001ce0 <System_Clock_Config+0x7c>
	{
		Error_Handler();
 8001cdc:	f000 f89c 	bl	8001e18 <Error_Handler>
	}

	SET_BIT(RCC->APB1ENR, RCC_APB1ENR_PWREN);
 8001ce0:	4b29      	ldr	r3, [pc, #164]	@ (8001d88 <System_Clock_Config+0x124>)
 8001ce2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001ce4:	4a28      	ldr	r2, [pc, #160]	@ (8001d88 <System_Clock_Config+0x124>)
 8001ce6:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001cea:	6413      	str	r3, [r2, #64]	@ 0x40
	PWR->CR1 |= (uint32_t)PWR_CR1_ODEN;
 8001cec:	4b27      	ldr	r3, [pc, #156]	@ (8001d8c <System_Clock_Config+0x128>)
 8001cee:	681b      	ldr	r3, [r3, #0]
 8001cf0:	4a26      	ldr	r2, [pc, #152]	@ (8001d8c <System_Clock_Config+0x128>)
 8001cf2:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8001cf6:	6013      	str	r3, [r2, #0]

	TickStart = uwTick;
 8001cf8:	4b25      	ldr	r3, [pc, #148]	@ (8001d90 <System_Clock_Config+0x12c>)
 8001cfa:	681b      	ldr	r3, [r3, #0]
 8001cfc:	647b      	str	r3, [r7, #68]	@ 0x44
	while(!(PWR->CSR1 & PWR_CSR1_ODRDY))
 8001cfe:	e008      	b.n	8001d12 <System_Clock_Config+0xae>
	{
		if((uwTick - TickStart) > 1000)
 8001d00:	4b23      	ldr	r3, [pc, #140]	@ (8001d90 <System_Clock_Config+0x12c>)
 8001d02:	681a      	ldr	r2, [r3, #0]
 8001d04:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8001d06:	1ad3      	subs	r3, r2, r3
 8001d08:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8001d0c:	d901      	bls.n	8001d12 <System_Clock_Config+0xae>
		{
			Error_Handler();
 8001d0e:	f000 f883 	bl	8001e18 <Error_Handler>
	while(!(PWR->CSR1 & PWR_CSR1_ODRDY))
 8001d12:	4b1e      	ldr	r3, [pc, #120]	@ (8001d8c <System_Clock_Config+0x128>)
 8001d14:	685b      	ldr	r3, [r3, #4]
 8001d16:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001d1a:	2b00      	cmp	r3, #0
 8001d1c:	d0f0      	beq.n	8001d00 <System_Clock_Config+0x9c>
		}
	}

	PWR->CR1 |= (uint32_t)PWR_CR1_ODSWEN;
 8001d1e:	4b1b      	ldr	r3, [pc, #108]	@ (8001d8c <System_Clock_Config+0x128>)
 8001d20:	681b      	ldr	r3, [r3, #0]
 8001d22:	4a1a      	ldr	r2, [pc, #104]	@ (8001d8c <System_Clock_Config+0x128>)
 8001d24:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001d28:	6013      	str	r3, [r2, #0]

	TickStart = uwTick;
 8001d2a:	4b19      	ldr	r3, [pc, #100]	@ (8001d90 <System_Clock_Config+0x12c>)
 8001d2c:	681b      	ldr	r3, [r3, #0]
 8001d2e:	647b      	str	r3, [r7, #68]	@ 0x44
	while(!(PWR->CSR1 & PWR_CSR1_ODSWRDY))
 8001d30:	e008      	b.n	8001d44 <System_Clock_Config+0xe0>
	{
		if((uwTick - TickStart) > 1000)
 8001d32:	4b17      	ldr	r3, [pc, #92]	@ (8001d90 <System_Clock_Config+0x12c>)
 8001d34:	681a      	ldr	r2, [r3, #0]
 8001d36:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8001d38:	1ad3      	subs	r3, r2, r3
 8001d3a:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8001d3e:	d901      	bls.n	8001d44 <System_Clock_Config+0xe0>
		{
			Error_Handler();
 8001d40:	f000 f86a 	bl	8001e18 <Error_Handler>
	while(!(PWR->CSR1 & PWR_CSR1_ODSWRDY))
 8001d44:	4b11      	ldr	r3, [pc, #68]	@ (8001d8c <System_Clock_Config+0x128>)
 8001d46:	685b      	ldr	r3, [r3, #4]
 8001d48:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001d4c:	2b00      	cmp	r3, #0
 8001d4e:	d0f0      	beq.n	8001d32 <System_Clock_Config+0xce>
		}
	}

	clock_config.CLOCK_TYPE = RCC_CLK_TYPE_SYSCLK | RCC_CLK_TYPE_HCLK | RCC_CLK_TYPE_PCLK1 | RCC_CLK_TYPE_PCLK2;
 8001d50:	230f      	movs	r3, #15
 8001d52:	607b      	str	r3, [r7, #4]
	clock_config.SYSCLK_SOURCE = RCC_SYSCLKSOURCE_PLLCLK;
 8001d54:	2302      	movs	r3, #2
 8001d56:	60bb      	str	r3, [r7, #8]
	clock_config.AHBCLK_DIV = RCC_SYSCLK_DIV1;
 8001d58:	2300      	movs	r3, #0
 8001d5a:	60fb      	str	r3, [r7, #12]
	clock_config.APB1CLK_DIV = RCC_HCLK_DIV4;
 8001d5c:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 8001d60:	613b      	str	r3, [r7, #16]
	clock_config.APB2CLK_DIV = RCC_HCLK_DIV2;
 8001d62:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001d66:	617b      	str	r3, [r7, #20]
	clock_config.FLatency = FLASH_ACR_LATENCY_7WS;
 8001d68:	2307      	movs	r3, #7
 8001d6a:	61bb      	str	r3, [r7, #24]
	if(Clock_Setup_Clock(&clock_config))
 8001d6c:	1d3b      	adds	r3, r7, #4
 8001d6e:	4618      	mov	r0, r3
 8001d70:	f7ff faa4 	bl	80012bc <Clock_Setup_Clock>
 8001d74:	4603      	mov	r3, r0
 8001d76:	2b00      	cmp	r3, #0
 8001d78:	d001      	beq.n	8001d7e <System_Clock_Config+0x11a>
	{
		Error_Handler();
 8001d7a:	f000 f84d 	bl	8001e18 <Error_Handler>
	}
}
 8001d7e:	bf00      	nop
 8001d80:	3748      	adds	r7, #72	@ 0x48
 8001d82:	46bd      	mov	sp, r7
 8001d84:	bd80      	pop	{r7, pc}
 8001d86:	bf00      	nop
 8001d88:	40023800 	.word	0x40023800
 8001d8c:	40007000 	.word	0x40007000
 8001d90:	200001f0 	.word	0x200001f0

08001d94 <GPIO_Init>:

static void GPIO_Init(void)
{
 8001d94:	b580      	push	{r7, lr}
 8001d96:	b086      	sub	sp, #24
 8001d98:	af00      	add	r7, sp, #0
	GPIO_ConfigTypeDef config = {0};
 8001d9a:	1d3b      	adds	r3, r7, #4
 8001d9c:	2200      	movs	r2, #0
 8001d9e:	601a      	str	r2, [r3, #0]
 8001da0:	605a      	str	r2, [r3, #4]
 8001da2:	609a      	str	r2, [r3, #8]
 8001da4:	60da      	str	r2, [r3, #12]
 8001da6:	611a      	str	r2, [r3, #16]

	RCC_GPIOCLK_ENABLE(RCC_AHB1ENR_GPIOAEN);
 8001da8:	4b19      	ldr	r3, [pc, #100]	@ (8001e10 <GPIO_Init+0x7c>)
 8001daa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001dac:	4a18      	ldr	r2, [pc, #96]	@ (8001e10 <GPIO_Init+0x7c>)
 8001dae:	f043 0301 	orr.w	r3, r3, #1
 8001db2:	6313      	str	r3, [r2, #48]	@ 0x30
	RCC_GPIOCLK_ENABLE(RCC_AHB1ENR_GPIOBEN);
 8001db4:	4b16      	ldr	r3, [pc, #88]	@ (8001e10 <GPIO_Init+0x7c>)
 8001db6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001db8:	4a15      	ldr	r2, [pc, #84]	@ (8001e10 <GPIO_Init+0x7c>)
 8001dba:	f043 0302 	orr.w	r3, r3, #2
 8001dbe:	6313      	str	r3, [r2, #48]	@ 0x30
	RCC_GPIOCLK_ENABLE(RCC_AHB1ENR_GPIOHEN);
 8001dc0:	4b13      	ldr	r3, [pc, #76]	@ (8001e10 <GPIO_Init+0x7c>)
 8001dc2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001dc4:	4a12      	ldr	r2, [pc, #72]	@ (8001e10 <GPIO_Init+0x7c>)
 8001dc6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001dca:	6313      	str	r3, [r2, #48]	@ 0x30

	config.PIN = (1 << 8);
 8001dcc:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8001dd0:	607b      	str	r3, [r7, #4]
	config.MODE = GPIO_MODE_AF_PP;
 8001dd2:	2302      	movs	r3, #2
 8001dd4:	60bb      	str	r3, [r7, #8]
	config.PULL = GPIO_NOPULL;
 8001dd6:	2300      	movs	r3, #0
 8001dd8:	60fb      	str	r3, [r7, #12]
	config.SPEED = GPIO_SPEED_FREQ_LOW;
 8001dda:	2300      	movs	r3, #0
 8001ddc:	613b      	str	r3, [r7, #16]
	config.ALT = (uint8_t)0x00;
 8001dde:	2300      	movs	r3, #0
 8001de0:	617b      	str	r3, [r7, #20]

	GPIO_Config(GPIOA, &config);
 8001de2:	1d3b      	adds	r3, r7, #4
 8001de4:	4619      	mov	r1, r3
 8001de6:	480b      	ldr	r0, [pc, #44]	@ (8001e14 <GPIO_Init+0x80>)
 8001de8:	f7ff fc3e 	bl	8001668 <GPIO_Config>


	config.PIN = (1 << 0);
 8001dec:	2301      	movs	r3, #1
 8001dee:	607b      	str	r3, [r7, #4]
	config.MODE = GPIO_MODE_OUTPUT_PP;
 8001df0:	2301      	movs	r3, #1
 8001df2:	60bb      	str	r3, [r7, #8]
	config.PULL = GPIO_NOPULL;
 8001df4:	2300      	movs	r3, #0
 8001df6:	60fb      	str	r3, [r7, #12]
	config.SPEED = GPIO_SPEED_FREQ_LOW;
 8001df8:	2300      	movs	r3, #0
 8001dfa:	613b      	str	r3, [r7, #16]

	GPIO_Config(GPIOA, &config);
 8001dfc:	1d3b      	adds	r3, r7, #4
 8001dfe:	4619      	mov	r1, r3
 8001e00:	4804      	ldr	r0, [pc, #16]	@ (8001e14 <GPIO_Init+0x80>)
 8001e02:	f7ff fc31 	bl	8001668 <GPIO_Config>
}
 8001e06:	bf00      	nop
 8001e08:	3718      	adds	r7, #24
 8001e0a:	46bd      	mov	sp, r7
 8001e0c:	bd80      	pop	{r7, pc}
 8001e0e:	bf00      	nop
 8001e10:	40023800 	.word	0x40023800
 8001e14:	40020000 	.word	0x40020000

08001e18 <Error_Handler>:

void Error_Handler(void)
{
 8001e18:	b480      	push	{r7}
 8001e1a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001e1c:	b672      	cpsid	i
}
 8001e1e:	bf00      	nop
	__disable_irq();
	while(1);
 8001e20:	bf00      	nop
 8001e22:	e7fd      	b.n	8001e20 <Error_Handler+0x8>

08001e24 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8001e24:	480d      	ldr	r0, [pc, #52]	@ (8001e5c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8001e26:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8001e28:	f7ff f924 	bl	8001074 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001e2c:	480c      	ldr	r0, [pc, #48]	@ (8001e60 <LoopForever+0x6>)
  ldr r1, =_edata
 8001e2e:	490d      	ldr	r1, [pc, #52]	@ (8001e64 <LoopForever+0xa>)
  ldr r2, =_sidata
 8001e30:	4a0d      	ldr	r2, [pc, #52]	@ (8001e68 <LoopForever+0xe>)
  movs r3, #0
 8001e32:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001e34:	e002      	b.n	8001e3c <LoopCopyDataInit>

08001e36 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001e36:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001e38:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001e3a:	3304      	adds	r3, #4

08001e3c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001e3c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001e3e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001e40:	d3f9      	bcc.n	8001e36 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001e42:	4a0a      	ldr	r2, [pc, #40]	@ (8001e6c <LoopForever+0x12>)
  ldr r4, =_ebss
 8001e44:	4c0a      	ldr	r4, [pc, #40]	@ (8001e70 <LoopForever+0x16>)
  movs r3, #0
 8001e46:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001e48:	e001      	b.n	8001e4e <LoopFillZerobss>

08001e4a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001e4a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001e4c:	3204      	adds	r2, #4

08001e4e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001e4e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001e50:	d3fb      	bcc.n	8001e4a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8001e52:	f000 fdc5 	bl	80029e0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8001e56:	f7ff fee7 	bl	8001c28 <main>

08001e5a <LoopForever>:

LoopForever:
  b LoopForever
 8001e5a:	e7fe      	b.n	8001e5a <LoopForever>
  ldr   r0, =_estack
 8001e5c:	20040000 	.word	0x20040000
  ldr r0, =_sdata
 8001e60:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001e64:	200001d0 	.word	0x200001d0
  ldr r2, =_sidata
 8001e68:	08004b18 	.word	0x08004b18
  ldr r2, =_sbss
 8001e6c:	200001d0 	.word	0x200001d0
  ldr r4, =_ebss
 8001e70:	20000340 	.word	0x20000340

08001e74 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8001e74:	e7fe      	b.n	8001e74 <ADC_IRQHandler>

08001e76 <__cvt>:
 8001e76:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001e7a:	ec57 6b10 	vmov	r6, r7, d0
 8001e7e:	2f00      	cmp	r7, #0
 8001e80:	460c      	mov	r4, r1
 8001e82:	4619      	mov	r1, r3
 8001e84:	463b      	mov	r3, r7
 8001e86:	bfbb      	ittet	lt
 8001e88:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 8001e8c:	461f      	movlt	r7, r3
 8001e8e:	2300      	movge	r3, #0
 8001e90:	232d      	movlt	r3, #45	@ 0x2d
 8001e92:	700b      	strb	r3, [r1, #0]
 8001e94:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001e96:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 8001e9a:	4691      	mov	r9, r2
 8001e9c:	f023 0820 	bic.w	r8, r3, #32
 8001ea0:	bfbc      	itt	lt
 8001ea2:	4632      	movlt	r2, r6
 8001ea4:	4616      	movlt	r6, r2
 8001ea6:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8001eaa:	d005      	beq.n	8001eb8 <__cvt+0x42>
 8001eac:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8001eb0:	d100      	bne.n	8001eb4 <__cvt+0x3e>
 8001eb2:	3401      	adds	r4, #1
 8001eb4:	2102      	movs	r1, #2
 8001eb6:	e000      	b.n	8001eba <__cvt+0x44>
 8001eb8:	2103      	movs	r1, #3
 8001eba:	ab03      	add	r3, sp, #12
 8001ebc:	9301      	str	r3, [sp, #4]
 8001ebe:	ab02      	add	r3, sp, #8
 8001ec0:	9300      	str	r3, [sp, #0]
 8001ec2:	ec47 6b10 	vmov	d0, r6, r7
 8001ec6:	4653      	mov	r3, sl
 8001ec8:	4622      	mov	r2, r4
 8001eca:	f000 fe39 	bl	8002b40 <_dtoa_r>
 8001ece:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8001ed2:	4605      	mov	r5, r0
 8001ed4:	d119      	bne.n	8001f0a <__cvt+0x94>
 8001ed6:	f019 0f01 	tst.w	r9, #1
 8001eda:	d00e      	beq.n	8001efa <__cvt+0x84>
 8001edc:	eb00 0904 	add.w	r9, r0, r4
 8001ee0:	2200      	movs	r2, #0
 8001ee2:	2300      	movs	r3, #0
 8001ee4:	4630      	mov	r0, r6
 8001ee6:	4639      	mov	r1, r7
 8001ee8:	f7fe fe16 	bl	8000b18 <__aeabi_dcmpeq>
 8001eec:	b108      	cbz	r0, 8001ef2 <__cvt+0x7c>
 8001eee:	f8cd 900c 	str.w	r9, [sp, #12]
 8001ef2:	2230      	movs	r2, #48	@ 0x30
 8001ef4:	9b03      	ldr	r3, [sp, #12]
 8001ef6:	454b      	cmp	r3, r9
 8001ef8:	d31e      	bcc.n	8001f38 <__cvt+0xc2>
 8001efa:	9b03      	ldr	r3, [sp, #12]
 8001efc:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8001efe:	1b5b      	subs	r3, r3, r5
 8001f00:	4628      	mov	r0, r5
 8001f02:	6013      	str	r3, [r2, #0]
 8001f04:	b004      	add	sp, #16
 8001f06:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001f0a:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8001f0e:	eb00 0904 	add.w	r9, r0, r4
 8001f12:	d1e5      	bne.n	8001ee0 <__cvt+0x6a>
 8001f14:	7803      	ldrb	r3, [r0, #0]
 8001f16:	2b30      	cmp	r3, #48	@ 0x30
 8001f18:	d10a      	bne.n	8001f30 <__cvt+0xba>
 8001f1a:	2200      	movs	r2, #0
 8001f1c:	2300      	movs	r3, #0
 8001f1e:	4630      	mov	r0, r6
 8001f20:	4639      	mov	r1, r7
 8001f22:	f7fe fdf9 	bl	8000b18 <__aeabi_dcmpeq>
 8001f26:	b918      	cbnz	r0, 8001f30 <__cvt+0xba>
 8001f28:	f1c4 0401 	rsb	r4, r4, #1
 8001f2c:	f8ca 4000 	str.w	r4, [sl]
 8001f30:	f8da 3000 	ldr.w	r3, [sl]
 8001f34:	4499      	add	r9, r3
 8001f36:	e7d3      	b.n	8001ee0 <__cvt+0x6a>
 8001f38:	1c59      	adds	r1, r3, #1
 8001f3a:	9103      	str	r1, [sp, #12]
 8001f3c:	701a      	strb	r2, [r3, #0]
 8001f3e:	e7d9      	b.n	8001ef4 <__cvt+0x7e>

08001f40 <__exponent>:
 8001f40:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001f42:	2900      	cmp	r1, #0
 8001f44:	bfba      	itte	lt
 8001f46:	4249      	neglt	r1, r1
 8001f48:	232d      	movlt	r3, #45	@ 0x2d
 8001f4a:	232b      	movge	r3, #43	@ 0x2b
 8001f4c:	2909      	cmp	r1, #9
 8001f4e:	7002      	strb	r2, [r0, #0]
 8001f50:	7043      	strb	r3, [r0, #1]
 8001f52:	dd29      	ble.n	8001fa8 <__exponent+0x68>
 8001f54:	f10d 0307 	add.w	r3, sp, #7
 8001f58:	461d      	mov	r5, r3
 8001f5a:	270a      	movs	r7, #10
 8001f5c:	461a      	mov	r2, r3
 8001f5e:	fbb1 f6f7 	udiv	r6, r1, r7
 8001f62:	fb07 1416 	mls	r4, r7, r6, r1
 8001f66:	3430      	adds	r4, #48	@ 0x30
 8001f68:	f802 4c01 	strb.w	r4, [r2, #-1]
 8001f6c:	460c      	mov	r4, r1
 8001f6e:	2c63      	cmp	r4, #99	@ 0x63
 8001f70:	f103 33ff 	add.w	r3, r3, #4294967295
 8001f74:	4631      	mov	r1, r6
 8001f76:	dcf1      	bgt.n	8001f5c <__exponent+0x1c>
 8001f78:	3130      	adds	r1, #48	@ 0x30
 8001f7a:	1e94      	subs	r4, r2, #2
 8001f7c:	f803 1c01 	strb.w	r1, [r3, #-1]
 8001f80:	1c41      	adds	r1, r0, #1
 8001f82:	4623      	mov	r3, r4
 8001f84:	42ab      	cmp	r3, r5
 8001f86:	d30a      	bcc.n	8001f9e <__exponent+0x5e>
 8001f88:	f10d 0309 	add.w	r3, sp, #9
 8001f8c:	1a9b      	subs	r3, r3, r2
 8001f8e:	42ac      	cmp	r4, r5
 8001f90:	bf88      	it	hi
 8001f92:	2300      	movhi	r3, #0
 8001f94:	3302      	adds	r3, #2
 8001f96:	4403      	add	r3, r0
 8001f98:	1a18      	subs	r0, r3, r0
 8001f9a:	b003      	add	sp, #12
 8001f9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001f9e:	f813 6b01 	ldrb.w	r6, [r3], #1
 8001fa2:	f801 6f01 	strb.w	r6, [r1, #1]!
 8001fa6:	e7ed      	b.n	8001f84 <__exponent+0x44>
 8001fa8:	2330      	movs	r3, #48	@ 0x30
 8001faa:	3130      	adds	r1, #48	@ 0x30
 8001fac:	7083      	strb	r3, [r0, #2]
 8001fae:	70c1      	strb	r1, [r0, #3]
 8001fb0:	1d03      	adds	r3, r0, #4
 8001fb2:	e7f1      	b.n	8001f98 <__exponent+0x58>

08001fb4 <_printf_float>:
 8001fb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001fb8:	b08d      	sub	sp, #52	@ 0x34
 8001fba:	460c      	mov	r4, r1
 8001fbc:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8001fc0:	4616      	mov	r6, r2
 8001fc2:	461f      	mov	r7, r3
 8001fc4:	4605      	mov	r5, r0
 8001fc6:	f000 fcbb 	bl	8002940 <_localeconv_r>
 8001fca:	6803      	ldr	r3, [r0, #0]
 8001fcc:	9304      	str	r3, [sp, #16]
 8001fce:	4618      	mov	r0, r3
 8001fd0:	f7fe f976 	bl	80002c0 <strlen>
 8001fd4:	2300      	movs	r3, #0
 8001fd6:	930a      	str	r3, [sp, #40]	@ 0x28
 8001fd8:	f8d8 3000 	ldr.w	r3, [r8]
 8001fdc:	9005      	str	r0, [sp, #20]
 8001fde:	3307      	adds	r3, #7
 8001fe0:	f023 0307 	bic.w	r3, r3, #7
 8001fe4:	f103 0208 	add.w	r2, r3, #8
 8001fe8:	f894 a018 	ldrb.w	sl, [r4, #24]
 8001fec:	f8d4 b000 	ldr.w	fp, [r4]
 8001ff0:	f8c8 2000 	str.w	r2, [r8]
 8001ff4:	e9d3 8900 	ldrd	r8, r9, [r3]
 8001ff8:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8001ffc:	9307      	str	r3, [sp, #28]
 8001ffe:	f8cd 8018 	str.w	r8, [sp, #24]
 8002002:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 8002006:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800200a:	4b9c      	ldr	r3, [pc, #624]	@ (800227c <_printf_float+0x2c8>)
 800200c:	f04f 32ff 	mov.w	r2, #4294967295
 8002010:	f7fe fdb4 	bl	8000b7c <__aeabi_dcmpun>
 8002014:	bb70      	cbnz	r0, 8002074 <_printf_float+0xc0>
 8002016:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800201a:	4b98      	ldr	r3, [pc, #608]	@ (800227c <_printf_float+0x2c8>)
 800201c:	f04f 32ff 	mov.w	r2, #4294967295
 8002020:	f7fe fd8e 	bl	8000b40 <__aeabi_dcmple>
 8002024:	bb30      	cbnz	r0, 8002074 <_printf_float+0xc0>
 8002026:	2200      	movs	r2, #0
 8002028:	2300      	movs	r3, #0
 800202a:	4640      	mov	r0, r8
 800202c:	4649      	mov	r1, r9
 800202e:	f7fe fd7d 	bl	8000b2c <__aeabi_dcmplt>
 8002032:	b110      	cbz	r0, 800203a <_printf_float+0x86>
 8002034:	232d      	movs	r3, #45	@ 0x2d
 8002036:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800203a:	4a91      	ldr	r2, [pc, #580]	@ (8002280 <_printf_float+0x2cc>)
 800203c:	4b91      	ldr	r3, [pc, #580]	@ (8002284 <_printf_float+0x2d0>)
 800203e:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8002042:	bf94      	ite	ls
 8002044:	4690      	movls	r8, r2
 8002046:	4698      	movhi	r8, r3
 8002048:	2303      	movs	r3, #3
 800204a:	6123      	str	r3, [r4, #16]
 800204c:	f02b 0304 	bic.w	r3, fp, #4
 8002050:	6023      	str	r3, [r4, #0]
 8002052:	f04f 0900 	mov.w	r9, #0
 8002056:	9700      	str	r7, [sp, #0]
 8002058:	4633      	mov	r3, r6
 800205a:	aa0b      	add	r2, sp, #44	@ 0x2c
 800205c:	4621      	mov	r1, r4
 800205e:	4628      	mov	r0, r5
 8002060:	f000 f9d2 	bl	8002408 <_printf_common>
 8002064:	3001      	adds	r0, #1
 8002066:	f040 808d 	bne.w	8002184 <_printf_float+0x1d0>
 800206a:	f04f 30ff 	mov.w	r0, #4294967295
 800206e:	b00d      	add	sp, #52	@ 0x34
 8002070:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002074:	4642      	mov	r2, r8
 8002076:	464b      	mov	r3, r9
 8002078:	4640      	mov	r0, r8
 800207a:	4649      	mov	r1, r9
 800207c:	f7fe fd7e 	bl	8000b7c <__aeabi_dcmpun>
 8002080:	b140      	cbz	r0, 8002094 <_printf_float+0xe0>
 8002082:	464b      	mov	r3, r9
 8002084:	2b00      	cmp	r3, #0
 8002086:	bfbc      	itt	lt
 8002088:	232d      	movlt	r3, #45	@ 0x2d
 800208a:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 800208e:	4a7e      	ldr	r2, [pc, #504]	@ (8002288 <_printf_float+0x2d4>)
 8002090:	4b7e      	ldr	r3, [pc, #504]	@ (800228c <_printf_float+0x2d8>)
 8002092:	e7d4      	b.n	800203e <_printf_float+0x8a>
 8002094:	6863      	ldr	r3, [r4, #4]
 8002096:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 800209a:	9206      	str	r2, [sp, #24]
 800209c:	1c5a      	adds	r2, r3, #1
 800209e:	d13b      	bne.n	8002118 <_printf_float+0x164>
 80020a0:	2306      	movs	r3, #6
 80020a2:	6063      	str	r3, [r4, #4]
 80020a4:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 80020a8:	2300      	movs	r3, #0
 80020aa:	6022      	str	r2, [r4, #0]
 80020ac:	9303      	str	r3, [sp, #12]
 80020ae:	ab0a      	add	r3, sp, #40	@ 0x28
 80020b0:	e9cd a301 	strd	sl, r3, [sp, #4]
 80020b4:	ab09      	add	r3, sp, #36	@ 0x24
 80020b6:	9300      	str	r3, [sp, #0]
 80020b8:	6861      	ldr	r1, [r4, #4]
 80020ba:	ec49 8b10 	vmov	d0, r8, r9
 80020be:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 80020c2:	4628      	mov	r0, r5
 80020c4:	f7ff fed7 	bl	8001e76 <__cvt>
 80020c8:	9b06      	ldr	r3, [sp, #24]
 80020ca:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80020cc:	2b47      	cmp	r3, #71	@ 0x47
 80020ce:	4680      	mov	r8, r0
 80020d0:	d129      	bne.n	8002126 <_printf_float+0x172>
 80020d2:	1cc8      	adds	r0, r1, #3
 80020d4:	db02      	blt.n	80020dc <_printf_float+0x128>
 80020d6:	6863      	ldr	r3, [r4, #4]
 80020d8:	4299      	cmp	r1, r3
 80020da:	dd41      	ble.n	8002160 <_printf_float+0x1ac>
 80020dc:	f1aa 0a02 	sub.w	sl, sl, #2
 80020e0:	fa5f fa8a 	uxtb.w	sl, sl
 80020e4:	3901      	subs	r1, #1
 80020e6:	4652      	mov	r2, sl
 80020e8:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 80020ec:	9109      	str	r1, [sp, #36]	@ 0x24
 80020ee:	f7ff ff27 	bl	8001f40 <__exponent>
 80020f2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80020f4:	1813      	adds	r3, r2, r0
 80020f6:	2a01      	cmp	r2, #1
 80020f8:	4681      	mov	r9, r0
 80020fa:	6123      	str	r3, [r4, #16]
 80020fc:	dc02      	bgt.n	8002104 <_printf_float+0x150>
 80020fe:	6822      	ldr	r2, [r4, #0]
 8002100:	07d2      	lsls	r2, r2, #31
 8002102:	d501      	bpl.n	8002108 <_printf_float+0x154>
 8002104:	3301      	adds	r3, #1
 8002106:	6123      	str	r3, [r4, #16]
 8002108:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 800210c:	2b00      	cmp	r3, #0
 800210e:	d0a2      	beq.n	8002056 <_printf_float+0xa2>
 8002110:	232d      	movs	r3, #45	@ 0x2d
 8002112:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8002116:	e79e      	b.n	8002056 <_printf_float+0xa2>
 8002118:	9a06      	ldr	r2, [sp, #24]
 800211a:	2a47      	cmp	r2, #71	@ 0x47
 800211c:	d1c2      	bne.n	80020a4 <_printf_float+0xf0>
 800211e:	2b00      	cmp	r3, #0
 8002120:	d1c0      	bne.n	80020a4 <_printf_float+0xf0>
 8002122:	2301      	movs	r3, #1
 8002124:	e7bd      	b.n	80020a2 <_printf_float+0xee>
 8002126:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 800212a:	d9db      	bls.n	80020e4 <_printf_float+0x130>
 800212c:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8002130:	d118      	bne.n	8002164 <_printf_float+0x1b0>
 8002132:	2900      	cmp	r1, #0
 8002134:	6863      	ldr	r3, [r4, #4]
 8002136:	dd0b      	ble.n	8002150 <_printf_float+0x19c>
 8002138:	6121      	str	r1, [r4, #16]
 800213a:	b913      	cbnz	r3, 8002142 <_printf_float+0x18e>
 800213c:	6822      	ldr	r2, [r4, #0]
 800213e:	07d0      	lsls	r0, r2, #31
 8002140:	d502      	bpl.n	8002148 <_printf_float+0x194>
 8002142:	3301      	adds	r3, #1
 8002144:	440b      	add	r3, r1
 8002146:	6123      	str	r3, [r4, #16]
 8002148:	65a1      	str	r1, [r4, #88]	@ 0x58
 800214a:	f04f 0900 	mov.w	r9, #0
 800214e:	e7db      	b.n	8002108 <_printf_float+0x154>
 8002150:	b913      	cbnz	r3, 8002158 <_printf_float+0x1a4>
 8002152:	6822      	ldr	r2, [r4, #0]
 8002154:	07d2      	lsls	r2, r2, #31
 8002156:	d501      	bpl.n	800215c <_printf_float+0x1a8>
 8002158:	3302      	adds	r3, #2
 800215a:	e7f4      	b.n	8002146 <_printf_float+0x192>
 800215c:	2301      	movs	r3, #1
 800215e:	e7f2      	b.n	8002146 <_printf_float+0x192>
 8002160:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 8002164:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002166:	4299      	cmp	r1, r3
 8002168:	db05      	blt.n	8002176 <_printf_float+0x1c2>
 800216a:	6823      	ldr	r3, [r4, #0]
 800216c:	6121      	str	r1, [r4, #16]
 800216e:	07d8      	lsls	r0, r3, #31
 8002170:	d5ea      	bpl.n	8002148 <_printf_float+0x194>
 8002172:	1c4b      	adds	r3, r1, #1
 8002174:	e7e7      	b.n	8002146 <_printf_float+0x192>
 8002176:	2900      	cmp	r1, #0
 8002178:	bfd4      	ite	le
 800217a:	f1c1 0202 	rsble	r2, r1, #2
 800217e:	2201      	movgt	r2, #1
 8002180:	4413      	add	r3, r2
 8002182:	e7e0      	b.n	8002146 <_printf_float+0x192>
 8002184:	6823      	ldr	r3, [r4, #0]
 8002186:	055a      	lsls	r2, r3, #21
 8002188:	d407      	bmi.n	800219a <_printf_float+0x1e6>
 800218a:	6923      	ldr	r3, [r4, #16]
 800218c:	4642      	mov	r2, r8
 800218e:	4631      	mov	r1, r6
 8002190:	4628      	mov	r0, r5
 8002192:	47b8      	blx	r7
 8002194:	3001      	adds	r0, #1
 8002196:	d12b      	bne.n	80021f0 <_printf_float+0x23c>
 8002198:	e767      	b.n	800206a <_printf_float+0xb6>
 800219a:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 800219e:	f240 80dd 	bls.w	800235c <_printf_float+0x3a8>
 80021a2:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 80021a6:	2200      	movs	r2, #0
 80021a8:	2300      	movs	r3, #0
 80021aa:	f7fe fcb5 	bl	8000b18 <__aeabi_dcmpeq>
 80021ae:	2800      	cmp	r0, #0
 80021b0:	d033      	beq.n	800221a <_printf_float+0x266>
 80021b2:	4a37      	ldr	r2, [pc, #220]	@ (8002290 <_printf_float+0x2dc>)
 80021b4:	2301      	movs	r3, #1
 80021b6:	4631      	mov	r1, r6
 80021b8:	4628      	mov	r0, r5
 80021ba:	47b8      	blx	r7
 80021bc:	3001      	adds	r0, #1
 80021be:	f43f af54 	beq.w	800206a <_printf_float+0xb6>
 80021c2:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 80021c6:	4543      	cmp	r3, r8
 80021c8:	db02      	blt.n	80021d0 <_printf_float+0x21c>
 80021ca:	6823      	ldr	r3, [r4, #0]
 80021cc:	07d8      	lsls	r0, r3, #31
 80021ce:	d50f      	bpl.n	80021f0 <_printf_float+0x23c>
 80021d0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80021d4:	4631      	mov	r1, r6
 80021d6:	4628      	mov	r0, r5
 80021d8:	47b8      	blx	r7
 80021da:	3001      	adds	r0, #1
 80021dc:	f43f af45 	beq.w	800206a <_printf_float+0xb6>
 80021e0:	f04f 0900 	mov.w	r9, #0
 80021e4:	f108 38ff 	add.w	r8, r8, #4294967295
 80021e8:	f104 0a1a 	add.w	sl, r4, #26
 80021ec:	45c8      	cmp	r8, r9
 80021ee:	dc09      	bgt.n	8002204 <_printf_float+0x250>
 80021f0:	6823      	ldr	r3, [r4, #0]
 80021f2:	079b      	lsls	r3, r3, #30
 80021f4:	f100 8103 	bmi.w	80023fe <_printf_float+0x44a>
 80021f8:	68e0      	ldr	r0, [r4, #12]
 80021fa:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80021fc:	4298      	cmp	r0, r3
 80021fe:	bfb8      	it	lt
 8002200:	4618      	movlt	r0, r3
 8002202:	e734      	b.n	800206e <_printf_float+0xba>
 8002204:	2301      	movs	r3, #1
 8002206:	4652      	mov	r2, sl
 8002208:	4631      	mov	r1, r6
 800220a:	4628      	mov	r0, r5
 800220c:	47b8      	blx	r7
 800220e:	3001      	adds	r0, #1
 8002210:	f43f af2b 	beq.w	800206a <_printf_float+0xb6>
 8002214:	f109 0901 	add.w	r9, r9, #1
 8002218:	e7e8      	b.n	80021ec <_printf_float+0x238>
 800221a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800221c:	2b00      	cmp	r3, #0
 800221e:	dc39      	bgt.n	8002294 <_printf_float+0x2e0>
 8002220:	4a1b      	ldr	r2, [pc, #108]	@ (8002290 <_printf_float+0x2dc>)
 8002222:	2301      	movs	r3, #1
 8002224:	4631      	mov	r1, r6
 8002226:	4628      	mov	r0, r5
 8002228:	47b8      	blx	r7
 800222a:	3001      	adds	r0, #1
 800222c:	f43f af1d 	beq.w	800206a <_printf_float+0xb6>
 8002230:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 8002234:	ea59 0303 	orrs.w	r3, r9, r3
 8002238:	d102      	bne.n	8002240 <_printf_float+0x28c>
 800223a:	6823      	ldr	r3, [r4, #0]
 800223c:	07d9      	lsls	r1, r3, #31
 800223e:	d5d7      	bpl.n	80021f0 <_printf_float+0x23c>
 8002240:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002244:	4631      	mov	r1, r6
 8002246:	4628      	mov	r0, r5
 8002248:	47b8      	blx	r7
 800224a:	3001      	adds	r0, #1
 800224c:	f43f af0d 	beq.w	800206a <_printf_float+0xb6>
 8002250:	f04f 0a00 	mov.w	sl, #0
 8002254:	f104 0b1a 	add.w	fp, r4, #26
 8002258:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800225a:	425b      	negs	r3, r3
 800225c:	4553      	cmp	r3, sl
 800225e:	dc01      	bgt.n	8002264 <_printf_float+0x2b0>
 8002260:	464b      	mov	r3, r9
 8002262:	e793      	b.n	800218c <_printf_float+0x1d8>
 8002264:	2301      	movs	r3, #1
 8002266:	465a      	mov	r2, fp
 8002268:	4631      	mov	r1, r6
 800226a:	4628      	mov	r0, r5
 800226c:	47b8      	blx	r7
 800226e:	3001      	adds	r0, #1
 8002270:	f43f aefb 	beq.w	800206a <_printf_float+0xb6>
 8002274:	f10a 0a01 	add.w	sl, sl, #1
 8002278:	e7ee      	b.n	8002258 <_printf_float+0x2a4>
 800227a:	bf00      	nop
 800227c:	7fefffff 	.word	0x7fefffff
 8002280:	08004798 	.word	0x08004798
 8002284:	0800479c 	.word	0x0800479c
 8002288:	080047a0 	.word	0x080047a0
 800228c:	080047a4 	.word	0x080047a4
 8002290:	080047a8 	.word	0x080047a8
 8002294:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8002296:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 800229a:	4553      	cmp	r3, sl
 800229c:	bfa8      	it	ge
 800229e:	4653      	movge	r3, sl
 80022a0:	2b00      	cmp	r3, #0
 80022a2:	4699      	mov	r9, r3
 80022a4:	dc36      	bgt.n	8002314 <_printf_float+0x360>
 80022a6:	f04f 0b00 	mov.w	fp, #0
 80022aa:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80022ae:	f104 021a 	add.w	r2, r4, #26
 80022b2:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80022b4:	9306      	str	r3, [sp, #24]
 80022b6:	eba3 0309 	sub.w	r3, r3, r9
 80022ba:	455b      	cmp	r3, fp
 80022bc:	dc31      	bgt.n	8002322 <_printf_float+0x36e>
 80022be:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80022c0:	459a      	cmp	sl, r3
 80022c2:	dc3a      	bgt.n	800233a <_printf_float+0x386>
 80022c4:	6823      	ldr	r3, [r4, #0]
 80022c6:	07da      	lsls	r2, r3, #31
 80022c8:	d437      	bmi.n	800233a <_printf_float+0x386>
 80022ca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80022cc:	ebaa 0903 	sub.w	r9, sl, r3
 80022d0:	9b06      	ldr	r3, [sp, #24]
 80022d2:	ebaa 0303 	sub.w	r3, sl, r3
 80022d6:	4599      	cmp	r9, r3
 80022d8:	bfa8      	it	ge
 80022da:	4699      	movge	r9, r3
 80022dc:	f1b9 0f00 	cmp.w	r9, #0
 80022e0:	dc33      	bgt.n	800234a <_printf_float+0x396>
 80022e2:	f04f 0800 	mov.w	r8, #0
 80022e6:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80022ea:	f104 0b1a 	add.w	fp, r4, #26
 80022ee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80022f0:	ebaa 0303 	sub.w	r3, sl, r3
 80022f4:	eba3 0309 	sub.w	r3, r3, r9
 80022f8:	4543      	cmp	r3, r8
 80022fa:	f77f af79 	ble.w	80021f0 <_printf_float+0x23c>
 80022fe:	2301      	movs	r3, #1
 8002300:	465a      	mov	r2, fp
 8002302:	4631      	mov	r1, r6
 8002304:	4628      	mov	r0, r5
 8002306:	47b8      	blx	r7
 8002308:	3001      	adds	r0, #1
 800230a:	f43f aeae 	beq.w	800206a <_printf_float+0xb6>
 800230e:	f108 0801 	add.w	r8, r8, #1
 8002312:	e7ec      	b.n	80022ee <_printf_float+0x33a>
 8002314:	4642      	mov	r2, r8
 8002316:	4631      	mov	r1, r6
 8002318:	4628      	mov	r0, r5
 800231a:	47b8      	blx	r7
 800231c:	3001      	adds	r0, #1
 800231e:	d1c2      	bne.n	80022a6 <_printf_float+0x2f2>
 8002320:	e6a3      	b.n	800206a <_printf_float+0xb6>
 8002322:	2301      	movs	r3, #1
 8002324:	4631      	mov	r1, r6
 8002326:	4628      	mov	r0, r5
 8002328:	9206      	str	r2, [sp, #24]
 800232a:	47b8      	blx	r7
 800232c:	3001      	adds	r0, #1
 800232e:	f43f ae9c 	beq.w	800206a <_printf_float+0xb6>
 8002332:	9a06      	ldr	r2, [sp, #24]
 8002334:	f10b 0b01 	add.w	fp, fp, #1
 8002338:	e7bb      	b.n	80022b2 <_printf_float+0x2fe>
 800233a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800233e:	4631      	mov	r1, r6
 8002340:	4628      	mov	r0, r5
 8002342:	47b8      	blx	r7
 8002344:	3001      	adds	r0, #1
 8002346:	d1c0      	bne.n	80022ca <_printf_float+0x316>
 8002348:	e68f      	b.n	800206a <_printf_float+0xb6>
 800234a:	9a06      	ldr	r2, [sp, #24]
 800234c:	464b      	mov	r3, r9
 800234e:	4442      	add	r2, r8
 8002350:	4631      	mov	r1, r6
 8002352:	4628      	mov	r0, r5
 8002354:	47b8      	blx	r7
 8002356:	3001      	adds	r0, #1
 8002358:	d1c3      	bne.n	80022e2 <_printf_float+0x32e>
 800235a:	e686      	b.n	800206a <_printf_float+0xb6>
 800235c:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8002360:	f1ba 0f01 	cmp.w	sl, #1
 8002364:	dc01      	bgt.n	800236a <_printf_float+0x3b6>
 8002366:	07db      	lsls	r3, r3, #31
 8002368:	d536      	bpl.n	80023d8 <_printf_float+0x424>
 800236a:	2301      	movs	r3, #1
 800236c:	4642      	mov	r2, r8
 800236e:	4631      	mov	r1, r6
 8002370:	4628      	mov	r0, r5
 8002372:	47b8      	blx	r7
 8002374:	3001      	adds	r0, #1
 8002376:	f43f ae78 	beq.w	800206a <_printf_float+0xb6>
 800237a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800237e:	4631      	mov	r1, r6
 8002380:	4628      	mov	r0, r5
 8002382:	47b8      	blx	r7
 8002384:	3001      	adds	r0, #1
 8002386:	f43f ae70 	beq.w	800206a <_printf_float+0xb6>
 800238a:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 800238e:	2200      	movs	r2, #0
 8002390:	2300      	movs	r3, #0
 8002392:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002396:	f7fe fbbf 	bl	8000b18 <__aeabi_dcmpeq>
 800239a:	b9c0      	cbnz	r0, 80023ce <_printf_float+0x41a>
 800239c:	4653      	mov	r3, sl
 800239e:	f108 0201 	add.w	r2, r8, #1
 80023a2:	4631      	mov	r1, r6
 80023a4:	4628      	mov	r0, r5
 80023a6:	47b8      	blx	r7
 80023a8:	3001      	adds	r0, #1
 80023aa:	d10c      	bne.n	80023c6 <_printf_float+0x412>
 80023ac:	e65d      	b.n	800206a <_printf_float+0xb6>
 80023ae:	2301      	movs	r3, #1
 80023b0:	465a      	mov	r2, fp
 80023b2:	4631      	mov	r1, r6
 80023b4:	4628      	mov	r0, r5
 80023b6:	47b8      	blx	r7
 80023b8:	3001      	adds	r0, #1
 80023ba:	f43f ae56 	beq.w	800206a <_printf_float+0xb6>
 80023be:	f108 0801 	add.w	r8, r8, #1
 80023c2:	45d0      	cmp	r8, sl
 80023c4:	dbf3      	blt.n	80023ae <_printf_float+0x3fa>
 80023c6:	464b      	mov	r3, r9
 80023c8:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 80023cc:	e6df      	b.n	800218e <_printf_float+0x1da>
 80023ce:	f04f 0800 	mov.w	r8, #0
 80023d2:	f104 0b1a 	add.w	fp, r4, #26
 80023d6:	e7f4      	b.n	80023c2 <_printf_float+0x40e>
 80023d8:	2301      	movs	r3, #1
 80023da:	4642      	mov	r2, r8
 80023dc:	e7e1      	b.n	80023a2 <_printf_float+0x3ee>
 80023de:	2301      	movs	r3, #1
 80023e0:	464a      	mov	r2, r9
 80023e2:	4631      	mov	r1, r6
 80023e4:	4628      	mov	r0, r5
 80023e6:	47b8      	blx	r7
 80023e8:	3001      	adds	r0, #1
 80023ea:	f43f ae3e 	beq.w	800206a <_printf_float+0xb6>
 80023ee:	f108 0801 	add.w	r8, r8, #1
 80023f2:	68e3      	ldr	r3, [r4, #12]
 80023f4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80023f6:	1a5b      	subs	r3, r3, r1
 80023f8:	4543      	cmp	r3, r8
 80023fa:	dcf0      	bgt.n	80023de <_printf_float+0x42a>
 80023fc:	e6fc      	b.n	80021f8 <_printf_float+0x244>
 80023fe:	f04f 0800 	mov.w	r8, #0
 8002402:	f104 0919 	add.w	r9, r4, #25
 8002406:	e7f4      	b.n	80023f2 <_printf_float+0x43e>

08002408 <_printf_common>:
 8002408:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800240c:	4616      	mov	r6, r2
 800240e:	4698      	mov	r8, r3
 8002410:	688a      	ldr	r2, [r1, #8]
 8002412:	690b      	ldr	r3, [r1, #16]
 8002414:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8002418:	4293      	cmp	r3, r2
 800241a:	bfb8      	it	lt
 800241c:	4613      	movlt	r3, r2
 800241e:	6033      	str	r3, [r6, #0]
 8002420:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8002424:	4607      	mov	r7, r0
 8002426:	460c      	mov	r4, r1
 8002428:	b10a      	cbz	r2, 800242e <_printf_common+0x26>
 800242a:	3301      	adds	r3, #1
 800242c:	6033      	str	r3, [r6, #0]
 800242e:	6823      	ldr	r3, [r4, #0]
 8002430:	0699      	lsls	r1, r3, #26
 8002432:	bf42      	ittt	mi
 8002434:	6833      	ldrmi	r3, [r6, #0]
 8002436:	3302      	addmi	r3, #2
 8002438:	6033      	strmi	r3, [r6, #0]
 800243a:	6825      	ldr	r5, [r4, #0]
 800243c:	f015 0506 	ands.w	r5, r5, #6
 8002440:	d106      	bne.n	8002450 <_printf_common+0x48>
 8002442:	f104 0a19 	add.w	sl, r4, #25
 8002446:	68e3      	ldr	r3, [r4, #12]
 8002448:	6832      	ldr	r2, [r6, #0]
 800244a:	1a9b      	subs	r3, r3, r2
 800244c:	42ab      	cmp	r3, r5
 800244e:	dc26      	bgt.n	800249e <_printf_common+0x96>
 8002450:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8002454:	6822      	ldr	r2, [r4, #0]
 8002456:	3b00      	subs	r3, #0
 8002458:	bf18      	it	ne
 800245a:	2301      	movne	r3, #1
 800245c:	0692      	lsls	r2, r2, #26
 800245e:	d42b      	bmi.n	80024b8 <_printf_common+0xb0>
 8002460:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8002464:	4641      	mov	r1, r8
 8002466:	4638      	mov	r0, r7
 8002468:	47c8      	blx	r9
 800246a:	3001      	adds	r0, #1
 800246c:	d01e      	beq.n	80024ac <_printf_common+0xa4>
 800246e:	6823      	ldr	r3, [r4, #0]
 8002470:	6922      	ldr	r2, [r4, #16]
 8002472:	f003 0306 	and.w	r3, r3, #6
 8002476:	2b04      	cmp	r3, #4
 8002478:	bf02      	ittt	eq
 800247a:	68e5      	ldreq	r5, [r4, #12]
 800247c:	6833      	ldreq	r3, [r6, #0]
 800247e:	1aed      	subeq	r5, r5, r3
 8002480:	68a3      	ldr	r3, [r4, #8]
 8002482:	bf0c      	ite	eq
 8002484:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8002488:	2500      	movne	r5, #0
 800248a:	4293      	cmp	r3, r2
 800248c:	bfc4      	itt	gt
 800248e:	1a9b      	subgt	r3, r3, r2
 8002490:	18ed      	addgt	r5, r5, r3
 8002492:	2600      	movs	r6, #0
 8002494:	341a      	adds	r4, #26
 8002496:	42b5      	cmp	r5, r6
 8002498:	d11a      	bne.n	80024d0 <_printf_common+0xc8>
 800249a:	2000      	movs	r0, #0
 800249c:	e008      	b.n	80024b0 <_printf_common+0xa8>
 800249e:	2301      	movs	r3, #1
 80024a0:	4652      	mov	r2, sl
 80024a2:	4641      	mov	r1, r8
 80024a4:	4638      	mov	r0, r7
 80024a6:	47c8      	blx	r9
 80024a8:	3001      	adds	r0, #1
 80024aa:	d103      	bne.n	80024b4 <_printf_common+0xac>
 80024ac:	f04f 30ff 	mov.w	r0, #4294967295
 80024b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80024b4:	3501      	adds	r5, #1
 80024b6:	e7c6      	b.n	8002446 <_printf_common+0x3e>
 80024b8:	18e1      	adds	r1, r4, r3
 80024ba:	1c5a      	adds	r2, r3, #1
 80024bc:	2030      	movs	r0, #48	@ 0x30
 80024be:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80024c2:	4422      	add	r2, r4
 80024c4:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80024c8:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80024cc:	3302      	adds	r3, #2
 80024ce:	e7c7      	b.n	8002460 <_printf_common+0x58>
 80024d0:	2301      	movs	r3, #1
 80024d2:	4622      	mov	r2, r4
 80024d4:	4641      	mov	r1, r8
 80024d6:	4638      	mov	r0, r7
 80024d8:	47c8      	blx	r9
 80024da:	3001      	adds	r0, #1
 80024dc:	d0e6      	beq.n	80024ac <_printf_common+0xa4>
 80024de:	3601      	adds	r6, #1
 80024e0:	e7d9      	b.n	8002496 <_printf_common+0x8e>
	...

080024e4 <_printf_i>:
 80024e4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80024e8:	7e0f      	ldrb	r7, [r1, #24]
 80024ea:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80024ec:	2f78      	cmp	r7, #120	@ 0x78
 80024ee:	4691      	mov	r9, r2
 80024f0:	4680      	mov	r8, r0
 80024f2:	460c      	mov	r4, r1
 80024f4:	469a      	mov	sl, r3
 80024f6:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80024fa:	d807      	bhi.n	800250c <_printf_i+0x28>
 80024fc:	2f62      	cmp	r7, #98	@ 0x62
 80024fe:	d80a      	bhi.n	8002516 <_printf_i+0x32>
 8002500:	2f00      	cmp	r7, #0
 8002502:	f000 80d2 	beq.w	80026aa <_printf_i+0x1c6>
 8002506:	2f58      	cmp	r7, #88	@ 0x58
 8002508:	f000 80b9 	beq.w	800267e <_printf_i+0x19a>
 800250c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8002510:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8002514:	e03a      	b.n	800258c <_printf_i+0xa8>
 8002516:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 800251a:	2b15      	cmp	r3, #21
 800251c:	d8f6      	bhi.n	800250c <_printf_i+0x28>
 800251e:	a101      	add	r1, pc, #4	@ (adr r1, 8002524 <_printf_i+0x40>)
 8002520:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8002524:	0800257d 	.word	0x0800257d
 8002528:	08002591 	.word	0x08002591
 800252c:	0800250d 	.word	0x0800250d
 8002530:	0800250d 	.word	0x0800250d
 8002534:	0800250d 	.word	0x0800250d
 8002538:	0800250d 	.word	0x0800250d
 800253c:	08002591 	.word	0x08002591
 8002540:	0800250d 	.word	0x0800250d
 8002544:	0800250d 	.word	0x0800250d
 8002548:	0800250d 	.word	0x0800250d
 800254c:	0800250d 	.word	0x0800250d
 8002550:	08002691 	.word	0x08002691
 8002554:	080025bb 	.word	0x080025bb
 8002558:	0800264b 	.word	0x0800264b
 800255c:	0800250d 	.word	0x0800250d
 8002560:	0800250d 	.word	0x0800250d
 8002564:	080026b3 	.word	0x080026b3
 8002568:	0800250d 	.word	0x0800250d
 800256c:	080025bb 	.word	0x080025bb
 8002570:	0800250d 	.word	0x0800250d
 8002574:	0800250d 	.word	0x0800250d
 8002578:	08002653 	.word	0x08002653
 800257c:	6833      	ldr	r3, [r6, #0]
 800257e:	1d1a      	adds	r2, r3, #4
 8002580:	681b      	ldr	r3, [r3, #0]
 8002582:	6032      	str	r2, [r6, #0]
 8002584:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8002588:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800258c:	2301      	movs	r3, #1
 800258e:	e09d      	b.n	80026cc <_printf_i+0x1e8>
 8002590:	6833      	ldr	r3, [r6, #0]
 8002592:	6820      	ldr	r0, [r4, #0]
 8002594:	1d19      	adds	r1, r3, #4
 8002596:	6031      	str	r1, [r6, #0]
 8002598:	0606      	lsls	r6, r0, #24
 800259a:	d501      	bpl.n	80025a0 <_printf_i+0xbc>
 800259c:	681d      	ldr	r5, [r3, #0]
 800259e:	e003      	b.n	80025a8 <_printf_i+0xc4>
 80025a0:	0645      	lsls	r5, r0, #25
 80025a2:	d5fb      	bpl.n	800259c <_printf_i+0xb8>
 80025a4:	f9b3 5000 	ldrsh.w	r5, [r3]
 80025a8:	2d00      	cmp	r5, #0
 80025aa:	da03      	bge.n	80025b4 <_printf_i+0xd0>
 80025ac:	232d      	movs	r3, #45	@ 0x2d
 80025ae:	426d      	negs	r5, r5
 80025b0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80025b4:	4859      	ldr	r0, [pc, #356]	@ (800271c <_printf_i+0x238>)
 80025b6:	230a      	movs	r3, #10
 80025b8:	e011      	b.n	80025de <_printf_i+0xfa>
 80025ba:	6821      	ldr	r1, [r4, #0]
 80025bc:	6833      	ldr	r3, [r6, #0]
 80025be:	0608      	lsls	r0, r1, #24
 80025c0:	f853 5b04 	ldr.w	r5, [r3], #4
 80025c4:	d402      	bmi.n	80025cc <_printf_i+0xe8>
 80025c6:	0649      	lsls	r1, r1, #25
 80025c8:	bf48      	it	mi
 80025ca:	b2ad      	uxthmi	r5, r5
 80025cc:	2f6f      	cmp	r7, #111	@ 0x6f
 80025ce:	4853      	ldr	r0, [pc, #332]	@ (800271c <_printf_i+0x238>)
 80025d0:	6033      	str	r3, [r6, #0]
 80025d2:	bf14      	ite	ne
 80025d4:	230a      	movne	r3, #10
 80025d6:	2308      	moveq	r3, #8
 80025d8:	2100      	movs	r1, #0
 80025da:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80025de:	6866      	ldr	r6, [r4, #4]
 80025e0:	60a6      	str	r6, [r4, #8]
 80025e2:	2e00      	cmp	r6, #0
 80025e4:	bfa2      	ittt	ge
 80025e6:	6821      	ldrge	r1, [r4, #0]
 80025e8:	f021 0104 	bicge.w	r1, r1, #4
 80025ec:	6021      	strge	r1, [r4, #0]
 80025ee:	b90d      	cbnz	r5, 80025f4 <_printf_i+0x110>
 80025f0:	2e00      	cmp	r6, #0
 80025f2:	d04b      	beq.n	800268c <_printf_i+0x1a8>
 80025f4:	4616      	mov	r6, r2
 80025f6:	fbb5 f1f3 	udiv	r1, r5, r3
 80025fa:	fb03 5711 	mls	r7, r3, r1, r5
 80025fe:	5dc7      	ldrb	r7, [r0, r7]
 8002600:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8002604:	462f      	mov	r7, r5
 8002606:	42bb      	cmp	r3, r7
 8002608:	460d      	mov	r5, r1
 800260a:	d9f4      	bls.n	80025f6 <_printf_i+0x112>
 800260c:	2b08      	cmp	r3, #8
 800260e:	d10b      	bne.n	8002628 <_printf_i+0x144>
 8002610:	6823      	ldr	r3, [r4, #0]
 8002612:	07df      	lsls	r7, r3, #31
 8002614:	d508      	bpl.n	8002628 <_printf_i+0x144>
 8002616:	6923      	ldr	r3, [r4, #16]
 8002618:	6861      	ldr	r1, [r4, #4]
 800261a:	4299      	cmp	r1, r3
 800261c:	bfde      	ittt	le
 800261e:	2330      	movle	r3, #48	@ 0x30
 8002620:	f806 3c01 	strble.w	r3, [r6, #-1]
 8002624:	f106 36ff 	addle.w	r6, r6, #4294967295
 8002628:	1b92      	subs	r2, r2, r6
 800262a:	6122      	str	r2, [r4, #16]
 800262c:	f8cd a000 	str.w	sl, [sp]
 8002630:	464b      	mov	r3, r9
 8002632:	aa03      	add	r2, sp, #12
 8002634:	4621      	mov	r1, r4
 8002636:	4640      	mov	r0, r8
 8002638:	f7ff fee6 	bl	8002408 <_printf_common>
 800263c:	3001      	adds	r0, #1
 800263e:	d14a      	bne.n	80026d6 <_printf_i+0x1f2>
 8002640:	f04f 30ff 	mov.w	r0, #4294967295
 8002644:	b004      	add	sp, #16
 8002646:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800264a:	6823      	ldr	r3, [r4, #0]
 800264c:	f043 0320 	orr.w	r3, r3, #32
 8002650:	6023      	str	r3, [r4, #0]
 8002652:	4833      	ldr	r0, [pc, #204]	@ (8002720 <_printf_i+0x23c>)
 8002654:	2778      	movs	r7, #120	@ 0x78
 8002656:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800265a:	6823      	ldr	r3, [r4, #0]
 800265c:	6831      	ldr	r1, [r6, #0]
 800265e:	061f      	lsls	r7, r3, #24
 8002660:	f851 5b04 	ldr.w	r5, [r1], #4
 8002664:	d402      	bmi.n	800266c <_printf_i+0x188>
 8002666:	065f      	lsls	r7, r3, #25
 8002668:	bf48      	it	mi
 800266a:	b2ad      	uxthmi	r5, r5
 800266c:	6031      	str	r1, [r6, #0]
 800266e:	07d9      	lsls	r1, r3, #31
 8002670:	bf44      	itt	mi
 8002672:	f043 0320 	orrmi.w	r3, r3, #32
 8002676:	6023      	strmi	r3, [r4, #0]
 8002678:	b11d      	cbz	r5, 8002682 <_printf_i+0x19e>
 800267a:	2310      	movs	r3, #16
 800267c:	e7ac      	b.n	80025d8 <_printf_i+0xf4>
 800267e:	4827      	ldr	r0, [pc, #156]	@ (800271c <_printf_i+0x238>)
 8002680:	e7e9      	b.n	8002656 <_printf_i+0x172>
 8002682:	6823      	ldr	r3, [r4, #0]
 8002684:	f023 0320 	bic.w	r3, r3, #32
 8002688:	6023      	str	r3, [r4, #0]
 800268a:	e7f6      	b.n	800267a <_printf_i+0x196>
 800268c:	4616      	mov	r6, r2
 800268e:	e7bd      	b.n	800260c <_printf_i+0x128>
 8002690:	6833      	ldr	r3, [r6, #0]
 8002692:	6825      	ldr	r5, [r4, #0]
 8002694:	6961      	ldr	r1, [r4, #20]
 8002696:	1d18      	adds	r0, r3, #4
 8002698:	6030      	str	r0, [r6, #0]
 800269a:	062e      	lsls	r6, r5, #24
 800269c:	681b      	ldr	r3, [r3, #0]
 800269e:	d501      	bpl.n	80026a4 <_printf_i+0x1c0>
 80026a0:	6019      	str	r1, [r3, #0]
 80026a2:	e002      	b.n	80026aa <_printf_i+0x1c6>
 80026a4:	0668      	lsls	r0, r5, #25
 80026a6:	d5fb      	bpl.n	80026a0 <_printf_i+0x1bc>
 80026a8:	8019      	strh	r1, [r3, #0]
 80026aa:	2300      	movs	r3, #0
 80026ac:	6123      	str	r3, [r4, #16]
 80026ae:	4616      	mov	r6, r2
 80026b0:	e7bc      	b.n	800262c <_printf_i+0x148>
 80026b2:	6833      	ldr	r3, [r6, #0]
 80026b4:	1d1a      	adds	r2, r3, #4
 80026b6:	6032      	str	r2, [r6, #0]
 80026b8:	681e      	ldr	r6, [r3, #0]
 80026ba:	6862      	ldr	r2, [r4, #4]
 80026bc:	2100      	movs	r1, #0
 80026be:	4630      	mov	r0, r6
 80026c0:	f7fd fdae 	bl	8000220 <memchr>
 80026c4:	b108      	cbz	r0, 80026ca <_printf_i+0x1e6>
 80026c6:	1b80      	subs	r0, r0, r6
 80026c8:	6060      	str	r0, [r4, #4]
 80026ca:	6863      	ldr	r3, [r4, #4]
 80026cc:	6123      	str	r3, [r4, #16]
 80026ce:	2300      	movs	r3, #0
 80026d0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80026d4:	e7aa      	b.n	800262c <_printf_i+0x148>
 80026d6:	6923      	ldr	r3, [r4, #16]
 80026d8:	4632      	mov	r2, r6
 80026da:	4649      	mov	r1, r9
 80026dc:	4640      	mov	r0, r8
 80026de:	47d0      	blx	sl
 80026e0:	3001      	adds	r0, #1
 80026e2:	d0ad      	beq.n	8002640 <_printf_i+0x15c>
 80026e4:	6823      	ldr	r3, [r4, #0]
 80026e6:	079b      	lsls	r3, r3, #30
 80026e8:	d413      	bmi.n	8002712 <_printf_i+0x22e>
 80026ea:	68e0      	ldr	r0, [r4, #12]
 80026ec:	9b03      	ldr	r3, [sp, #12]
 80026ee:	4298      	cmp	r0, r3
 80026f0:	bfb8      	it	lt
 80026f2:	4618      	movlt	r0, r3
 80026f4:	e7a6      	b.n	8002644 <_printf_i+0x160>
 80026f6:	2301      	movs	r3, #1
 80026f8:	4632      	mov	r2, r6
 80026fa:	4649      	mov	r1, r9
 80026fc:	4640      	mov	r0, r8
 80026fe:	47d0      	blx	sl
 8002700:	3001      	adds	r0, #1
 8002702:	d09d      	beq.n	8002640 <_printf_i+0x15c>
 8002704:	3501      	adds	r5, #1
 8002706:	68e3      	ldr	r3, [r4, #12]
 8002708:	9903      	ldr	r1, [sp, #12]
 800270a:	1a5b      	subs	r3, r3, r1
 800270c:	42ab      	cmp	r3, r5
 800270e:	dcf2      	bgt.n	80026f6 <_printf_i+0x212>
 8002710:	e7eb      	b.n	80026ea <_printf_i+0x206>
 8002712:	2500      	movs	r5, #0
 8002714:	f104 0619 	add.w	r6, r4, #25
 8002718:	e7f5      	b.n	8002706 <_printf_i+0x222>
 800271a:	bf00      	nop
 800271c:	080047aa 	.word	0x080047aa
 8002720:	080047bb 	.word	0x080047bb

08002724 <std>:
 8002724:	2300      	movs	r3, #0
 8002726:	b510      	push	{r4, lr}
 8002728:	4604      	mov	r4, r0
 800272a:	e9c0 3300 	strd	r3, r3, [r0]
 800272e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8002732:	6083      	str	r3, [r0, #8]
 8002734:	8181      	strh	r1, [r0, #12]
 8002736:	6643      	str	r3, [r0, #100]	@ 0x64
 8002738:	81c2      	strh	r2, [r0, #14]
 800273a:	6183      	str	r3, [r0, #24]
 800273c:	4619      	mov	r1, r3
 800273e:	2208      	movs	r2, #8
 8002740:	305c      	adds	r0, #92	@ 0x5c
 8002742:	f000 f8f4 	bl	800292e <memset>
 8002746:	4b0d      	ldr	r3, [pc, #52]	@ (800277c <std+0x58>)
 8002748:	6263      	str	r3, [r4, #36]	@ 0x24
 800274a:	4b0d      	ldr	r3, [pc, #52]	@ (8002780 <std+0x5c>)
 800274c:	62a3      	str	r3, [r4, #40]	@ 0x28
 800274e:	4b0d      	ldr	r3, [pc, #52]	@ (8002784 <std+0x60>)
 8002750:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8002752:	4b0d      	ldr	r3, [pc, #52]	@ (8002788 <std+0x64>)
 8002754:	6323      	str	r3, [r4, #48]	@ 0x30
 8002756:	4b0d      	ldr	r3, [pc, #52]	@ (800278c <std+0x68>)
 8002758:	6224      	str	r4, [r4, #32]
 800275a:	429c      	cmp	r4, r3
 800275c:	d006      	beq.n	800276c <std+0x48>
 800275e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8002762:	4294      	cmp	r4, r2
 8002764:	d002      	beq.n	800276c <std+0x48>
 8002766:	33d0      	adds	r3, #208	@ 0xd0
 8002768:	429c      	cmp	r4, r3
 800276a:	d105      	bne.n	8002778 <std+0x54>
 800276c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8002770:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002774:	f000 b958 	b.w	8002a28 <__retarget_lock_init_recursive>
 8002778:	bd10      	pop	{r4, pc}
 800277a:	bf00      	nop
 800277c:	080028a9 	.word	0x080028a9
 8002780:	080028cb 	.word	0x080028cb
 8002784:	08002903 	.word	0x08002903
 8002788:	08002927 	.word	0x08002927
 800278c:	200001f4 	.word	0x200001f4

08002790 <stdio_exit_handler>:
 8002790:	4a02      	ldr	r2, [pc, #8]	@ (800279c <stdio_exit_handler+0xc>)
 8002792:	4903      	ldr	r1, [pc, #12]	@ (80027a0 <stdio_exit_handler+0x10>)
 8002794:	4803      	ldr	r0, [pc, #12]	@ (80027a4 <stdio_exit_handler+0x14>)
 8002796:	f000 b869 	b.w	800286c <_fwalk_sglue>
 800279a:	bf00      	nop
 800279c:	20000008 	.word	0x20000008
 80027a0:	080040d5 	.word	0x080040d5
 80027a4:	20000018 	.word	0x20000018

080027a8 <cleanup_stdio>:
 80027a8:	6841      	ldr	r1, [r0, #4]
 80027aa:	4b0c      	ldr	r3, [pc, #48]	@ (80027dc <cleanup_stdio+0x34>)
 80027ac:	4299      	cmp	r1, r3
 80027ae:	b510      	push	{r4, lr}
 80027b0:	4604      	mov	r4, r0
 80027b2:	d001      	beq.n	80027b8 <cleanup_stdio+0x10>
 80027b4:	f001 fc8e 	bl	80040d4 <_fflush_r>
 80027b8:	68a1      	ldr	r1, [r4, #8]
 80027ba:	4b09      	ldr	r3, [pc, #36]	@ (80027e0 <cleanup_stdio+0x38>)
 80027bc:	4299      	cmp	r1, r3
 80027be:	d002      	beq.n	80027c6 <cleanup_stdio+0x1e>
 80027c0:	4620      	mov	r0, r4
 80027c2:	f001 fc87 	bl	80040d4 <_fflush_r>
 80027c6:	68e1      	ldr	r1, [r4, #12]
 80027c8:	4b06      	ldr	r3, [pc, #24]	@ (80027e4 <cleanup_stdio+0x3c>)
 80027ca:	4299      	cmp	r1, r3
 80027cc:	d004      	beq.n	80027d8 <cleanup_stdio+0x30>
 80027ce:	4620      	mov	r0, r4
 80027d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80027d4:	f001 bc7e 	b.w	80040d4 <_fflush_r>
 80027d8:	bd10      	pop	{r4, pc}
 80027da:	bf00      	nop
 80027dc:	200001f4 	.word	0x200001f4
 80027e0:	2000025c 	.word	0x2000025c
 80027e4:	200002c4 	.word	0x200002c4

080027e8 <global_stdio_init.part.0>:
 80027e8:	b510      	push	{r4, lr}
 80027ea:	4b0b      	ldr	r3, [pc, #44]	@ (8002818 <global_stdio_init.part.0+0x30>)
 80027ec:	4c0b      	ldr	r4, [pc, #44]	@ (800281c <global_stdio_init.part.0+0x34>)
 80027ee:	4a0c      	ldr	r2, [pc, #48]	@ (8002820 <global_stdio_init.part.0+0x38>)
 80027f0:	601a      	str	r2, [r3, #0]
 80027f2:	4620      	mov	r0, r4
 80027f4:	2200      	movs	r2, #0
 80027f6:	2104      	movs	r1, #4
 80027f8:	f7ff ff94 	bl	8002724 <std>
 80027fc:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8002800:	2201      	movs	r2, #1
 8002802:	2109      	movs	r1, #9
 8002804:	f7ff ff8e 	bl	8002724 <std>
 8002808:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 800280c:	2202      	movs	r2, #2
 800280e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002812:	2112      	movs	r1, #18
 8002814:	f7ff bf86 	b.w	8002724 <std>
 8002818:	2000032c 	.word	0x2000032c
 800281c:	200001f4 	.word	0x200001f4
 8002820:	08002791 	.word	0x08002791

08002824 <__sfp_lock_acquire>:
 8002824:	4801      	ldr	r0, [pc, #4]	@ (800282c <__sfp_lock_acquire+0x8>)
 8002826:	f000 b900 	b.w	8002a2a <__retarget_lock_acquire_recursive>
 800282a:	bf00      	nop
 800282c:	20000335 	.word	0x20000335

08002830 <__sfp_lock_release>:
 8002830:	4801      	ldr	r0, [pc, #4]	@ (8002838 <__sfp_lock_release+0x8>)
 8002832:	f000 b8fb 	b.w	8002a2c <__retarget_lock_release_recursive>
 8002836:	bf00      	nop
 8002838:	20000335 	.word	0x20000335

0800283c <__sinit>:
 800283c:	b510      	push	{r4, lr}
 800283e:	4604      	mov	r4, r0
 8002840:	f7ff fff0 	bl	8002824 <__sfp_lock_acquire>
 8002844:	6a23      	ldr	r3, [r4, #32]
 8002846:	b11b      	cbz	r3, 8002850 <__sinit+0x14>
 8002848:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800284c:	f7ff bff0 	b.w	8002830 <__sfp_lock_release>
 8002850:	4b04      	ldr	r3, [pc, #16]	@ (8002864 <__sinit+0x28>)
 8002852:	6223      	str	r3, [r4, #32]
 8002854:	4b04      	ldr	r3, [pc, #16]	@ (8002868 <__sinit+0x2c>)
 8002856:	681b      	ldr	r3, [r3, #0]
 8002858:	2b00      	cmp	r3, #0
 800285a:	d1f5      	bne.n	8002848 <__sinit+0xc>
 800285c:	f7ff ffc4 	bl	80027e8 <global_stdio_init.part.0>
 8002860:	e7f2      	b.n	8002848 <__sinit+0xc>
 8002862:	bf00      	nop
 8002864:	080027a9 	.word	0x080027a9
 8002868:	2000032c 	.word	0x2000032c

0800286c <_fwalk_sglue>:
 800286c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002870:	4607      	mov	r7, r0
 8002872:	4688      	mov	r8, r1
 8002874:	4614      	mov	r4, r2
 8002876:	2600      	movs	r6, #0
 8002878:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800287c:	f1b9 0901 	subs.w	r9, r9, #1
 8002880:	d505      	bpl.n	800288e <_fwalk_sglue+0x22>
 8002882:	6824      	ldr	r4, [r4, #0]
 8002884:	2c00      	cmp	r4, #0
 8002886:	d1f7      	bne.n	8002878 <_fwalk_sglue+0xc>
 8002888:	4630      	mov	r0, r6
 800288a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800288e:	89ab      	ldrh	r3, [r5, #12]
 8002890:	2b01      	cmp	r3, #1
 8002892:	d907      	bls.n	80028a4 <_fwalk_sglue+0x38>
 8002894:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8002898:	3301      	adds	r3, #1
 800289a:	d003      	beq.n	80028a4 <_fwalk_sglue+0x38>
 800289c:	4629      	mov	r1, r5
 800289e:	4638      	mov	r0, r7
 80028a0:	47c0      	blx	r8
 80028a2:	4306      	orrs	r6, r0
 80028a4:	3568      	adds	r5, #104	@ 0x68
 80028a6:	e7e9      	b.n	800287c <_fwalk_sglue+0x10>

080028a8 <__sread>:
 80028a8:	b510      	push	{r4, lr}
 80028aa:	460c      	mov	r4, r1
 80028ac:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80028b0:	f000 f86c 	bl	800298c <_read_r>
 80028b4:	2800      	cmp	r0, #0
 80028b6:	bfab      	itete	ge
 80028b8:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80028ba:	89a3      	ldrhlt	r3, [r4, #12]
 80028bc:	181b      	addge	r3, r3, r0
 80028be:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80028c2:	bfac      	ite	ge
 80028c4:	6563      	strge	r3, [r4, #84]	@ 0x54
 80028c6:	81a3      	strhlt	r3, [r4, #12]
 80028c8:	bd10      	pop	{r4, pc}

080028ca <__swrite>:
 80028ca:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80028ce:	461f      	mov	r7, r3
 80028d0:	898b      	ldrh	r3, [r1, #12]
 80028d2:	05db      	lsls	r3, r3, #23
 80028d4:	4605      	mov	r5, r0
 80028d6:	460c      	mov	r4, r1
 80028d8:	4616      	mov	r6, r2
 80028da:	d505      	bpl.n	80028e8 <__swrite+0x1e>
 80028dc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80028e0:	2302      	movs	r3, #2
 80028e2:	2200      	movs	r2, #0
 80028e4:	f000 f840 	bl	8002968 <_lseek_r>
 80028e8:	89a3      	ldrh	r3, [r4, #12]
 80028ea:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80028ee:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80028f2:	81a3      	strh	r3, [r4, #12]
 80028f4:	4632      	mov	r2, r6
 80028f6:	463b      	mov	r3, r7
 80028f8:	4628      	mov	r0, r5
 80028fa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80028fe:	f000 b857 	b.w	80029b0 <_write_r>

08002902 <__sseek>:
 8002902:	b510      	push	{r4, lr}
 8002904:	460c      	mov	r4, r1
 8002906:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800290a:	f000 f82d 	bl	8002968 <_lseek_r>
 800290e:	1c43      	adds	r3, r0, #1
 8002910:	89a3      	ldrh	r3, [r4, #12]
 8002912:	bf15      	itete	ne
 8002914:	6560      	strne	r0, [r4, #84]	@ 0x54
 8002916:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800291a:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800291e:	81a3      	strheq	r3, [r4, #12]
 8002920:	bf18      	it	ne
 8002922:	81a3      	strhne	r3, [r4, #12]
 8002924:	bd10      	pop	{r4, pc}

08002926 <__sclose>:
 8002926:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800292a:	f000 b80d 	b.w	8002948 <_close_r>

0800292e <memset>:
 800292e:	4402      	add	r2, r0
 8002930:	4603      	mov	r3, r0
 8002932:	4293      	cmp	r3, r2
 8002934:	d100      	bne.n	8002938 <memset+0xa>
 8002936:	4770      	bx	lr
 8002938:	f803 1b01 	strb.w	r1, [r3], #1
 800293c:	e7f9      	b.n	8002932 <memset+0x4>
	...

08002940 <_localeconv_r>:
 8002940:	4800      	ldr	r0, [pc, #0]	@ (8002944 <_localeconv_r+0x4>)
 8002942:	4770      	bx	lr
 8002944:	20000154 	.word	0x20000154

08002948 <_close_r>:
 8002948:	b538      	push	{r3, r4, r5, lr}
 800294a:	4d06      	ldr	r5, [pc, #24]	@ (8002964 <_close_r+0x1c>)
 800294c:	2300      	movs	r3, #0
 800294e:	4604      	mov	r4, r0
 8002950:	4608      	mov	r0, r1
 8002952:	602b      	str	r3, [r5, #0]
 8002954:	f7fe fb24 	bl	8000fa0 <_close>
 8002958:	1c43      	adds	r3, r0, #1
 800295a:	d102      	bne.n	8002962 <_close_r+0x1a>
 800295c:	682b      	ldr	r3, [r5, #0]
 800295e:	b103      	cbz	r3, 8002962 <_close_r+0x1a>
 8002960:	6023      	str	r3, [r4, #0]
 8002962:	bd38      	pop	{r3, r4, r5, pc}
 8002964:	20000330 	.word	0x20000330

08002968 <_lseek_r>:
 8002968:	b538      	push	{r3, r4, r5, lr}
 800296a:	4d07      	ldr	r5, [pc, #28]	@ (8002988 <_lseek_r+0x20>)
 800296c:	4604      	mov	r4, r0
 800296e:	4608      	mov	r0, r1
 8002970:	4611      	mov	r1, r2
 8002972:	2200      	movs	r2, #0
 8002974:	602a      	str	r2, [r5, #0]
 8002976:	461a      	mov	r2, r3
 8002978:	f7fe fb39 	bl	8000fee <_lseek>
 800297c:	1c43      	adds	r3, r0, #1
 800297e:	d102      	bne.n	8002986 <_lseek_r+0x1e>
 8002980:	682b      	ldr	r3, [r5, #0]
 8002982:	b103      	cbz	r3, 8002986 <_lseek_r+0x1e>
 8002984:	6023      	str	r3, [r4, #0]
 8002986:	bd38      	pop	{r3, r4, r5, pc}
 8002988:	20000330 	.word	0x20000330

0800298c <_read_r>:
 800298c:	b538      	push	{r3, r4, r5, lr}
 800298e:	4d07      	ldr	r5, [pc, #28]	@ (80029ac <_read_r+0x20>)
 8002990:	4604      	mov	r4, r0
 8002992:	4608      	mov	r0, r1
 8002994:	4611      	mov	r1, r2
 8002996:	2200      	movs	r2, #0
 8002998:	602a      	str	r2, [r5, #0]
 800299a:	461a      	mov	r2, r3
 800299c:	f7fe fac7 	bl	8000f2e <_read>
 80029a0:	1c43      	adds	r3, r0, #1
 80029a2:	d102      	bne.n	80029aa <_read_r+0x1e>
 80029a4:	682b      	ldr	r3, [r5, #0]
 80029a6:	b103      	cbz	r3, 80029aa <_read_r+0x1e>
 80029a8:	6023      	str	r3, [r4, #0]
 80029aa:	bd38      	pop	{r3, r4, r5, pc}
 80029ac:	20000330 	.word	0x20000330

080029b0 <_write_r>:
 80029b0:	b538      	push	{r3, r4, r5, lr}
 80029b2:	4d07      	ldr	r5, [pc, #28]	@ (80029d0 <_write_r+0x20>)
 80029b4:	4604      	mov	r4, r0
 80029b6:	4608      	mov	r0, r1
 80029b8:	4611      	mov	r1, r2
 80029ba:	2200      	movs	r2, #0
 80029bc:	602a      	str	r2, [r5, #0]
 80029be:	461a      	mov	r2, r3
 80029c0:	f7fe fad2 	bl	8000f68 <_write>
 80029c4:	1c43      	adds	r3, r0, #1
 80029c6:	d102      	bne.n	80029ce <_write_r+0x1e>
 80029c8:	682b      	ldr	r3, [r5, #0]
 80029ca:	b103      	cbz	r3, 80029ce <_write_r+0x1e>
 80029cc:	6023      	str	r3, [r4, #0]
 80029ce:	bd38      	pop	{r3, r4, r5, pc}
 80029d0:	20000330 	.word	0x20000330

080029d4 <__errno>:
 80029d4:	4b01      	ldr	r3, [pc, #4]	@ (80029dc <__errno+0x8>)
 80029d6:	6818      	ldr	r0, [r3, #0]
 80029d8:	4770      	bx	lr
 80029da:	bf00      	nop
 80029dc:	20000014 	.word	0x20000014

080029e0 <__libc_init_array>:
 80029e0:	b570      	push	{r4, r5, r6, lr}
 80029e2:	4d0d      	ldr	r5, [pc, #52]	@ (8002a18 <__libc_init_array+0x38>)
 80029e4:	4c0d      	ldr	r4, [pc, #52]	@ (8002a1c <__libc_init_array+0x3c>)
 80029e6:	1b64      	subs	r4, r4, r5
 80029e8:	10a4      	asrs	r4, r4, #2
 80029ea:	2600      	movs	r6, #0
 80029ec:	42a6      	cmp	r6, r4
 80029ee:	d109      	bne.n	8002a04 <__libc_init_array+0x24>
 80029f0:	4d0b      	ldr	r5, [pc, #44]	@ (8002a20 <__libc_init_array+0x40>)
 80029f2:	4c0c      	ldr	r4, [pc, #48]	@ (8002a24 <__libc_init_array+0x44>)
 80029f4:	f001 febc 	bl	8004770 <_init>
 80029f8:	1b64      	subs	r4, r4, r5
 80029fa:	10a4      	asrs	r4, r4, #2
 80029fc:	2600      	movs	r6, #0
 80029fe:	42a6      	cmp	r6, r4
 8002a00:	d105      	bne.n	8002a0e <__libc_init_array+0x2e>
 8002a02:	bd70      	pop	{r4, r5, r6, pc}
 8002a04:	f855 3b04 	ldr.w	r3, [r5], #4
 8002a08:	4798      	blx	r3
 8002a0a:	3601      	adds	r6, #1
 8002a0c:	e7ee      	b.n	80029ec <__libc_init_array+0xc>
 8002a0e:	f855 3b04 	ldr.w	r3, [r5], #4
 8002a12:	4798      	blx	r3
 8002a14:	3601      	adds	r6, #1
 8002a16:	e7f2      	b.n	80029fe <__libc_init_array+0x1e>
 8002a18:	08004b10 	.word	0x08004b10
 8002a1c:	08004b10 	.word	0x08004b10
 8002a20:	08004b10 	.word	0x08004b10
 8002a24:	08004b14 	.word	0x08004b14

08002a28 <__retarget_lock_init_recursive>:
 8002a28:	4770      	bx	lr

08002a2a <__retarget_lock_acquire_recursive>:
 8002a2a:	4770      	bx	lr

08002a2c <__retarget_lock_release_recursive>:
 8002a2c:	4770      	bx	lr

08002a2e <quorem>:
 8002a2e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002a32:	6903      	ldr	r3, [r0, #16]
 8002a34:	690c      	ldr	r4, [r1, #16]
 8002a36:	42a3      	cmp	r3, r4
 8002a38:	4607      	mov	r7, r0
 8002a3a:	db7e      	blt.n	8002b3a <quorem+0x10c>
 8002a3c:	3c01      	subs	r4, #1
 8002a3e:	f101 0814 	add.w	r8, r1, #20
 8002a42:	00a3      	lsls	r3, r4, #2
 8002a44:	f100 0514 	add.w	r5, r0, #20
 8002a48:	9300      	str	r3, [sp, #0]
 8002a4a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002a4e:	9301      	str	r3, [sp, #4]
 8002a50:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8002a54:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002a58:	3301      	adds	r3, #1
 8002a5a:	429a      	cmp	r2, r3
 8002a5c:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8002a60:	fbb2 f6f3 	udiv	r6, r2, r3
 8002a64:	d32e      	bcc.n	8002ac4 <quorem+0x96>
 8002a66:	f04f 0a00 	mov.w	sl, #0
 8002a6a:	46c4      	mov	ip, r8
 8002a6c:	46ae      	mov	lr, r5
 8002a6e:	46d3      	mov	fp, sl
 8002a70:	f85c 3b04 	ldr.w	r3, [ip], #4
 8002a74:	b298      	uxth	r0, r3
 8002a76:	fb06 a000 	mla	r0, r6, r0, sl
 8002a7a:	0c02      	lsrs	r2, r0, #16
 8002a7c:	0c1b      	lsrs	r3, r3, #16
 8002a7e:	fb06 2303 	mla	r3, r6, r3, r2
 8002a82:	f8de 2000 	ldr.w	r2, [lr]
 8002a86:	b280      	uxth	r0, r0
 8002a88:	b292      	uxth	r2, r2
 8002a8a:	1a12      	subs	r2, r2, r0
 8002a8c:	445a      	add	r2, fp
 8002a8e:	f8de 0000 	ldr.w	r0, [lr]
 8002a92:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8002a96:	b29b      	uxth	r3, r3
 8002a98:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 8002a9c:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 8002aa0:	b292      	uxth	r2, r2
 8002aa2:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8002aa6:	45e1      	cmp	r9, ip
 8002aa8:	f84e 2b04 	str.w	r2, [lr], #4
 8002aac:	ea4f 4b23 	mov.w	fp, r3, asr #16
 8002ab0:	d2de      	bcs.n	8002a70 <quorem+0x42>
 8002ab2:	9b00      	ldr	r3, [sp, #0]
 8002ab4:	58eb      	ldr	r3, [r5, r3]
 8002ab6:	b92b      	cbnz	r3, 8002ac4 <quorem+0x96>
 8002ab8:	9b01      	ldr	r3, [sp, #4]
 8002aba:	3b04      	subs	r3, #4
 8002abc:	429d      	cmp	r5, r3
 8002abe:	461a      	mov	r2, r3
 8002ac0:	d32f      	bcc.n	8002b22 <quorem+0xf4>
 8002ac2:	613c      	str	r4, [r7, #16]
 8002ac4:	4638      	mov	r0, r7
 8002ac6:	f001 f979 	bl	8003dbc <__mcmp>
 8002aca:	2800      	cmp	r0, #0
 8002acc:	db25      	blt.n	8002b1a <quorem+0xec>
 8002ace:	4629      	mov	r1, r5
 8002ad0:	2000      	movs	r0, #0
 8002ad2:	f858 2b04 	ldr.w	r2, [r8], #4
 8002ad6:	f8d1 c000 	ldr.w	ip, [r1]
 8002ada:	fa1f fe82 	uxth.w	lr, r2
 8002ade:	fa1f f38c 	uxth.w	r3, ip
 8002ae2:	eba3 030e 	sub.w	r3, r3, lr
 8002ae6:	4403      	add	r3, r0
 8002ae8:	0c12      	lsrs	r2, r2, #16
 8002aea:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8002aee:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8002af2:	b29b      	uxth	r3, r3
 8002af4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002af8:	45c1      	cmp	r9, r8
 8002afa:	f841 3b04 	str.w	r3, [r1], #4
 8002afe:	ea4f 4022 	mov.w	r0, r2, asr #16
 8002b02:	d2e6      	bcs.n	8002ad2 <quorem+0xa4>
 8002b04:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002b08:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002b0c:	b922      	cbnz	r2, 8002b18 <quorem+0xea>
 8002b0e:	3b04      	subs	r3, #4
 8002b10:	429d      	cmp	r5, r3
 8002b12:	461a      	mov	r2, r3
 8002b14:	d30b      	bcc.n	8002b2e <quorem+0x100>
 8002b16:	613c      	str	r4, [r7, #16]
 8002b18:	3601      	adds	r6, #1
 8002b1a:	4630      	mov	r0, r6
 8002b1c:	b003      	add	sp, #12
 8002b1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002b22:	6812      	ldr	r2, [r2, #0]
 8002b24:	3b04      	subs	r3, #4
 8002b26:	2a00      	cmp	r2, #0
 8002b28:	d1cb      	bne.n	8002ac2 <quorem+0x94>
 8002b2a:	3c01      	subs	r4, #1
 8002b2c:	e7c6      	b.n	8002abc <quorem+0x8e>
 8002b2e:	6812      	ldr	r2, [r2, #0]
 8002b30:	3b04      	subs	r3, #4
 8002b32:	2a00      	cmp	r2, #0
 8002b34:	d1ef      	bne.n	8002b16 <quorem+0xe8>
 8002b36:	3c01      	subs	r4, #1
 8002b38:	e7ea      	b.n	8002b10 <quorem+0xe2>
 8002b3a:	2000      	movs	r0, #0
 8002b3c:	e7ee      	b.n	8002b1c <quorem+0xee>
	...

08002b40 <_dtoa_r>:
 8002b40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002b44:	69c7      	ldr	r7, [r0, #28]
 8002b46:	b099      	sub	sp, #100	@ 0x64
 8002b48:	ed8d 0b02 	vstr	d0, [sp, #8]
 8002b4c:	ec55 4b10 	vmov	r4, r5, d0
 8002b50:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 8002b52:	9109      	str	r1, [sp, #36]	@ 0x24
 8002b54:	4683      	mov	fp, r0
 8002b56:	920e      	str	r2, [sp, #56]	@ 0x38
 8002b58:	9313      	str	r3, [sp, #76]	@ 0x4c
 8002b5a:	b97f      	cbnz	r7, 8002b7c <_dtoa_r+0x3c>
 8002b5c:	2010      	movs	r0, #16
 8002b5e:	f000 fdfd 	bl	800375c <malloc>
 8002b62:	4602      	mov	r2, r0
 8002b64:	f8cb 001c 	str.w	r0, [fp, #28]
 8002b68:	b920      	cbnz	r0, 8002b74 <_dtoa_r+0x34>
 8002b6a:	4ba7      	ldr	r3, [pc, #668]	@ (8002e08 <_dtoa_r+0x2c8>)
 8002b6c:	21ef      	movs	r1, #239	@ 0xef
 8002b6e:	48a7      	ldr	r0, [pc, #668]	@ (8002e0c <_dtoa_r+0x2cc>)
 8002b70:	f001 faf6 	bl	8004160 <__assert_func>
 8002b74:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8002b78:	6007      	str	r7, [r0, #0]
 8002b7a:	60c7      	str	r7, [r0, #12]
 8002b7c:	f8db 301c 	ldr.w	r3, [fp, #28]
 8002b80:	6819      	ldr	r1, [r3, #0]
 8002b82:	b159      	cbz	r1, 8002b9c <_dtoa_r+0x5c>
 8002b84:	685a      	ldr	r2, [r3, #4]
 8002b86:	604a      	str	r2, [r1, #4]
 8002b88:	2301      	movs	r3, #1
 8002b8a:	4093      	lsls	r3, r2
 8002b8c:	608b      	str	r3, [r1, #8]
 8002b8e:	4658      	mov	r0, fp
 8002b90:	f000 feda 	bl	8003948 <_Bfree>
 8002b94:	f8db 301c 	ldr.w	r3, [fp, #28]
 8002b98:	2200      	movs	r2, #0
 8002b9a:	601a      	str	r2, [r3, #0]
 8002b9c:	1e2b      	subs	r3, r5, #0
 8002b9e:	bfb9      	ittee	lt
 8002ba0:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 8002ba4:	9303      	strlt	r3, [sp, #12]
 8002ba6:	2300      	movge	r3, #0
 8002ba8:	6033      	strge	r3, [r6, #0]
 8002baa:	9f03      	ldr	r7, [sp, #12]
 8002bac:	4b98      	ldr	r3, [pc, #608]	@ (8002e10 <_dtoa_r+0x2d0>)
 8002bae:	bfbc      	itt	lt
 8002bb0:	2201      	movlt	r2, #1
 8002bb2:	6032      	strlt	r2, [r6, #0]
 8002bb4:	43bb      	bics	r3, r7
 8002bb6:	d112      	bne.n	8002bde <_dtoa_r+0x9e>
 8002bb8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8002bba:	f242 730f 	movw	r3, #9999	@ 0x270f
 8002bbe:	6013      	str	r3, [r2, #0]
 8002bc0:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8002bc4:	4323      	orrs	r3, r4
 8002bc6:	f000 854d 	beq.w	8003664 <_dtoa_r+0xb24>
 8002bca:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8002bcc:	f8df a254 	ldr.w	sl, [pc, #596]	@ 8002e24 <_dtoa_r+0x2e4>
 8002bd0:	2b00      	cmp	r3, #0
 8002bd2:	f000 854f 	beq.w	8003674 <_dtoa_r+0xb34>
 8002bd6:	f10a 0303 	add.w	r3, sl, #3
 8002bda:	f000 bd49 	b.w	8003670 <_dtoa_r+0xb30>
 8002bde:	ed9d 7b02 	vldr	d7, [sp, #8]
 8002be2:	2200      	movs	r2, #0
 8002be4:	ec51 0b17 	vmov	r0, r1, d7
 8002be8:	2300      	movs	r3, #0
 8002bea:	ed8d 7b0c 	vstr	d7, [sp, #48]	@ 0x30
 8002bee:	f7fd ff93 	bl	8000b18 <__aeabi_dcmpeq>
 8002bf2:	4680      	mov	r8, r0
 8002bf4:	b158      	cbz	r0, 8002c0e <_dtoa_r+0xce>
 8002bf6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8002bf8:	2301      	movs	r3, #1
 8002bfa:	6013      	str	r3, [r2, #0]
 8002bfc:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8002bfe:	b113      	cbz	r3, 8002c06 <_dtoa_r+0xc6>
 8002c00:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8002c02:	4b84      	ldr	r3, [pc, #528]	@ (8002e14 <_dtoa_r+0x2d4>)
 8002c04:	6013      	str	r3, [r2, #0]
 8002c06:	f8df a220 	ldr.w	sl, [pc, #544]	@ 8002e28 <_dtoa_r+0x2e8>
 8002c0a:	f000 bd33 	b.w	8003674 <_dtoa_r+0xb34>
 8002c0e:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 8002c12:	aa16      	add	r2, sp, #88	@ 0x58
 8002c14:	a917      	add	r1, sp, #92	@ 0x5c
 8002c16:	4658      	mov	r0, fp
 8002c18:	f001 f980 	bl	8003f1c <__d2b>
 8002c1c:	f3c7 560a 	ubfx	r6, r7, #20, #11
 8002c20:	4681      	mov	r9, r0
 8002c22:	2e00      	cmp	r6, #0
 8002c24:	d077      	beq.n	8002d16 <_dtoa_r+0x1d6>
 8002c26:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002c28:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 8002c2c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002c30:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002c34:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8002c38:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 8002c3c:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8002c40:	4619      	mov	r1, r3
 8002c42:	2200      	movs	r2, #0
 8002c44:	4b74      	ldr	r3, [pc, #464]	@ (8002e18 <_dtoa_r+0x2d8>)
 8002c46:	f7fd fb47 	bl	80002d8 <__aeabi_dsub>
 8002c4a:	a369      	add	r3, pc, #420	@ (adr r3, 8002df0 <_dtoa_r+0x2b0>)
 8002c4c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002c50:	f7fd fcfa 	bl	8000648 <__aeabi_dmul>
 8002c54:	a368      	add	r3, pc, #416	@ (adr r3, 8002df8 <_dtoa_r+0x2b8>)
 8002c56:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002c5a:	f7fd fb3f 	bl	80002dc <__adddf3>
 8002c5e:	4604      	mov	r4, r0
 8002c60:	4630      	mov	r0, r6
 8002c62:	460d      	mov	r5, r1
 8002c64:	f7fd fc86 	bl	8000574 <__aeabi_i2d>
 8002c68:	a365      	add	r3, pc, #404	@ (adr r3, 8002e00 <_dtoa_r+0x2c0>)
 8002c6a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002c6e:	f7fd fceb 	bl	8000648 <__aeabi_dmul>
 8002c72:	4602      	mov	r2, r0
 8002c74:	460b      	mov	r3, r1
 8002c76:	4620      	mov	r0, r4
 8002c78:	4629      	mov	r1, r5
 8002c7a:	f7fd fb2f 	bl	80002dc <__adddf3>
 8002c7e:	4604      	mov	r4, r0
 8002c80:	460d      	mov	r5, r1
 8002c82:	f7fd ff91 	bl	8000ba8 <__aeabi_d2iz>
 8002c86:	2200      	movs	r2, #0
 8002c88:	4607      	mov	r7, r0
 8002c8a:	2300      	movs	r3, #0
 8002c8c:	4620      	mov	r0, r4
 8002c8e:	4629      	mov	r1, r5
 8002c90:	f7fd ff4c 	bl	8000b2c <__aeabi_dcmplt>
 8002c94:	b140      	cbz	r0, 8002ca8 <_dtoa_r+0x168>
 8002c96:	4638      	mov	r0, r7
 8002c98:	f7fd fc6c 	bl	8000574 <__aeabi_i2d>
 8002c9c:	4622      	mov	r2, r4
 8002c9e:	462b      	mov	r3, r5
 8002ca0:	f7fd ff3a 	bl	8000b18 <__aeabi_dcmpeq>
 8002ca4:	b900      	cbnz	r0, 8002ca8 <_dtoa_r+0x168>
 8002ca6:	3f01      	subs	r7, #1
 8002ca8:	2f16      	cmp	r7, #22
 8002caa:	d851      	bhi.n	8002d50 <_dtoa_r+0x210>
 8002cac:	4b5b      	ldr	r3, [pc, #364]	@ (8002e1c <_dtoa_r+0x2dc>)
 8002cae:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8002cb2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002cb6:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002cba:	f7fd ff37 	bl	8000b2c <__aeabi_dcmplt>
 8002cbe:	2800      	cmp	r0, #0
 8002cc0:	d048      	beq.n	8002d54 <_dtoa_r+0x214>
 8002cc2:	3f01      	subs	r7, #1
 8002cc4:	2300      	movs	r3, #0
 8002cc6:	9312      	str	r3, [sp, #72]	@ 0x48
 8002cc8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8002cca:	1b9b      	subs	r3, r3, r6
 8002ccc:	1e5a      	subs	r2, r3, #1
 8002cce:	bf44      	itt	mi
 8002cd0:	f1c3 0801 	rsbmi	r8, r3, #1
 8002cd4:	2300      	movmi	r3, #0
 8002cd6:	9208      	str	r2, [sp, #32]
 8002cd8:	bf54      	ite	pl
 8002cda:	f04f 0800 	movpl.w	r8, #0
 8002cde:	9308      	strmi	r3, [sp, #32]
 8002ce0:	2f00      	cmp	r7, #0
 8002ce2:	db39      	blt.n	8002d58 <_dtoa_r+0x218>
 8002ce4:	9b08      	ldr	r3, [sp, #32]
 8002ce6:	970f      	str	r7, [sp, #60]	@ 0x3c
 8002ce8:	443b      	add	r3, r7
 8002cea:	9308      	str	r3, [sp, #32]
 8002cec:	2300      	movs	r3, #0
 8002cee:	930a      	str	r3, [sp, #40]	@ 0x28
 8002cf0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002cf2:	2b09      	cmp	r3, #9
 8002cf4:	d864      	bhi.n	8002dc0 <_dtoa_r+0x280>
 8002cf6:	2b05      	cmp	r3, #5
 8002cf8:	bfc4      	itt	gt
 8002cfa:	3b04      	subgt	r3, #4
 8002cfc:	9309      	strgt	r3, [sp, #36]	@ 0x24
 8002cfe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002d00:	f1a3 0302 	sub.w	r3, r3, #2
 8002d04:	bfcc      	ite	gt
 8002d06:	2400      	movgt	r4, #0
 8002d08:	2401      	movle	r4, #1
 8002d0a:	2b03      	cmp	r3, #3
 8002d0c:	d863      	bhi.n	8002dd6 <_dtoa_r+0x296>
 8002d0e:	e8df f003 	tbb	[pc, r3]
 8002d12:	372a      	.short	0x372a
 8002d14:	5535      	.short	0x5535
 8002d16:	e9dd 6316 	ldrd	r6, r3, [sp, #88]	@ 0x58
 8002d1a:	441e      	add	r6, r3
 8002d1c:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8002d20:	2b20      	cmp	r3, #32
 8002d22:	bfc1      	itttt	gt
 8002d24:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8002d28:	409f      	lslgt	r7, r3
 8002d2a:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8002d2e:	fa24 f303 	lsrgt.w	r3, r4, r3
 8002d32:	bfd6      	itet	le
 8002d34:	f1c3 0320 	rsble	r3, r3, #32
 8002d38:	ea47 0003 	orrgt.w	r0, r7, r3
 8002d3c:	fa04 f003 	lslle.w	r0, r4, r3
 8002d40:	f7fd fc08 	bl	8000554 <__aeabi_ui2d>
 8002d44:	2201      	movs	r2, #1
 8002d46:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 8002d4a:	3e01      	subs	r6, #1
 8002d4c:	9214      	str	r2, [sp, #80]	@ 0x50
 8002d4e:	e777      	b.n	8002c40 <_dtoa_r+0x100>
 8002d50:	2301      	movs	r3, #1
 8002d52:	e7b8      	b.n	8002cc6 <_dtoa_r+0x186>
 8002d54:	9012      	str	r0, [sp, #72]	@ 0x48
 8002d56:	e7b7      	b.n	8002cc8 <_dtoa_r+0x188>
 8002d58:	427b      	negs	r3, r7
 8002d5a:	930a      	str	r3, [sp, #40]	@ 0x28
 8002d5c:	2300      	movs	r3, #0
 8002d5e:	eba8 0807 	sub.w	r8, r8, r7
 8002d62:	930f      	str	r3, [sp, #60]	@ 0x3c
 8002d64:	e7c4      	b.n	8002cf0 <_dtoa_r+0x1b0>
 8002d66:	2300      	movs	r3, #0
 8002d68:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002d6a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002d6c:	2b00      	cmp	r3, #0
 8002d6e:	dc35      	bgt.n	8002ddc <_dtoa_r+0x29c>
 8002d70:	2301      	movs	r3, #1
 8002d72:	9300      	str	r3, [sp, #0]
 8002d74:	9307      	str	r3, [sp, #28]
 8002d76:	461a      	mov	r2, r3
 8002d78:	920e      	str	r2, [sp, #56]	@ 0x38
 8002d7a:	e00b      	b.n	8002d94 <_dtoa_r+0x254>
 8002d7c:	2301      	movs	r3, #1
 8002d7e:	e7f3      	b.n	8002d68 <_dtoa_r+0x228>
 8002d80:	2300      	movs	r3, #0
 8002d82:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002d84:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002d86:	18fb      	adds	r3, r7, r3
 8002d88:	9300      	str	r3, [sp, #0]
 8002d8a:	3301      	adds	r3, #1
 8002d8c:	2b01      	cmp	r3, #1
 8002d8e:	9307      	str	r3, [sp, #28]
 8002d90:	bfb8      	it	lt
 8002d92:	2301      	movlt	r3, #1
 8002d94:	f8db 001c 	ldr.w	r0, [fp, #28]
 8002d98:	2100      	movs	r1, #0
 8002d9a:	2204      	movs	r2, #4
 8002d9c:	f102 0514 	add.w	r5, r2, #20
 8002da0:	429d      	cmp	r5, r3
 8002da2:	d91f      	bls.n	8002de4 <_dtoa_r+0x2a4>
 8002da4:	6041      	str	r1, [r0, #4]
 8002da6:	4658      	mov	r0, fp
 8002da8:	f000 fd8e 	bl	80038c8 <_Balloc>
 8002dac:	4682      	mov	sl, r0
 8002dae:	2800      	cmp	r0, #0
 8002db0:	d13c      	bne.n	8002e2c <_dtoa_r+0x2ec>
 8002db2:	4b1b      	ldr	r3, [pc, #108]	@ (8002e20 <_dtoa_r+0x2e0>)
 8002db4:	4602      	mov	r2, r0
 8002db6:	f240 11af 	movw	r1, #431	@ 0x1af
 8002dba:	e6d8      	b.n	8002b6e <_dtoa_r+0x2e>
 8002dbc:	2301      	movs	r3, #1
 8002dbe:	e7e0      	b.n	8002d82 <_dtoa_r+0x242>
 8002dc0:	2401      	movs	r4, #1
 8002dc2:	2300      	movs	r3, #0
 8002dc4:	9309      	str	r3, [sp, #36]	@ 0x24
 8002dc6:	940b      	str	r4, [sp, #44]	@ 0x2c
 8002dc8:	f04f 33ff 	mov.w	r3, #4294967295
 8002dcc:	9300      	str	r3, [sp, #0]
 8002dce:	9307      	str	r3, [sp, #28]
 8002dd0:	2200      	movs	r2, #0
 8002dd2:	2312      	movs	r3, #18
 8002dd4:	e7d0      	b.n	8002d78 <_dtoa_r+0x238>
 8002dd6:	2301      	movs	r3, #1
 8002dd8:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002dda:	e7f5      	b.n	8002dc8 <_dtoa_r+0x288>
 8002ddc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002dde:	9300      	str	r3, [sp, #0]
 8002de0:	9307      	str	r3, [sp, #28]
 8002de2:	e7d7      	b.n	8002d94 <_dtoa_r+0x254>
 8002de4:	3101      	adds	r1, #1
 8002de6:	0052      	lsls	r2, r2, #1
 8002de8:	e7d8      	b.n	8002d9c <_dtoa_r+0x25c>
 8002dea:	bf00      	nop
 8002dec:	f3af 8000 	nop.w
 8002df0:	636f4361 	.word	0x636f4361
 8002df4:	3fd287a7 	.word	0x3fd287a7
 8002df8:	8b60c8b3 	.word	0x8b60c8b3
 8002dfc:	3fc68a28 	.word	0x3fc68a28
 8002e00:	509f79fb 	.word	0x509f79fb
 8002e04:	3fd34413 	.word	0x3fd34413
 8002e08:	080047d9 	.word	0x080047d9
 8002e0c:	080047f0 	.word	0x080047f0
 8002e10:	7ff00000 	.word	0x7ff00000
 8002e14:	080047a9 	.word	0x080047a9
 8002e18:	3ff80000 	.word	0x3ff80000
 8002e1c:	080048e8 	.word	0x080048e8
 8002e20:	08004848 	.word	0x08004848
 8002e24:	080047d5 	.word	0x080047d5
 8002e28:	080047a8 	.word	0x080047a8
 8002e2c:	f8db 301c 	ldr.w	r3, [fp, #28]
 8002e30:	6018      	str	r0, [r3, #0]
 8002e32:	9b07      	ldr	r3, [sp, #28]
 8002e34:	2b0e      	cmp	r3, #14
 8002e36:	f200 80a4 	bhi.w	8002f82 <_dtoa_r+0x442>
 8002e3a:	2c00      	cmp	r4, #0
 8002e3c:	f000 80a1 	beq.w	8002f82 <_dtoa_r+0x442>
 8002e40:	2f00      	cmp	r7, #0
 8002e42:	dd33      	ble.n	8002eac <_dtoa_r+0x36c>
 8002e44:	4bad      	ldr	r3, [pc, #692]	@ (80030fc <_dtoa_r+0x5bc>)
 8002e46:	f007 020f 	and.w	r2, r7, #15
 8002e4a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002e4e:	ed93 7b00 	vldr	d7, [r3]
 8002e52:	05f8      	lsls	r0, r7, #23
 8002e54:	ed8d 7b04 	vstr	d7, [sp, #16]
 8002e58:	ea4f 1427 	mov.w	r4, r7, asr #4
 8002e5c:	d516      	bpl.n	8002e8c <_dtoa_r+0x34c>
 8002e5e:	4ba8      	ldr	r3, [pc, #672]	@ (8003100 <_dtoa_r+0x5c0>)
 8002e60:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002e64:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8002e68:	f7fd fd18 	bl	800089c <__aeabi_ddiv>
 8002e6c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002e70:	f004 040f 	and.w	r4, r4, #15
 8002e74:	2603      	movs	r6, #3
 8002e76:	4da2      	ldr	r5, [pc, #648]	@ (8003100 <_dtoa_r+0x5c0>)
 8002e78:	b954      	cbnz	r4, 8002e90 <_dtoa_r+0x350>
 8002e7a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002e7e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002e82:	f7fd fd0b 	bl	800089c <__aeabi_ddiv>
 8002e86:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002e8a:	e028      	b.n	8002ede <_dtoa_r+0x39e>
 8002e8c:	2602      	movs	r6, #2
 8002e8e:	e7f2      	b.n	8002e76 <_dtoa_r+0x336>
 8002e90:	07e1      	lsls	r1, r4, #31
 8002e92:	d508      	bpl.n	8002ea6 <_dtoa_r+0x366>
 8002e94:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002e98:	e9d5 2300 	ldrd	r2, r3, [r5]
 8002e9c:	f7fd fbd4 	bl	8000648 <__aeabi_dmul>
 8002ea0:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002ea4:	3601      	adds	r6, #1
 8002ea6:	1064      	asrs	r4, r4, #1
 8002ea8:	3508      	adds	r5, #8
 8002eaa:	e7e5      	b.n	8002e78 <_dtoa_r+0x338>
 8002eac:	f000 80d2 	beq.w	8003054 <_dtoa_r+0x514>
 8002eb0:	427c      	negs	r4, r7
 8002eb2:	4b92      	ldr	r3, [pc, #584]	@ (80030fc <_dtoa_r+0x5bc>)
 8002eb4:	4d92      	ldr	r5, [pc, #584]	@ (8003100 <_dtoa_r+0x5c0>)
 8002eb6:	f004 020f 	and.w	r2, r4, #15
 8002eba:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002ebe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002ec2:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002ec6:	f7fd fbbf 	bl	8000648 <__aeabi_dmul>
 8002eca:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002ece:	1124      	asrs	r4, r4, #4
 8002ed0:	2300      	movs	r3, #0
 8002ed2:	2602      	movs	r6, #2
 8002ed4:	2c00      	cmp	r4, #0
 8002ed6:	f040 80b2 	bne.w	800303e <_dtoa_r+0x4fe>
 8002eda:	2b00      	cmp	r3, #0
 8002edc:	d1d3      	bne.n	8002e86 <_dtoa_r+0x346>
 8002ede:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8002ee0:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8002ee4:	2b00      	cmp	r3, #0
 8002ee6:	f000 80b7 	beq.w	8003058 <_dtoa_r+0x518>
 8002eea:	4b86      	ldr	r3, [pc, #536]	@ (8003104 <_dtoa_r+0x5c4>)
 8002eec:	2200      	movs	r2, #0
 8002eee:	4620      	mov	r0, r4
 8002ef0:	4629      	mov	r1, r5
 8002ef2:	f7fd fe1b 	bl	8000b2c <__aeabi_dcmplt>
 8002ef6:	2800      	cmp	r0, #0
 8002ef8:	f000 80ae 	beq.w	8003058 <_dtoa_r+0x518>
 8002efc:	9b07      	ldr	r3, [sp, #28]
 8002efe:	2b00      	cmp	r3, #0
 8002f00:	f000 80aa 	beq.w	8003058 <_dtoa_r+0x518>
 8002f04:	9b00      	ldr	r3, [sp, #0]
 8002f06:	2b00      	cmp	r3, #0
 8002f08:	dd37      	ble.n	8002f7a <_dtoa_r+0x43a>
 8002f0a:	1e7b      	subs	r3, r7, #1
 8002f0c:	9304      	str	r3, [sp, #16]
 8002f0e:	4620      	mov	r0, r4
 8002f10:	4b7d      	ldr	r3, [pc, #500]	@ (8003108 <_dtoa_r+0x5c8>)
 8002f12:	2200      	movs	r2, #0
 8002f14:	4629      	mov	r1, r5
 8002f16:	f7fd fb97 	bl	8000648 <__aeabi_dmul>
 8002f1a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002f1e:	9c00      	ldr	r4, [sp, #0]
 8002f20:	3601      	adds	r6, #1
 8002f22:	4630      	mov	r0, r6
 8002f24:	f7fd fb26 	bl	8000574 <__aeabi_i2d>
 8002f28:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002f2c:	f7fd fb8c 	bl	8000648 <__aeabi_dmul>
 8002f30:	4b76      	ldr	r3, [pc, #472]	@ (800310c <_dtoa_r+0x5cc>)
 8002f32:	2200      	movs	r2, #0
 8002f34:	f7fd f9d2 	bl	80002dc <__adddf3>
 8002f38:	4605      	mov	r5, r0
 8002f3a:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8002f3e:	2c00      	cmp	r4, #0
 8002f40:	f040 808d 	bne.w	800305e <_dtoa_r+0x51e>
 8002f44:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002f48:	4b71      	ldr	r3, [pc, #452]	@ (8003110 <_dtoa_r+0x5d0>)
 8002f4a:	2200      	movs	r2, #0
 8002f4c:	f7fd f9c4 	bl	80002d8 <__aeabi_dsub>
 8002f50:	4602      	mov	r2, r0
 8002f52:	460b      	mov	r3, r1
 8002f54:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002f58:	462a      	mov	r2, r5
 8002f5a:	4633      	mov	r3, r6
 8002f5c:	f7fd fe04 	bl	8000b68 <__aeabi_dcmpgt>
 8002f60:	2800      	cmp	r0, #0
 8002f62:	f040 828b 	bne.w	800347c <_dtoa_r+0x93c>
 8002f66:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002f6a:	462a      	mov	r2, r5
 8002f6c:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8002f70:	f7fd fddc 	bl	8000b2c <__aeabi_dcmplt>
 8002f74:	2800      	cmp	r0, #0
 8002f76:	f040 8128 	bne.w	80031ca <_dtoa_r+0x68a>
 8002f7a:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 8002f7e:	e9cd 3402 	strd	r3, r4, [sp, #8]
 8002f82:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8002f84:	2b00      	cmp	r3, #0
 8002f86:	f2c0 815a 	blt.w	800323e <_dtoa_r+0x6fe>
 8002f8a:	2f0e      	cmp	r7, #14
 8002f8c:	f300 8157 	bgt.w	800323e <_dtoa_r+0x6fe>
 8002f90:	4b5a      	ldr	r3, [pc, #360]	@ (80030fc <_dtoa_r+0x5bc>)
 8002f92:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8002f96:	ed93 7b00 	vldr	d7, [r3]
 8002f9a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002f9c:	2b00      	cmp	r3, #0
 8002f9e:	ed8d 7b00 	vstr	d7, [sp]
 8002fa2:	da03      	bge.n	8002fac <_dtoa_r+0x46c>
 8002fa4:	9b07      	ldr	r3, [sp, #28]
 8002fa6:	2b00      	cmp	r3, #0
 8002fa8:	f340 8101 	ble.w	80031ae <_dtoa_r+0x66e>
 8002fac:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8002fb0:	4656      	mov	r6, sl
 8002fb2:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002fb6:	4620      	mov	r0, r4
 8002fb8:	4629      	mov	r1, r5
 8002fba:	f7fd fc6f 	bl	800089c <__aeabi_ddiv>
 8002fbe:	f7fd fdf3 	bl	8000ba8 <__aeabi_d2iz>
 8002fc2:	4680      	mov	r8, r0
 8002fc4:	f7fd fad6 	bl	8000574 <__aeabi_i2d>
 8002fc8:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002fcc:	f7fd fb3c 	bl	8000648 <__aeabi_dmul>
 8002fd0:	4602      	mov	r2, r0
 8002fd2:	460b      	mov	r3, r1
 8002fd4:	4620      	mov	r0, r4
 8002fd6:	4629      	mov	r1, r5
 8002fd8:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8002fdc:	f7fd f97c 	bl	80002d8 <__aeabi_dsub>
 8002fe0:	f806 4b01 	strb.w	r4, [r6], #1
 8002fe4:	9d07      	ldr	r5, [sp, #28]
 8002fe6:	eba6 040a 	sub.w	r4, r6, sl
 8002fea:	42a5      	cmp	r5, r4
 8002fec:	4602      	mov	r2, r0
 8002fee:	460b      	mov	r3, r1
 8002ff0:	f040 8117 	bne.w	8003222 <_dtoa_r+0x6e2>
 8002ff4:	f7fd f972 	bl	80002dc <__adddf3>
 8002ff8:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002ffc:	4604      	mov	r4, r0
 8002ffe:	460d      	mov	r5, r1
 8003000:	f7fd fdb2 	bl	8000b68 <__aeabi_dcmpgt>
 8003004:	2800      	cmp	r0, #0
 8003006:	f040 80f9 	bne.w	80031fc <_dtoa_r+0x6bc>
 800300a:	e9dd 2300 	ldrd	r2, r3, [sp]
 800300e:	4620      	mov	r0, r4
 8003010:	4629      	mov	r1, r5
 8003012:	f7fd fd81 	bl	8000b18 <__aeabi_dcmpeq>
 8003016:	b118      	cbz	r0, 8003020 <_dtoa_r+0x4e0>
 8003018:	f018 0f01 	tst.w	r8, #1
 800301c:	f040 80ee 	bne.w	80031fc <_dtoa_r+0x6bc>
 8003020:	4649      	mov	r1, r9
 8003022:	4658      	mov	r0, fp
 8003024:	f000 fc90 	bl	8003948 <_Bfree>
 8003028:	2300      	movs	r3, #0
 800302a:	7033      	strb	r3, [r6, #0]
 800302c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800302e:	3701      	adds	r7, #1
 8003030:	601f      	str	r7, [r3, #0]
 8003032:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8003034:	2b00      	cmp	r3, #0
 8003036:	f000 831d 	beq.w	8003674 <_dtoa_r+0xb34>
 800303a:	601e      	str	r6, [r3, #0]
 800303c:	e31a      	b.n	8003674 <_dtoa_r+0xb34>
 800303e:	07e2      	lsls	r2, r4, #31
 8003040:	d505      	bpl.n	800304e <_dtoa_r+0x50e>
 8003042:	e9d5 2300 	ldrd	r2, r3, [r5]
 8003046:	f7fd faff 	bl	8000648 <__aeabi_dmul>
 800304a:	3601      	adds	r6, #1
 800304c:	2301      	movs	r3, #1
 800304e:	1064      	asrs	r4, r4, #1
 8003050:	3508      	adds	r5, #8
 8003052:	e73f      	b.n	8002ed4 <_dtoa_r+0x394>
 8003054:	2602      	movs	r6, #2
 8003056:	e742      	b.n	8002ede <_dtoa_r+0x39e>
 8003058:	9c07      	ldr	r4, [sp, #28]
 800305a:	9704      	str	r7, [sp, #16]
 800305c:	e761      	b.n	8002f22 <_dtoa_r+0x3e2>
 800305e:	4b27      	ldr	r3, [pc, #156]	@ (80030fc <_dtoa_r+0x5bc>)
 8003060:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8003062:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8003066:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800306a:	4454      	add	r4, sl
 800306c:	2900      	cmp	r1, #0
 800306e:	d053      	beq.n	8003118 <_dtoa_r+0x5d8>
 8003070:	4928      	ldr	r1, [pc, #160]	@ (8003114 <_dtoa_r+0x5d4>)
 8003072:	2000      	movs	r0, #0
 8003074:	f7fd fc12 	bl	800089c <__aeabi_ddiv>
 8003078:	4633      	mov	r3, r6
 800307a:	462a      	mov	r2, r5
 800307c:	f7fd f92c 	bl	80002d8 <__aeabi_dsub>
 8003080:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8003084:	4656      	mov	r6, sl
 8003086:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800308a:	f7fd fd8d 	bl	8000ba8 <__aeabi_d2iz>
 800308e:	4605      	mov	r5, r0
 8003090:	f7fd fa70 	bl	8000574 <__aeabi_i2d>
 8003094:	4602      	mov	r2, r0
 8003096:	460b      	mov	r3, r1
 8003098:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800309c:	f7fd f91c 	bl	80002d8 <__aeabi_dsub>
 80030a0:	3530      	adds	r5, #48	@ 0x30
 80030a2:	4602      	mov	r2, r0
 80030a4:	460b      	mov	r3, r1
 80030a6:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80030aa:	f806 5b01 	strb.w	r5, [r6], #1
 80030ae:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 80030b2:	f7fd fd3b 	bl	8000b2c <__aeabi_dcmplt>
 80030b6:	2800      	cmp	r0, #0
 80030b8:	d171      	bne.n	800319e <_dtoa_r+0x65e>
 80030ba:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80030be:	4911      	ldr	r1, [pc, #68]	@ (8003104 <_dtoa_r+0x5c4>)
 80030c0:	2000      	movs	r0, #0
 80030c2:	f7fd f909 	bl	80002d8 <__aeabi_dsub>
 80030c6:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 80030ca:	f7fd fd2f 	bl	8000b2c <__aeabi_dcmplt>
 80030ce:	2800      	cmp	r0, #0
 80030d0:	f040 8095 	bne.w	80031fe <_dtoa_r+0x6be>
 80030d4:	42a6      	cmp	r6, r4
 80030d6:	f43f af50 	beq.w	8002f7a <_dtoa_r+0x43a>
 80030da:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 80030de:	4b0a      	ldr	r3, [pc, #40]	@ (8003108 <_dtoa_r+0x5c8>)
 80030e0:	2200      	movs	r2, #0
 80030e2:	f7fd fab1 	bl	8000648 <__aeabi_dmul>
 80030e6:	4b08      	ldr	r3, [pc, #32]	@ (8003108 <_dtoa_r+0x5c8>)
 80030e8:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 80030ec:	2200      	movs	r2, #0
 80030ee:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80030f2:	f7fd faa9 	bl	8000648 <__aeabi_dmul>
 80030f6:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80030fa:	e7c4      	b.n	8003086 <_dtoa_r+0x546>
 80030fc:	080048e8 	.word	0x080048e8
 8003100:	080048c0 	.word	0x080048c0
 8003104:	3ff00000 	.word	0x3ff00000
 8003108:	40240000 	.word	0x40240000
 800310c:	401c0000 	.word	0x401c0000
 8003110:	40140000 	.word	0x40140000
 8003114:	3fe00000 	.word	0x3fe00000
 8003118:	4631      	mov	r1, r6
 800311a:	4628      	mov	r0, r5
 800311c:	f7fd fa94 	bl	8000648 <__aeabi_dmul>
 8003120:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8003124:	9415      	str	r4, [sp, #84]	@ 0x54
 8003126:	4656      	mov	r6, sl
 8003128:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800312c:	f7fd fd3c 	bl	8000ba8 <__aeabi_d2iz>
 8003130:	4605      	mov	r5, r0
 8003132:	f7fd fa1f 	bl	8000574 <__aeabi_i2d>
 8003136:	4602      	mov	r2, r0
 8003138:	460b      	mov	r3, r1
 800313a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800313e:	f7fd f8cb 	bl	80002d8 <__aeabi_dsub>
 8003142:	3530      	adds	r5, #48	@ 0x30
 8003144:	f806 5b01 	strb.w	r5, [r6], #1
 8003148:	4602      	mov	r2, r0
 800314a:	460b      	mov	r3, r1
 800314c:	42a6      	cmp	r6, r4
 800314e:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8003152:	f04f 0200 	mov.w	r2, #0
 8003156:	d124      	bne.n	80031a2 <_dtoa_r+0x662>
 8003158:	4bac      	ldr	r3, [pc, #688]	@ (800340c <_dtoa_r+0x8cc>)
 800315a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 800315e:	f7fd f8bd 	bl	80002dc <__adddf3>
 8003162:	4602      	mov	r2, r0
 8003164:	460b      	mov	r3, r1
 8003166:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800316a:	f7fd fcfd 	bl	8000b68 <__aeabi_dcmpgt>
 800316e:	2800      	cmp	r0, #0
 8003170:	d145      	bne.n	80031fe <_dtoa_r+0x6be>
 8003172:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8003176:	49a5      	ldr	r1, [pc, #660]	@ (800340c <_dtoa_r+0x8cc>)
 8003178:	2000      	movs	r0, #0
 800317a:	f7fd f8ad 	bl	80002d8 <__aeabi_dsub>
 800317e:	4602      	mov	r2, r0
 8003180:	460b      	mov	r3, r1
 8003182:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003186:	f7fd fcd1 	bl	8000b2c <__aeabi_dcmplt>
 800318a:	2800      	cmp	r0, #0
 800318c:	f43f aef5 	beq.w	8002f7a <_dtoa_r+0x43a>
 8003190:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8003192:	1e73      	subs	r3, r6, #1
 8003194:	9315      	str	r3, [sp, #84]	@ 0x54
 8003196:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 800319a:	2b30      	cmp	r3, #48	@ 0x30
 800319c:	d0f8      	beq.n	8003190 <_dtoa_r+0x650>
 800319e:	9f04      	ldr	r7, [sp, #16]
 80031a0:	e73e      	b.n	8003020 <_dtoa_r+0x4e0>
 80031a2:	4b9b      	ldr	r3, [pc, #620]	@ (8003410 <_dtoa_r+0x8d0>)
 80031a4:	f7fd fa50 	bl	8000648 <__aeabi_dmul>
 80031a8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80031ac:	e7bc      	b.n	8003128 <_dtoa_r+0x5e8>
 80031ae:	d10c      	bne.n	80031ca <_dtoa_r+0x68a>
 80031b0:	4b98      	ldr	r3, [pc, #608]	@ (8003414 <_dtoa_r+0x8d4>)
 80031b2:	2200      	movs	r2, #0
 80031b4:	e9dd 0100 	ldrd	r0, r1, [sp]
 80031b8:	f7fd fa46 	bl	8000648 <__aeabi_dmul>
 80031bc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80031c0:	f7fd fcc8 	bl	8000b54 <__aeabi_dcmpge>
 80031c4:	2800      	cmp	r0, #0
 80031c6:	f000 8157 	beq.w	8003478 <_dtoa_r+0x938>
 80031ca:	2400      	movs	r4, #0
 80031cc:	4625      	mov	r5, r4
 80031ce:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80031d0:	43db      	mvns	r3, r3
 80031d2:	9304      	str	r3, [sp, #16]
 80031d4:	4656      	mov	r6, sl
 80031d6:	2700      	movs	r7, #0
 80031d8:	4621      	mov	r1, r4
 80031da:	4658      	mov	r0, fp
 80031dc:	f000 fbb4 	bl	8003948 <_Bfree>
 80031e0:	2d00      	cmp	r5, #0
 80031e2:	d0dc      	beq.n	800319e <_dtoa_r+0x65e>
 80031e4:	b12f      	cbz	r7, 80031f2 <_dtoa_r+0x6b2>
 80031e6:	42af      	cmp	r7, r5
 80031e8:	d003      	beq.n	80031f2 <_dtoa_r+0x6b2>
 80031ea:	4639      	mov	r1, r7
 80031ec:	4658      	mov	r0, fp
 80031ee:	f000 fbab 	bl	8003948 <_Bfree>
 80031f2:	4629      	mov	r1, r5
 80031f4:	4658      	mov	r0, fp
 80031f6:	f000 fba7 	bl	8003948 <_Bfree>
 80031fa:	e7d0      	b.n	800319e <_dtoa_r+0x65e>
 80031fc:	9704      	str	r7, [sp, #16]
 80031fe:	4633      	mov	r3, r6
 8003200:	461e      	mov	r6, r3
 8003202:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003206:	2a39      	cmp	r2, #57	@ 0x39
 8003208:	d107      	bne.n	800321a <_dtoa_r+0x6da>
 800320a:	459a      	cmp	sl, r3
 800320c:	d1f8      	bne.n	8003200 <_dtoa_r+0x6c0>
 800320e:	9a04      	ldr	r2, [sp, #16]
 8003210:	3201      	adds	r2, #1
 8003212:	9204      	str	r2, [sp, #16]
 8003214:	2230      	movs	r2, #48	@ 0x30
 8003216:	f88a 2000 	strb.w	r2, [sl]
 800321a:	781a      	ldrb	r2, [r3, #0]
 800321c:	3201      	adds	r2, #1
 800321e:	701a      	strb	r2, [r3, #0]
 8003220:	e7bd      	b.n	800319e <_dtoa_r+0x65e>
 8003222:	4b7b      	ldr	r3, [pc, #492]	@ (8003410 <_dtoa_r+0x8d0>)
 8003224:	2200      	movs	r2, #0
 8003226:	f7fd fa0f 	bl	8000648 <__aeabi_dmul>
 800322a:	2200      	movs	r2, #0
 800322c:	2300      	movs	r3, #0
 800322e:	4604      	mov	r4, r0
 8003230:	460d      	mov	r5, r1
 8003232:	f7fd fc71 	bl	8000b18 <__aeabi_dcmpeq>
 8003236:	2800      	cmp	r0, #0
 8003238:	f43f aebb 	beq.w	8002fb2 <_dtoa_r+0x472>
 800323c:	e6f0      	b.n	8003020 <_dtoa_r+0x4e0>
 800323e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8003240:	2a00      	cmp	r2, #0
 8003242:	f000 80db 	beq.w	80033fc <_dtoa_r+0x8bc>
 8003246:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003248:	2a01      	cmp	r2, #1
 800324a:	f300 80bf 	bgt.w	80033cc <_dtoa_r+0x88c>
 800324e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8003250:	2a00      	cmp	r2, #0
 8003252:	f000 80b7 	beq.w	80033c4 <_dtoa_r+0x884>
 8003256:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 800325a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 800325c:	4646      	mov	r6, r8
 800325e:	9a08      	ldr	r2, [sp, #32]
 8003260:	2101      	movs	r1, #1
 8003262:	441a      	add	r2, r3
 8003264:	4658      	mov	r0, fp
 8003266:	4498      	add	r8, r3
 8003268:	9208      	str	r2, [sp, #32]
 800326a:	f000 fc21 	bl	8003ab0 <__i2b>
 800326e:	4605      	mov	r5, r0
 8003270:	b15e      	cbz	r6, 800328a <_dtoa_r+0x74a>
 8003272:	9b08      	ldr	r3, [sp, #32]
 8003274:	2b00      	cmp	r3, #0
 8003276:	dd08      	ble.n	800328a <_dtoa_r+0x74a>
 8003278:	42b3      	cmp	r3, r6
 800327a:	9a08      	ldr	r2, [sp, #32]
 800327c:	bfa8      	it	ge
 800327e:	4633      	movge	r3, r6
 8003280:	eba8 0803 	sub.w	r8, r8, r3
 8003284:	1af6      	subs	r6, r6, r3
 8003286:	1ad3      	subs	r3, r2, r3
 8003288:	9308      	str	r3, [sp, #32]
 800328a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800328c:	b1f3      	cbz	r3, 80032cc <_dtoa_r+0x78c>
 800328e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003290:	2b00      	cmp	r3, #0
 8003292:	f000 80b7 	beq.w	8003404 <_dtoa_r+0x8c4>
 8003296:	b18c      	cbz	r4, 80032bc <_dtoa_r+0x77c>
 8003298:	4629      	mov	r1, r5
 800329a:	4622      	mov	r2, r4
 800329c:	4658      	mov	r0, fp
 800329e:	f000 fcc7 	bl	8003c30 <__pow5mult>
 80032a2:	464a      	mov	r2, r9
 80032a4:	4601      	mov	r1, r0
 80032a6:	4605      	mov	r5, r0
 80032a8:	4658      	mov	r0, fp
 80032aa:	f000 fc17 	bl	8003adc <__multiply>
 80032ae:	4649      	mov	r1, r9
 80032b0:	9004      	str	r0, [sp, #16]
 80032b2:	4658      	mov	r0, fp
 80032b4:	f000 fb48 	bl	8003948 <_Bfree>
 80032b8:	9b04      	ldr	r3, [sp, #16]
 80032ba:	4699      	mov	r9, r3
 80032bc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80032be:	1b1a      	subs	r2, r3, r4
 80032c0:	d004      	beq.n	80032cc <_dtoa_r+0x78c>
 80032c2:	4649      	mov	r1, r9
 80032c4:	4658      	mov	r0, fp
 80032c6:	f000 fcb3 	bl	8003c30 <__pow5mult>
 80032ca:	4681      	mov	r9, r0
 80032cc:	2101      	movs	r1, #1
 80032ce:	4658      	mov	r0, fp
 80032d0:	f000 fbee 	bl	8003ab0 <__i2b>
 80032d4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80032d6:	4604      	mov	r4, r0
 80032d8:	2b00      	cmp	r3, #0
 80032da:	f000 81cf 	beq.w	800367c <_dtoa_r+0xb3c>
 80032de:	461a      	mov	r2, r3
 80032e0:	4601      	mov	r1, r0
 80032e2:	4658      	mov	r0, fp
 80032e4:	f000 fca4 	bl	8003c30 <__pow5mult>
 80032e8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80032ea:	2b01      	cmp	r3, #1
 80032ec:	4604      	mov	r4, r0
 80032ee:	f300 8095 	bgt.w	800341c <_dtoa_r+0x8dc>
 80032f2:	9b02      	ldr	r3, [sp, #8]
 80032f4:	2b00      	cmp	r3, #0
 80032f6:	f040 8087 	bne.w	8003408 <_dtoa_r+0x8c8>
 80032fa:	9b03      	ldr	r3, [sp, #12]
 80032fc:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003300:	2b00      	cmp	r3, #0
 8003302:	f040 8089 	bne.w	8003418 <_dtoa_r+0x8d8>
 8003306:	9b03      	ldr	r3, [sp, #12]
 8003308:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 800330c:	0d1b      	lsrs	r3, r3, #20
 800330e:	051b      	lsls	r3, r3, #20
 8003310:	b12b      	cbz	r3, 800331e <_dtoa_r+0x7de>
 8003312:	9b08      	ldr	r3, [sp, #32]
 8003314:	3301      	adds	r3, #1
 8003316:	9308      	str	r3, [sp, #32]
 8003318:	f108 0801 	add.w	r8, r8, #1
 800331c:	2301      	movs	r3, #1
 800331e:	930a      	str	r3, [sp, #40]	@ 0x28
 8003320:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8003322:	2b00      	cmp	r3, #0
 8003324:	f000 81b0 	beq.w	8003688 <_dtoa_r+0xb48>
 8003328:	6923      	ldr	r3, [r4, #16]
 800332a:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800332e:	6918      	ldr	r0, [r3, #16]
 8003330:	f000 fb72 	bl	8003a18 <__hi0bits>
 8003334:	f1c0 0020 	rsb	r0, r0, #32
 8003338:	9b08      	ldr	r3, [sp, #32]
 800333a:	4418      	add	r0, r3
 800333c:	f010 001f 	ands.w	r0, r0, #31
 8003340:	d077      	beq.n	8003432 <_dtoa_r+0x8f2>
 8003342:	f1c0 0320 	rsb	r3, r0, #32
 8003346:	2b04      	cmp	r3, #4
 8003348:	dd6b      	ble.n	8003422 <_dtoa_r+0x8e2>
 800334a:	9b08      	ldr	r3, [sp, #32]
 800334c:	f1c0 001c 	rsb	r0, r0, #28
 8003350:	4403      	add	r3, r0
 8003352:	4480      	add	r8, r0
 8003354:	4406      	add	r6, r0
 8003356:	9308      	str	r3, [sp, #32]
 8003358:	f1b8 0f00 	cmp.w	r8, #0
 800335c:	dd05      	ble.n	800336a <_dtoa_r+0x82a>
 800335e:	4649      	mov	r1, r9
 8003360:	4642      	mov	r2, r8
 8003362:	4658      	mov	r0, fp
 8003364:	f000 fcbe 	bl	8003ce4 <__lshift>
 8003368:	4681      	mov	r9, r0
 800336a:	9b08      	ldr	r3, [sp, #32]
 800336c:	2b00      	cmp	r3, #0
 800336e:	dd05      	ble.n	800337c <_dtoa_r+0x83c>
 8003370:	4621      	mov	r1, r4
 8003372:	461a      	mov	r2, r3
 8003374:	4658      	mov	r0, fp
 8003376:	f000 fcb5 	bl	8003ce4 <__lshift>
 800337a:	4604      	mov	r4, r0
 800337c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800337e:	2b00      	cmp	r3, #0
 8003380:	d059      	beq.n	8003436 <_dtoa_r+0x8f6>
 8003382:	4621      	mov	r1, r4
 8003384:	4648      	mov	r0, r9
 8003386:	f000 fd19 	bl	8003dbc <__mcmp>
 800338a:	2800      	cmp	r0, #0
 800338c:	da53      	bge.n	8003436 <_dtoa_r+0x8f6>
 800338e:	1e7b      	subs	r3, r7, #1
 8003390:	9304      	str	r3, [sp, #16]
 8003392:	4649      	mov	r1, r9
 8003394:	2300      	movs	r3, #0
 8003396:	220a      	movs	r2, #10
 8003398:	4658      	mov	r0, fp
 800339a:	f000 faf7 	bl	800398c <__multadd>
 800339e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80033a0:	4681      	mov	r9, r0
 80033a2:	2b00      	cmp	r3, #0
 80033a4:	f000 8172 	beq.w	800368c <_dtoa_r+0xb4c>
 80033a8:	2300      	movs	r3, #0
 80033aa:	4629      	mov	r1, r5
 80033ac:	220a      	movs	r2, #10
 80033ae:	4658      	mov	r0, fp
 80033b0:	f000 faec 	bl	800398c <__multadd>
 80033b4:	9b00      	ldr	r3, [sp, #0]
 80033b6:	2b00      	cmp	r3, #0
 80033b8:	4605      	mov	r5, r0
 80033ba:	dc67      	bgt.n	800348c <_dtoa_r+0x94c>
 80033bc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80033be:	2b02      	cmp	r3, #2
 80033c0:	dc41      	bgt.n	8003446 <_dtoa_r+0x906>
 80033c2:	e063      	b.n	800348c <_dtoa_r+0x94c>
 80033c4:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80033c6:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 80033ca:	e746      	b.n	800325a <_dtoa_r+0x71a>
 80033cc:	9b07      	ldr	r3, [sp, #28]
 80033ce:	1e5c      	subs	r4, r3, #1
 80033d0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80033d2:	42a3      	cmp	r3, r4
 80033d4:	bfbf      	itttt	lt
 80033d6:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 80033d8:	9a0f      	ldrlt	r2, [sp, #60]	@ 0x3c
 80033da:	940a      	strlt	r4, [sp, #40]	@ 0x28
 80033dc:	1ae3      	sublt	r3, r4, r3
 80033de:	bfb4      	ite	lt
 80033e0:	18d2      	addlt	r2, r2, r3
 80033e2:	1b1c      	subge	r4, r3, r4
 80033e4:	9b07      	ldr	r3, [sp, #28]
 80033e6:	bfbc      	itt	lt
 80033e8:	920f      	strlt	r2, [sp, #60]	@ 0x3c
 80033ea:	2400      	movlt	r4, #0
 80033ec:	2b00      	cmp	r3, #0
 80033ee:	bfb5      	itete	lt
 80033f0:	eba8 0603 	sublt.w	r6, r8, r3
 80033f4:	9b07      	ldrge	r3, [sp, #28]
 80033f6:	2300      	movlt	r3, #0
 80033f8:	4646      	movge	r6, r8
 80033fa:	e730      	b.n	800325e <_dtoa_r+0x71e>
 80033fc:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80033fe:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8003400:	4646      	mov	r6, r8
 8003402:	e735      	b.n	8003270 <_dtoa_r+0x730>
 8003404:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8003406:	e75c      	b.n	80032c2 <_dtoa_r+0x782>
 8003408:	2300      	movs	r3, #0
 800340a:	e788      	b.n	800331e <_dtoa_r+0x7de>
 800340c:	3fe00000 	.word	0x3fe00000
 8003410:	40240000 	.word	0x40240000
 8003414:	40140000 	.word	0x40140000
 8003418:	9b02      	ldr	r3, [sp, #8]
 800341a:	e780      	b.n	800331e <_dtoa_r+0x7de>
 800341c:	2300      	movs	r3, #0
 800341e:	930a      	str	r3, [sp, #40]	@ 0x28
 8003420:	e782      	b.n	8003328 <_dtoa_r+0x7e8>
 8003422:	d099      	beq.n	8003358 <_dtoa_r+0x818>
 8003424:	9a08      	ldr	r2, [sp, #32]
 8003426:	331c      	adds	r3, #28
 8003428:	441a      	add	r2, r3
 800342a:	4498      	add	r8, r3
 800342c:	441e      	add	r6, r3
 800342e:	9208      	str	r2, [sp, #32]
 8003430:	e792      	b.n	8003358 <_dtoa_r+0x818>
 8003432:	4603      	mov	r3, r0
 8003434:	e7f6      	b.n	8003424 <_dtoa_r+0x8e4>
 8003436:	9b07      	ldr	r3, [sp, #28]
 8003438:	9704      	str	r7, [sp, #16]
 800343a:	2b00      	cmp	r3, #0
 800343c:	dc20      	bgt.n	8003480 <_dtoa_r+0x940>
 800343e:	9300      	str	r3, [sp, #0]
 8003440:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003442:	2b02      	cmp	r3, #2
 8003444:	dd1e      	ble.n	8003484 <_dtoa_r+0x944>
 8003446:	9b00      	ldr	r3, [sp, #0]
 8003448:	2b00      	cmp	r3, #0
 800344a:	f47f aec0 	bne.w	80031ce <_dtoa_r+0x68e>
 800344e:	4621      	mov	r1, r4
 8003450:	2205      	movs	r2, #5
 8003452:	4658      	mov	r0, fp
 8003454:	f000 fa9a 	bl	800398c <__multadd>
 8003458:	4601      	mov	r1, r0
 800345a:	4604      	mov	r4, r0
 800345c:	4648      	mov	r0, r9
 800345e:	f000 fcad 	bl	8003dbc <__mcmp>
 8003462:	2800      	cmp	r0, #0
 8003464:	f77f aeb3 	ble.w	80031ce <_dtoa_r+0x68e>
 8003468:	4656      	mov	r6, sl
 800346a:	2331      	movs	r3, #49	@ 0x31
 800346c:	f806 3b01 	strb.w	r3, [r6], #1
 8003470:	9b04      	ldr	r3, [sp, #16]
 8003472:	3301      	adds	r3, #1
 8003474:	9304      	str	r3, [sp, #16]
 8003476:	e6ae      	b.n	80031d6 <_dtoa_r+0x696>
 8003478:	9c07      	ldr	r4, [sp, #28]
 800347a:	9704      	str	r7, [sp, #16]
 800347c:	4625      	mov	r5, r4
 800347e:	e7f3      	b.n	8003468 <_dtoa_r+0x928>
 8003480:	9b07      	ldr	r3, [sp, #28]
 8003482:	9300      	str	r3, [sp, #0]
 8003484:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003486:	2b00      	cmp	r3, #0
 8003488:	f000 8104 	beq.w	8003694 <_dtoa_r+0xb54>
 800348c:	2e00      	cmp	r6, #0
 800348e:	dd05      	ble.n	800349c <_dtoa_r+0x95c>
 8003490:	4629      	mov	r1, r5
 8003492:	4632      	mov	r2, r6
 8003494:	4658      	mov	r0, fp
 8003496:	f000 fc25 	bl	8003ce4 <__lshift>
 800349a:	4605      	mov	r5, r0
 800349c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800349e:	2b00      	cmp	r3, #0
 80034a0:	d05a      	beq.n	8003558 <_dtoa_r+0xa18>
 80034a2:	6869      	ldr	r1, [r5, #4]
 80034a4:	4658      	mov	r0, fp
 80034a6:	f000 fa0f 	bl	80038c8 <_Balloc>
 80034aa:	4606      	mov	r6, r0
 80034ac:	b928      	cbnz	r0, 80034ba <_dtoa_r+0x97a>
 80034ae:	4b84      	ldr	r3, [pc, #528]	@ (80036c0 <_dtoa_r+0xb80>)
 80034b0:	4602      	mov	r2, r0
 80034b2:	f240 21ef 	movw	r1, #751	@ 0x2ef
 80034b6:	f7ff bb5a 	b.w	8002b6e <_dtoa_r+0x2e>
 80034ba:	692a      	ldr	r2, [r5, #16]
 80034bc:	3202      	adds	r2, #2
 80034be:	0092      	lsls	r2, r2, #2
 80034c0:	f105 010c 	add.w	r1, r5, #12
 80034c4:	300c      	adds	r0, #12
 80034c6:	f000 fe3d 	bl	8004144 <memcpy>
 80034ca:	2201      	movs	r2, #1
 80034cc:	4631      	mov	r1, r6
 80034ce:	4658      	mov	r0, fp
 80034d0:	f000 fc08 	bl	8003ce4 <__lshift>
 80034d4:	f10a 0301 	add.w	r3, sl, #1
 80034d8:	9307      	str	r3, [sp, #28]
 80034da:	9b00      	ldr	r3, [sp, #0]
 80034dc:	4453      	add	r3, sl
 80034de:	930b      	str	r3, [sp, #44]	@ 0x2c
 80034e0:	9b02      	ldr	r3, [sp, #8]
 80034e2:	f003 0301 	and.w	r3, r3, #1
 80034e6:	462f      	mov	r7, r5
 80034e8:	930a      	str	r3, [sp, #40]	@ 0x28
 80034ea:	4605      	mov	r5, r0
 80034ec:	9b07      	ldr	r3, [sp, #28]
 80034ee:	4621      	mov	r1, r4
 80034f0:	3b01      	subs	r3, #1
 80034f2:	4648      	mov	r0, r9
 80034f4:	9300      	str	r3, [sp, #0]
 80034f6:	f7ff fa9a 	bl	8002a2e <quorem>
 80034fa:	4639      	mov	r1, r7
 80034fc:	9002      	str	r0, [sp, #8]
 80034fe:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8003502:	4648      	mov	r0, r9
 8003504:	f000 fc5a 	bl	8003dbc <__mcmp>
 8003508:	462a      	mov	r2, r5
 800350a:	9008      	str	r0, [sp, #32]
 800350c:	4621      	mov	r1, r4
 800350e:	4658      	mov	r0, fp
 8003510:	f000 fc70 	bl	8003df4 <__mdiff>
 8003514:	68c2      	ldr	r2, [r0, #12]
 8003516:	4606      	mov	r6, r0
 8003518:	bb02      	cbnz	r2, 800355c <_dtoa_r+0xa1c>
 800351a:	4601      	mov	r1, r0
 800351c:	4648      	mov	r0, r9
 800351e:	f000 fc4d 	bl	8003dbc <__mcmp>
 8003522:	4602      	mov	r2, r0
 8003524:	4631      	mov	r1, r6
 8003526:	4658      	mov	r0, fp
 8003528:	920e      	str	r2, [sp, #56]	@ 0x38
 800352a:	f000 fa0d 	bl	8003948 <_Bfree>
 800352e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003530:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8003532:	9e07      	ldr	r6, [sp, #28]
 8003534:	ea43 0102 	orr.w	r1, r3, r2
 8003538:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800353a:	4319      	orrs	r1, r3
 800353c:	d110      	bne.n	8003560 <_dtoa_r+0xa20>
 800353e:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8003542:	d029      	beq.n	8003598 <_dtoa_r+0xa58>
 8003544:	9b08      	ldr	r3, [sp, #32]
 8003546:	2b00      	cmp	r3, #0
 8003548:	dd02      	ble.n	8003550 <_dtoa_r+0xa10>
 800354a:	9b02      	ldr	r3, [sp, #8]
 800354c:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 8003550:	9b00      	ldr	r3, [sp, #0]
 8003552:	f883 8000 	strb.w	r8, [r3]
 8003556:	e63f      	b.n	80031d8 <_dtoa_r+0x698>
 8003558:	4628      	mov	r0, r5
 800355a:	e7bb      	b.n	80034d4 <_dtoa_r+0x994>
 800355c:	2201      	movs	r2, #1
 800355e:	e7e1      	b.n	8003524 <_dtoa_r+0x9e4>
 8003560:	9b08      	ldr	r3, [sp, #32]
 8003562:	2b00      	cmp	r3, #0
 8003564:	db04      	blt.n	8003570 <_dtoa_r+0xa30>
 8003566:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8003568:	430b      	orrs	r3, r1
 800356a:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800356c:	430b      	orrs	r3, r1
 800356e:	d120      	bne.n	80035b2 <_dtoa_r+0xa72>
 8003570:	2a00      	cmp	r2, #0
 8003572:	dded      	ble.n	8003550 <_dtoa_r+0xa10>
 8003574:	4649      	mov	r1, r9
 8003576:	2201      	movs	r2, #1
 8003578:	4658      	mov	r0, fp
 800357a:	f000 fbb3 	bl	8003ce4 <__lshift>
 800357e:	4621      	mov	r1, r4
 8003580:	4681      	mov	r9, r0
 8003582:	f000 fc1b 	bl	8003dbc <__mcmp>
 8003586:	2800      	cmp	r0, #0
 8003588:	dc03      	bgt.n	8003592 <_dtoa_r+0xa52>
 800358a:	d1e1      	bne.n	8003550 <_dtoa_r+0xa10>
 800358c:	f018 0f01 	tst.w	r8, #1
 8003590:	d0de      	beq.n	8003550 <_dtoa_r+0xa10>
 8003592:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8003596:	d1d8      	bne.n	800354a <_dtoa_r+0xa0a>
 8003598:	9a00      	ldr	r2, [sp, #0]
 800359a:	2339      	movs	r3, #57	@ 0x39
 800359c:	7013      	strb	r3, [r2, #0]
 800359e:	4633      	mov	r3, r6
 80035a0:	461e      	mov	r6, r3
 80035a2:	3b01      	subs	r3, #1
 80035a4:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 80035a8:	2a39      	cmp	r2, #57	@ 0x39
 80035aa:	d052      	beq.n	8003652 <_dtoa_r+0xb12>
 80035ac:	3201      	adds	r2, #1
 80035ae:	701a      	strb	r2, [r3, #0]
 80035b0:	e612      	b.n	80031d8 <_dtoa_r+0x698>
 80035b2:	2a00      	cmp	r2, #0
 80035b4:	dd07      	ble.n	80035c6 <_dtoa_r+0xa86>
 80035b6:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 80035ba:	d0ed      	beq.n	8003598 <_dtoa_r+0xa58>
 80035bc:	9a00      	ldr	r2, [sp, #0]
 80035be:	f108 0301 	add.w	r3, r8, #1
 80035c2:	7013      	strb	r3, [r2, #0]
 80035c4:	e608      	b.n	80031d8 <_dtoa_r+0x698>
 80035c6:	9b07      	ldr	r3, [sp, #28]
 80035c8:	9a07      	ldr	r2, [sp, #28]
 80035ca:	f803 8c01 	strb.w	r8, [r3, #-1]
 80035ce:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80035d0:	4293      	cmp	r3, r2
 80035d2:	d028      	beq.n	8003626 <_dtoa_r+0xae6>
 80035d4:	4649      	mov	r1, r9
 80035d6:	2300      	movs	r3, #0
 80035d8:	220a      	movs	r2, #10
 80035da:	4658      	mov	r0, fp
 80035dc:	f000 f9d6 	bl	800398c <__multadd>
 80035e0:	42af      	cmp	r7, r5
 80035e2:	4681      	mov	r9, r0
 80035e4:	f04f 0300 	mov.w	r3, #0
 80035e8:	f04f 020a 	mov.w	r2, #10
 80035ec:	4639      	mov	r1, r7
 80035ee:	4658      	mov	r0, fp
 80035f0:	d107      	bne.n	8003602 <_dtoa_r+0xac2>
 80035f2:	f000 f9cb 	bl	800398c <__multadd>
 80035f6:	4607      	mov	r7, r0
 80035f8:	4605      	mov	r5, r0
 80035fa:	9b07      	ldr	r3, [sp, #28]
 80035fc:	3301      	adds	r3, #1
 80035fe:	9307      	str	r3, [sp, #28]
 8003600:	e774      	b.n	80034ec <_dtoa_r+0x9ac>
 8003602:	f000 f9c3 	bl	800398c <__multadd>
 8003606:	4629      	mov	r1, r5
 8003608:	4607      	mov	r7, r0
 800360a:	2300      	movs	r3, #0
 800360c:	220a      	movs	r2, #10
 800360e:	4658      	mov	r0, fp
 8003610:	f000 f9bc 	bl	800398c <__multadd>
 8003614:	4605      	mov	r5, r0
 8003616:	e7f0      	b.n	80035fa <_dtoa_r+0xaba>
 8003618:	9b00      	ldr	r3, [sp, #0]
 800361a:	2b00      	cmp	r3, #0
 800361c:	bfcc      	ite	gt
 800361e:	461e      	movgt	r6, r3
 8003620:	2601      	movle	r6, #1
 8003622:	4456      	add	r6, sl
 8003624:	2700      	movs	r7, #0
 8003626:	4649      	mov	r1, r9
 8003628:	2201      	movs	r2, #1
 800362a:	4658      	mov	r0, fp
 800362c:	f000 fb5a 	bl	8003ce4 <__lshift>
 8003630:	4621      	mov	r1, r4
 8003632:	4681      	mov	r9, r0
 8003634:	f000 fbc2 	bl	8003dbc <__mcmp>
 8003638:	2800      	cmp	r0, #0
 800363a:	dcb0      	bgt.n	800359e <_dtoa_r+0xa5e>
 800363c:	d102      	bne.n	8003644 <_dtoa_r+0xb04>
 800363e:	f018 0f01 	tst.w	r8, #1
 8003642:	d1ac      	bne.n	800359e <_dtoa_r+0xa5e>
 8003644:	4633      	mov	r3, r6
 8003646:	461e      	mov	r6, r3
 8003648:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800364c:	2a30      	cmp	r2, #48	@ 0x30
 800364e:	d0fa      	beq.n	8003646 <_dtoa_r+0xb06>
 8003650:	e5c2      	b.n	80031d8 <_dtoa_r+0x698>
 8003652:	459a      	cmp	sl, r3
 8003654:	d1a4      	bne.n	80035a0 <_dtoa_r+0xa60>
 8003656:	9b04      	ldr	r3, [sp, #16]
 8003658:	3301      	adds	r3, #1
 800365a:	9304      	str	r3, [sp, #16]
 800365c:	2331      	movs	r3, #49	@ 0x31
 800365e:	f88a 3000 	strb.w	r3, [sl]
 8003662:	e5b9      	b.n	80031d8 <_dtoa_r+0x698>
 8003664:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8003666:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 80036c4 <_dtoa_r+0xb84>
 800366a:	b11b      	cbz	r3, 8003674 <_dtoa_r+0xb34>
 800366c:	f10a 0308 	add.w	r3, sl, #8
 8003670:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8003672:	6013      	str	r3, [r2, #0]
 8003674:	4650      	mov	r0, sl
 8003676:	b019      	add	sp, #100	@ 0x64
 8003678:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800367c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800367e:	2b01      	cmp	r3, #1
 8003680:	f77f ae37 	ble.w	80032f2 <_dtoa_r+0x7b2>
 8003684:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8003686:	930a      	str	r3, [sp, #40]	@ 0x28
 8003688:	2001      	movs	r0, #1
 800368a:	e655      	b.n	8003338 <_dtoa_r+0x7f8>
 800368c:	9b00      	ldr	r3, [sp, #0]
 800368e:	2b00      	cmp	r3, #0
 8003690:	f77f aed6 	ble.w	8003440 <_dtoa_r+0x900>
 8003694:	4656      	mov	r6, sl
 8003696:	4621      	mov	r1, r4
 8003698:	4648      	mov	r0, r9
 800369a:	f7ff f9c8 	bl	8002a2e <quorem>
 800369e:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 80036a2:	f806 8b01 	strb.w	r8, [r6], #1
 80036a6:	9b00      	ldr	r3, [sp, #0]
 80036a8:	eba6 020a 	sub.w	r2, r6, sl
 80036ac:	4293      	cmp	r3, r2
 80036ae:	ddb3      	ble.n	8003618 <_dtoa_r+0xad8>
 80036b0:	4649      	mov	r1, r9
 80036b2:	2300      	movs	r3, #0
 80036b4:	220a      	movs	r2, #10
 80036b6:	4658      	mov	r0, fp
 80036b8:	f000 f968 	bl	800398c <__multadd>
 80036bc:	4681      	mov	r9, r0
 80036be:	e7ea      	b.n	8003696 <_dtoa_r+0xb56>
 80036c0:	08004848 	.word	0x08004848
 80036c4:	080047cc 	.word	0x080047cc

080036c8 <_free_r>:
 80036c8:	b538      	push	{r3, r4, r5, lr}
 80036ca:	4605      	mov	r5, r0
 80036cc:	2900      	cmp	r1, #0
 80036ce:	d041      	beq.n	8003754 <_free_r+0x8c>
 80036d0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80036d4:	1f0c      	subs	r4, r1, #4
 80036d6:	2b00      	cmp	r3, #0
 80036d8:	bfb8      	it	lt
 80036da:	18e4      	addlt	r4, r4, r3
 80036dc:	f000 f8e8 	bl	80038b0 <__malloc_lock>
 80036e0:	4a1d      	ldr	r2, [pc, #116]	@ (8003758 <_free_r+0x90>)
 80036e2:	6813      	ldr	r3, [r2, #0]
 80036e4:	b933      	cbnz	r3, 80036f4 <_free_r+0x2c>
 80036e6:	6063      	str	r3, [r4, #4]
 80036e8:	6014      	str	r4, [r2, #0]
 80036ea:	4628      	mov	r0, r5
 80036ec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80036f0:	f000 b8e4 	b.w	80038bc <__malloc_unlock>
 80036f4:	42a3      	cmp	r3, r4
 80036f6:	d908      	bls.n	800370a <_free_r+0x42>
 80036f8:	6820      	ldr	r0, [r4, #0]
 80036fa:	1821      	adds	r1, r4, r0
 80036fc:	428b      	cmp	r3, r1
 80036fe:	bf01      	itttt	eq
 8003700:	6819      	ldreq	r1, [r3, #0]
 8003702:	685b      	ldreq	r3, [r3, #4]
 8003704:	1809      	addeq	r1, r1, r0
 8003706:	6021      	streq	r1, [r4, #0]
 8003708:	e7ed      	b.n	80036e6 <_free_r+0x1e>
 800370a:	461a      	mov	r2, r3
 800370c:	685b      	ldr	r3, [r3, #4]
 800370e:	b10b      	cbz	r3, 8003714 <_free_r+0x4c>
 8003710:	42a3      	cmp	r3, r4
 8003712:	d9fa      	bls.n	800370a <_free_r+0x42>
 8003714:	6811      	ldr	r1, [r2, #0]
 8003716:	1850      	adds	r0, r2, r1
 8003718:	42a0      	cmp	r0, r4
 800371a:	d10b      	bne.n	8003734 <_free_r+0x6c>
 800371c:	6820      	ldr	r0, [r4, #0]
 800371e:	4401      	add	r1, r0
 8003720:	1850      	adds	r0, r2, r1
 8003722:	4283      	cmp	r3, r0
 8003724:	6011      	str	r1, [r2, #0]
 8003726:	d1e0      	bne.n	80036ea <_free_r+0x22>
 8003728:	6818      	ldr	r0, [r3, #0]
 800372a:	685b      	ldr	r3, [r3, #4]
 800372c:	6053      	str	r3, [r2, #4]
 800372e:	4408      	add	r0, r1
 8003730:	6010      	str	r0, [r2, #0]
 8003732:	e7da      	b.n	80036ea <_free_r+0x22>
 8003734:	d902      	bls.n	800373c <_free_r+0x74>
 8003736:	230c      	movs	r3, #12
 8003738:	602b      	str	r3, [r5, #0]
 800373a:	e7d6      	b.n	80036ea <_free_r+0x22>
 800373c:	6820      	ldr	r0, [r4, #0]
 800373e:	1821      	adds	r1, r4, r0
 8003740:	428b      	cmp	r3, r1
 8003742:	bf04      	itt	eq
 8003744:	6819      	ldreq	r1, [r3, #0]
 8003746:	685b      	ldreq	r3, [r3, #4]
 8003748:	6063      	str	r3, [r4, #4]
 800374a:	bf04      	itt	eq
 800374c:	1809      	addeq	r1, r1, r0
 800374e:	6021      	streq	r1, [r4, #0]
 8003750:	6054      	str	r4, [r2, #4]
 8003752:	e7ca      	b.n	80036ea <_free_r+0x22>
 8003754:	bd38      	pop	{r3, r4, r5, pc}
 8003756:	bf00      	nop
 8003758:	2000033c 	.word	0x2000033c

0800375c <malloc>:
 800375c:	4b02      	ldr	r3, [pc, #8]	@ (8003768 <malloc+0xc>)
 800375e:	4601      	mov	r1, r0
 8003760:	6818      	ldr	r0, [r3, #0]
 8003762:	f000 b825 	b.w	80037b0 <_malloc_r>
 8003766:	bf00      	nop
 8003768:	20000014 	.word	0x20000014

0800376c <sbrk_aligned>:
 800376c:	b570      	push	{r4, r5, r6, lr}
 800376e:	4e0f      	ldr	r6, [pc, #60]	@ (80037ac <sbrk_aligned+0x40>)
 8003770:	460c      	mov	r4, r1
 8003772:	6831      	ldr	r1, [r6, #0]
 8003774:	4605      	mov	r5, r0
 8003776:	b911      	cbnz	r1, 800377e <sbrk_aligned+0x12>
 8003778:	f000 fcd4 	bl	8004124 <_sbrk_r>
 800377c:	6030      	str	r0, [r6, #0]
 800377e:	4621      	mov	r1, r4
 8003780:	4628      	mov	r0, r5
 8003782:	f000 fccf 	bl	8004124 <_sbrk_r>
 8003786:	1c43      	adds	r3, r0, #1
 8003788:	d103      	bne.n	8003792 <sbrk_aligned+0x26>
 800378a:	f04f 34ff 	mov.w	r4, #4294967295
 800378e:	4620      	mov	r0, r4
 8003790:	bd70      	pop	{r4, r5, r6, pc}
 8003792:	1cc4      	adds	r4, r0, #3
 8003794:	f024 0403 	bic.w	r4, r4, #3
 8003798:	42a0      	cmp	r0, r4
 800379a:	d0f8      	beq.n	800378e <sbrk_aligned+0x22>
 800379c:	1a21      	subs	r1, r4, r0
 800379e:	4628      	mov	r0, r5
 80037a0:	f000 fcc0 	bl	8004124 <_sbrk_r>
 80037a4:	3001      	adds	r0, #1
 80037a6:	d1f2      	bne.n	800378e <sbrk_aligned+0x22>
 80037a8:	e7ef      	b.n	800378a <sbrk_aligned+0x1e>
 80037aa:	bf00      	nop
 80037ac:	20000338 	.word	0x20000338

080037b0 <_malloc_r>:
 80037b0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80037b4:	1ccd      	adds	r5, r1, #3
 80037b6:	f025 0503 	bic.w	r5, r5, #3
 80037ba:	3508      	adds	r5, #8
 80037bc:	2d0c      	cmp	r5, #12
 80037be:	bf38      	it	cc
 80037c0:	250c      	movcc	r5, #12
 80037c2:	2d00      	cmp	r5, #0
 80037c4:	4606      	mov	r6, r0
 80037c6:	db01      	blt.n	80037cc <_malloc_r+0x1c>
 80037c8:	42a9      	cmp	r1, r5
 80037ca:	d904      	bls.n	80037d6 <_malloc_r+0x26>
 80037cc:	230c      	movs	r3, #12
 80037ce:	6033      	str	r3, [r6, #0]
 80037d0:	2000      	movs	r0, #0
 80037d2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80037d6:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80038ac <_malloc_r+0xfc>
 80037da:	f000 f869 	bl	80038b0 <__malloc_lock>
 80037de:	f8d8 3000 	ldr.w	r3, [r8]
 80037e2:	461c      	mov	r4, r3
 80037e4:	bb44      	cbnz	r4, 8003838 <_malloc_r+0x88>
 80037e6:	4629      	mov	r1, r5
 80037e8:	4630      	mov	r0, r6
 80037ea:	f7ff ffbf 	bl	800376c <sbrk_aligned>
 80037ee:	1c43      	adds	r3, r0, #1
 80037f0:	4604      	mov	r4, r0
 80037f2:	d158      	bne.n	80038a6 <_malloc_r+0xf6>
 80037f4:	f8d8 4000 	ldr.w	r4, [r8]
 80037f8:	4627      	mov	r7, r4
 80037fa:	2f00      	cmp	r7, #0
 80037fc:	d143      	bne.n	8003886 <_malloc_r+0xd6>
 80037fe:	2c00      	cmp	r4, #0
 8003800:	d04b      	beq.n	800389a <_malloc_r+0xea>
 8003802:	6823      	ldr	r3, [r4, #0]
 8003804:	4639      	mov	r1, r7
 8003806:	4630      	mov	r0, r6
 8003808:	eb04 0903 	add.w	r9, r4, r3
 800380c:	f000 fc8a 	bl	8004124 <_sbrk_r>
 8003810:	4581      	cmp	r9, r0
 8003812:	d142      	bne.n	800389a <_malloc_r+0xea>
 8003814:	6821      	ldr	r1, [r4, #0]
 8003816:	1a6d      	subs	r5, r5, r1
 8003818:	4629      	mov	r1, r5
 800381a:	4630      	mov	r0, r6
 800381c:	f7ff ffa6 	bl	800376c <sbrk_aligned>
 8003820:	3001      	adds	r0, #1
 8003822:	d03a      	beq.n	800389a <_malloc_r+0xea>
 8003824:	6823      	ldr	r3, [r4, #0]
 8003826:	442b      	add	r3, r5
 8003828:	6023      	str	r3, [r4, #0]
 800382a:	f8d8 3000 	ldr.w	r3, [r8]
 800382e:	685a      	ldr	r2, [r3, #4]
 8003830:	bb62      	cbnz	r2, 800388c <_malloc_r+0xdc>
 8003832:	f8c8 7000 	str.w	r7, [r8]
 8003836:	e00f      	b.n	8003858 <_malloc_r+0xa8>
 8003838:	6822      	ldr	r2, [r4, #0]
 800383a:	1b52      	subs	r2, r2, r5
 800383c:	d420      	bmi.n	8003880 <_malloc_r+0xd0>
 800383e:	2a0b      	cmp	r2, #11
 8003840:	d917      	bls.n	8003872 <_malloc_r+0xc2>
 8003842:	1961      	adds	r1, r4, r5
 8003844:	42a3      	cmp	r3, r4
 8003846:	6025      	str	r5, [r4, #0]
 8003848:	bf18      	it	ne
 800384a:	6059      	strne	r1, [r3, #4]
 800384c:	6863      	ldr	r3, [r4, #4]
 800384e:	bf08      	it	eq
 8003850:	f8c8 1000 	streq.w	r1, [r8]
 8003854:	5162      	str	r2, [r4, r5]
 8003856:	604b      	str	r3, [r1, #4]
 8003858:	4630      	mov	r0, r6
 800385a:	f000 f82f 	bl	80038bc <__malloc_unlock>
 800385e:	f104 000b 	add.w	r0, r4, #11
 8003862:	1d23      	adds	r3, r4, #4
 8003864:	f020 0007 	bic.w	r0, r0, #7
 8003868:	1ac2      	subs	r2, r0, r3
 800386a:	bf1c      	itt	ne
 800386c:	1a1b      	subne	r3, r3, r0
 800386e:	50a3      	strne	r3, [r4, r2]
 8003870:	e7af      	b.n	80037d2 <_malloc_r+0x22>
 8003872:	6862      	ldr	r2, [r4, #4]
 8003874:	42a3      	cmp	r3, r4
 8003876:	bf0c      	ite	eq
 8003878:	f8c8 2000 	streq.w	r2, [r8]
 800387c:	605a      	strne	r2, [r3, #4]
 800387e:	e7eb      	b.n	8003858 <_malloc_r+0xa8>
 8003880:	4623      	mov	r3, r4
 8003882:	6864      	ldr	r4, [r4, #4]
 8003884:	e7ae      	b.n	80037e4 <_malloc_r+0x34>
 8003886:	463c      	mov	r4, r7
 8003888:	687f      	ldr	r7, [r7, #4]
 800388a:	e7b6      	b.n	80037fa <_malloc_r+0x4a>
 800388c:	461a      	mov	r2, r3
 800388e:	685b      	ldr	r3, [r3, #4]
 8003890:	42a3      	cmp	r3, r4
 8003892:	d1fb      	bne.n	800388c <_malloc_r+0xdc>
 8003894:	2300      	movs	r3, #0
 8003896:	6053      	str	r3, [r2, #4]
 8003898:	e7de      	b.n	8003858 <_malloc_r+0xa8>
 800389a:	230c      	movs	r3, #12
 800389c:	6033      	str	r3, [r6, #0]
 800389e:	4630      	mov	r0, r6
 80038a0:	f000 f80c 	bl	80038bc <__malloc_unlock>
 80038a4:	e794      	b.n	80037d0 <_malloc_r+0x20>
 80038a6:	6005      	str	r5, [r0, #0]
 80038a8:	e7d6      	b.n	8003858 <_malloc_r+0xa8>
 80038aa:	bf00      	nop
 80038ac:	2000033c 	.word	0x2000033c

080038b0 <__malloc_lock>:
 80038b0:	4801      	ldr	r0, [pc, #4]	@ (80038b8 <__malloc_lock+0x8>)
 80038b2:	f7ff b8ba 	b.w	8002a2a <__retarget_lock_acquire_recursive>
 80038b6:	bf00      	nop
 80038b8:	20000334 	.word	0x20000334

080038bc <__malloc_unlock>:
 80038bc:	4801      	ldr	r0, [pc, #4]	@ (80038c4 <__malloc_unlock+0x8>)
 80038be:	f7ff b8b5 	b.w	8002a2c <__retarget_lock_release_recursive>
 80038c2:	bf00      	nop
 80038c4:	20000334 	.word	0x20000334

080038c8 <_Balloc>:
 80038c8:	b570      	push	{r4, r5, r6, lr}
 80038ca:	69c6      	ldr	r6, [r0, #28]
 80038cc:	4604      	mov	r4, r0
 80038ce:	460d      	mov	r5, r1
 80038d0:	b976      	cbnz	r6, 80038f0 <_Balloc+0x28>
 80038d2:	2010      	movs	r0, #16
 80038d4:	f7ff ff42 	bl	800375c <malloc>
 80038d8:	4602      	mov	r2, r0
 80038da:	61e0      	str	r0, [r4, #28]
 80038dc:	b920      	cbnz	r0, 80038e8 <_Balloc+0x20>
 80038de:	4b18      	ldr	r3, [pc, #96]	@ (8003940 <_Balloc+0x78>)
 80038e0:	4818      	ldr	r0, [pc, #96]	@ (8003944 <_Balloc+0x7c>)
 80038e2:	216b      	movs	r1, #107	@ 0x6b
 80038e4:	f000 fc3c 	bl	8004160 <__assert_func>
 80038e8:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80038ec:	6006      	str	r6, [r0, #0]
 80038ee:	60c6      	str	r6, [r0, #12]
 80038f0:	69e6      	ldr	r6, [r4, #28]
 80038f2:	68f3      	ldr	r3, [r6, #12]
 80038f4:	b183      	cbz	r3, 8003918 <_Balloc+0x50>
 80038f6:	69e3      	ldr	r3, [r4, #28]
 80038f8:	68db      	ldr	r3, [r3, #12]
 80038fa:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 80038fe:	b9b8      	cbnz	r0, 8003930 <_Balloc+0x68>
 8003900:	2101      	movs	r1, #1
 8003902:	fa01 f605 	lsl.w	r6, r1, r5
 8003906:	1d72      	adds	r2, r6, #5
 8003908:	0092      	lsls	r2, r2, #2
 800390a:	4620      	mov	r0, r4
 800390c:	f000 fc46 	bl	800419c <_calloc_r>
 8003910:	b160      	cbz	r0, 800392c <_Balloc+0x64>
 8003912:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8003916:	e00e      	b.n	8003936 <_Balloc+0x6e>
 8003918:	2221      	movs	r2, #33	@ 0x21
 800391a:	2104      	movs	r1, #4
 800391c:	4620      	mov	r0, r4
 800391e:	f000 fc3d 	bl	800419c <_calloc_r>
 8003922:	69e3      	ldr	r3, [r4, #28]
 8003924:	60f0      	str	r0, [r6, #12]
 8003926:	68db      	ldr	r3, [r3, #12]
 8003928:	2b00      	cmp	r3, #0
 800392a:	d1e4      	bne.n	80038f6 <_Balloc+0x2e>
 800392c:	2000      	movs	r0, #0
 800392e:	bd70      	pop	{r4, r5, r6, pc}
 8003930:	6802      	ldr	r2, [r0, #0]
 8003932:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8003936:	2300      	movs	r3, #0
 8003938:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800393c:	e7f7      	b.n	800392e <_Balloc+0x66>
 800393e:	bf00      	nop
 8003940:	080047d9 	.word	0x080047d9
 8003944:	08004859 	.word	0x08004859

08003948 <_Bfree>:
 8003948:	b570      	push	{r4, r5, r6, lr}
 800394a:	69c6      	ldr	r6, [r0, #28]
 800394c:	4605      	mov	r5, r0
 800394e:	460c      	mov	r4, r1
 8003950:	b976      	cbnz	r6, 8003970 <_Bfree+0x28>
 8003952:	2010      	movs	r0, #16
 8003954:	f7ff ff02 	bl	800375c <malloc>
 8003958:	4602      	mov	r2, r0
 800395a:	61e8      	str	r0, [r5, #28]
 800395c:	b920      	cbnz	r0, 8003968 <_Bfree+0x20>
 800395e:	4b09      	ldr	r3, [pc, #36]	@ (8003984 <_Bfree+0x3c>)
 8003960:	4809      	ldr	r0, [pc, #36]	@ (8003988 <_Bfree+0x40>)
 8003962:	218f      	movs	r1, #143	@ 0x8f
 8003964:	f000 fbfc 	bl	8004160 <__assert_func>
 8003968:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800396c:	6006      	str	r6, [r0, #0]
 800396e:	60c6      	str	r6, [r0, #12]
 8003970:	b13c      	cbz	r4, 8003982 <_Bfree+0x3a>
 8003972:	69eb      	ldr	r3, [r5, #28]
 8003974:	6862      	ldr	r2, [r4, #4]
 8003976:	68db      	ldr	r3, [r3, #12]
 8003978:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800397c:	6021      	str	r1, [r4, #0]
 800397e:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8003982:	bd70      	pop	{r4, r5, r6, pc}
 8003984:	080047d9 	.word	0x080047d9
 8003988:	08004859 	.word	0x08004859

0800398c <__multadd>:
 800398c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003990:	690d      	ldr	r5, [r1, #16]
 8003992:	4607      	mov	r7, r0
 8003994:	460c      	mov	r4, r1
 8003996:	461e      	mov	r6, r3
 8003998:	f101 0c14 	add.w	ip, r1, #20
 800399c:	2000      	movs	r0, #0
 800399e:	f8dc 3000 	ldr.w	r3, [ip]
 80039a2:	b299      	uxth	r1, r3
 80039a4:	fb02 6101 	mla	r1, r2, r1, r6
 80039a8:	0c1e      	lsrs	r6, r3, #16
 80039aa:	0c0b      	lsrs	r3, r1, #16
 80039ac:	fb02 3306 	mla	r3, r2, r6, r3
 80039b0:	b289      	uxth	r1, r1
 80039b2:	3001      	adds	r0, #1
 80039b4:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 80039b8:	4285      	cmp	r5, r0
 80039ba:	f84c 1b04 	str.w	r1, [ip], #4
 80039be:	ea4f 4613 	mov.w	r6, r3, lsr #16
 80039c2:	dcec      	bgt.n	800399e <__multadd+0x12>
 80039c4:	b30e      	cbz	r6, 8003a0a <__multadd+0x7e>
 80039c6:	68a3      	ldr	r3, [r4, #8]
 80039c8:	42ab      	cmp	r3, r5
 80039ca:	dc19      	bgt.n	8003a00 <__multadd+0x74>
 80039cc:	6861      	ldr	r1, [r4, #4]
 80039ce:	4638      	mov	r0, r7
 80039d0:	3101      	adds	r1, #1
 80039d2:	f7ff ff79 	bl	80038c8 <_Balloc>
 80039d6:	4680      	mov	r8, r0
 80039d8:	b928      	cbnz	r0, 80039e6 <__multadd+0x5a>
 80039da:	4602      	mov	r2, r0
 80039dc:	4b0c      	ldr	r3, [pc, #48]	@ (8003a10 <__multadd+0x84>)
 80039de:	480d      	ldr	r0, [pc, #52]	@ (8003a14 <__multadd+0x88>)
 80039e0:	21ba      	movs	r1, #186	@ 0xba
 80039e2:	f000 fbbd 	bl	8004160 <__assert_func>
 80039e6:	6922      	ldr	r2, [r4, #16]
 80039e8:	3202      	adds	r2, #2
 80039ea:	f104 010c 	add.w	r1, r4, #12
 80039ee:	0092      	lsls	r2, r2, #2
 80039f0:	300c      	adds	r0, #12
 80039f2:	f000 fba7 	bl	8004144 <memcpy>
 80039f6:	4621      	mov	r1, r4
 80039f8:	4638      	mov	r0, r7
 80039fa:	f7ff ffa5 	bl	8003948 <_Bfree>
 80039fe:	4644      	mov	r4, r8
 8003a00:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8003a04:	3501      	adds	r5, #1
 8003a06:	615e      	str	r6, [r3, #20]
 8003a08:	6125      	str	r5, [r4, #16]
 8003a0a:	4620      	mov	r0, r4
 8003a0c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003a10:	08004848 	.word	0x08004848
 8003a14:	08004859 	.word	0x08004859

08003a18 <__hi0bits>:
 8003a18:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8003a1c:	4603      	mov	r3, r0
 8003a1e:	bf36      	itet	cc
 8003a20:	0403      	lslcc	r3, r0, #16
 8003a22:	2000      	movcs	r0, #0
 8003a24:	2010      	movcc	r0, #16
 8003a26:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003a2a:	bf3c      	itt	cc
 8003a2c:	021b      	lslcc	r3, r3, #8
 8003a2e:	3008      	addcc	r0, #8
 8003a30:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8003a34:	bf3c      	itt	cc
 8003a36:	011b      	lslcc	r3, r3, #4
 8003a38:	3004      	addcc	r0, #4
 8003a3a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003a3e:	bf3c      	itt	cc
 8003a40:	009b      	lslcc	r3, r3, #2
 8003a42:	3002      	addcc	r0, #2
 8003a44:	2b00      	cmp	r3, #0
 8003a46:	db05      	blt.n	8003a54 <__hi0bits+0x3c>
 8003a48:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8003a4c:	f100 0001 	add.w	r0, r0, #1
 8003a50:	bf08      	it	eq
 8003a52:	2020      	moveq	r0, #32
 8003a54:	4770      	bx	lr

08003a56 <__lo0bits>:
 8003a56:	6803      	ldr	r3, [r0, #0]
 8003a58:	4602      	mov	r2, r0
 8003a5a:	f013 0007 	ands.w	r0, r3, #7
 8003a5e:	d00b      	beq.n	8003a78 <__lo0bits+0x22>
 8003a60:	07d9      	lsls	r1, r3, #31
 8003a62:	d421      	bmi.n	8003aa8 <__lo0bits+0x52>
 8003a64:	0798      	lsls	r0, r3, #30
 8003a66:	bf49      	itett	mi
 8003a68:	085b      	lsrmi	r3, r3, #1
 8003a6a:	089b      	lsrpl	r3, r3, #2
 8003a6c:	2001      	movmi	r0, #1
 8003a6e:	6013      	strmi	r3, [r2, #0]
 8003a70:	bf5c      	itt	pl
 8003a72:	6013      	strpl	r3, [r2, #0]
 8003a74:	2002      	movpl	r0, #2
 8003a76:	4770      	bx	lr
 8003a78:	b299      	uxth	r1, r3
 8003a7a:	b909      	cbnz	r1, 8003a80 <__lo0bits+0x2a>
 8003a7c:	0c1b      	lsrs	r3, r3, #16
 8003a7e:	2010      	movs	r0, #16
 8003a80:	b2d9      	uxtb	r1, r3
 8003a82:	b909      	cbnz	r1, 8003a88 <__lo0bits+0x32>
 8003a84:	3008      	adds	r0, #8
 8003a86:	0a1b      	lsrs	r3, r3, #8
 8003a88:	0719      	lsls	r1, r3, #28
 8003a8a:	bf04      	itt	eq
 8003a8c:	091b      	lsreq	r3, r3, #4
 8003a8e:	3004      	addeq	r0, #4
 8003a90:	0799      	lsls	r1, r3, #30
 8003a92:	bf04      	itt	eq
 8003a94:	089b      	lsreq	r3, r3, #2
 8003a96:	3002      	addeq	r0, #2
 8003a98:	07d9      	lsls	r1, r3, #31
 8003a9a:	d403      	bmi.n	8003aa4 <__lo0bits+0x4e>
 8003a9c:	085b      	lsrs	r3, r3, #1
 8003a9e:	f100 0001 	add.w	r0, r0, #1
 8003aa2:	d003      	beq.n	8003aac <__lo0bits+0x56>
 8003aa4:	6013      	str	r3, [r2, #0]
 8003aa6:	4770      	bx	lr
 8003aa8:	2000      	movs	r0, #0
 8003aaa:	4770      	bx	lr
 8003aac:	2020      	movs	r0, #32
 8003aae:	4770      	bx	lr

08003ab0 <__i2b>:
 8003ab0:	b510      	push	{r4, lr}
 8003ab2:	460c      	mov	r4, r1
 8003ab4:	2101      	movs	r1, #1
 8003ab6:	f7ff ff07 	bl	80038c8 <_Balloc>
 8003aba:	4602      	mov	r2, r0
 8003abc:	b928      	cbnz	r0, 8003aca <__i2b+0x1a>
 8003abe:	4b05      	ldr	r3, [pc, #20]	@ (8003ad4 <__i2b+0x24>)
 8003ac0:	4805      	ldr	r0, [pc, #20]	@ (8003ad8 <__i2b+0x28>)
 8003ac2:	f240 1145 	movw	r1, #325	@ 0x145
 8003ac6:	f000 fb4b 	bl	8004160 <__assert_func>
 8003aca:	2301      	movs	r3, #1
 8003acc:	6144      	str	r4, [r0, #20]
 8003ace:	6103      	str	r3, [r0, #16]
 8003ad0:	bd10      	pop	{r4, pc}
 8003ad2:	bf00      	nop
 8003ad4:	08004848 	.word	0x08004848
 8003ad8:	08004859 	.word	0x08004859

08003adc <__multiply>:
 8003adc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003ae0:	4614      	mov	r4, r2
 8003ae2:	690a      	ldr	r2, [r1, #16]
 8003ae4:	6923      	ldr	r3, [r4, #16]
 8003ae6:	429a      	cmp	r2, r3
 8003ae8:	bfa8      	it	ge
 8003aea:	4623      	movge	r3, r4
 8003aec:	460f      	mov	r7, r1
 8003aee:	bfa4      	itt	ge
 8003af0:	460c      	movge	r4, r1
 8003af2:	461f      	movge	r7, r3
 8003af4:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8003af8:	f8d7 9010 	ldr.w	r9, [r7, #16]
 8003afc:	68a3      	ldr	r3, [r4, #8]
 8003afe:	6861      	ldr	r1, [r4, #4]
 8003b00:	eb0a 0609 	add.w	r6, sl, r9
 8003b04:	42b3      	cmp	r3, r6
 8003b06:	b085      	sub	sp, #20
 8003b08:	bfb8      	it	lt
 8003b0a:	3101      	addlt	r1, #1
 8003b0c:	f7ff fedc 	bl	80038c8 <_Balloc>
 8003b10:	b930      	cbnz	r0, 8003b20 <__multiply+0x44>
 8003b12:	4602      	mov	r2, r0
 8003b14:	4b44      	ldr	r3, [pc, #272]	@ (8003c28 <__multiply+0x14c>)
 8003b16:	4845      	ldr	r0, [pc, #276]	@ (8003c2c <__multiply+0x150>)
 8003b18:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8003b1c:	f000 fb20 	bl	8004160 <__assert_func>
 8003b20:	f100 0514 	add.w	r5, r0, #20
 8003b24:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8003b28:	462b      	mov	r3, r5
 8003b2a:	2200      	movs	r2, #0
 8003b2c:	4543      	cmp	r3, r8
 8003b2e:	d321      	bcc.n	8003b74 <__multiply+0x98>
 8003b30:	f107 0114 	add.w	r1, r7, #20
 8003b34:	f104 0214 	add.w	r2, r4, #20
 8003b38:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 8003b3c:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 8003b40:	9302      	str	r3, [sp, #8]
 8003b42:	1b13      	subs	r3, r2, r4
 8003b44:	3b15      	subs	r3, #21
 8003b46:	f023 0303 	bic.w	r3, r3, #3
 8003b4a:	3304      	adds	r3, #4
 8003b4c:	f104 0715 	add.w	r7, r4, #21
 8003b50:	42ba      	cmp	r2, r7
 8003b52:	bf38      	it	cc
 8003b54:	2304      	movcc	r3, #4
 8003b56:	9301      	str	r3, [sp, #4]
 8003b58:	9b02      	ldr	r3, [sp, #8]
 8003b5a:	9103      	str	r1, [sp, #12]
 8003b5c:	428b      	cmp	r3, r1
 8003b5e:	d80c      	bhi.n	8003b7a <__multiply+0x9e>
 8003b60:	2e00      	cmp	r6, #0
 8003b62:	dd03      	ble.n	8003b6c <__multiply+0x90>
 8003b64:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8003b68:	2b00      	cmp	r3, #0
 8003b6a:	d05b      	beq.n	8003c24 <__multiply+0x148>
 8003b6c:	6106      	str	r6, [r0, #16]
 8003b6e:	b005      	add	sp, #20
 8003b70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003b74:	f843 2b04 	str.w	r2, [r3], #4
 8003b78:	e7d8      	b.n	8003b2c <__multiply+0x50>
 8003b7a:	f8b1 a000 	ldrh.w	sl, [r1]
 8003b7e:	f1ba 0f00 	cmp.w	sl, #0
 8003b82:	d024      	beq.n	8003bce <__multiply+0xf2>
 8003b84:	f104 0e14 	add.w	lr, r4, #20
 8003b88:	46a9      	mov	r9, r5
 8003b8a:	f04f 0c00 	mov.w	ip, #0
 8003b8e:	f85e 7b04 	ldr.w	r7, [lr], #4
 8003b92:	f8d9 3000 	ldr.w	r3, [r9]
 8003b96:	fa1f fb87 	uxth.w	fp, r7
 8003b9a:	b29b      	uxth	r3, r3
 8003b9c:	fb0a 330b 	mla	r3, sl, fp, r3
 8003ba0:	ea4f 4b17 	mov.w	fp, r7, lsr #16
 8003ba4:	f8d9 7000 	ldr.w	r7, [r9]
 8003ba8:	4463      	add	r3, ip
 8003baa:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8003bae:	fb0a c70b 	mla	r7, sl, fp, ip
 8003bb2:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 8003bb6:	b29b      	uxth	r3, r3
 8003bb8:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8003bbc:	4572      	cmp	r2, lr
 8003bbe:	f849 3b04 	str.w	r3, [r9], #4
 8003bc2:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8003bc6:	d8e2      	bhi.n	8003b8e <__multiply+0xb2>
 8003bc8:	9b01      	ldr	r3, [sp, #4]
 8003bca:	f845 c003 	str.w	ip, [r5, r3]
 8003bce:	9b03      	ldr	r3, [sp, #12]
 8003bd0:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 8003bd4:	3104      	adds	r1, #4
 8003bd6:	f1b9 0f00 	cmp.w	r9, #0
 8003bda:	d021      	beq.n	8003c20 <__multiply+0x144>
 8003bdc:	682b      	ldr	r3, [r5, #0]
 8003bde:	f104 0c14 	add.w	ip, r4, #20
 8003be2:	46ae      	mov	lr, r5
 8003be4:	f04f 0a00 	mov.w	sl, #0
 8003be8:	f8bc b000 	ldrh.w	fp, [ip]
 8003bec:	f8be 7002 	ldrh.w	r7, [lr, #2]
 8003bf0:	fb09 770b 	mla	r7, r9, fp, r7
 8003bf4:	4457      	add	r7, sl
 8003bf6:	b29b      	uxth	r3, r3
 8003bf8:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8003bfc:	f84e 3b04 	str.w	r3, [lr], #4
 8003c00:	f85c 3b04 	ldr.w	r3, [ip], #4
 8003c04:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003c08:	f8be 3000 	ldrh.w	r3, [lr]
 8003c0c:	fb09 330a 	mla	r3, r9, sl, r3
 8003c10:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 8003c14:	4562      	cmp	r2, ip
 8003c16:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003c1a:	d8e5      	bhi.n	8003be8 <__multiply+0x10c>
 8003c1c:	9f01      	ldr	r7, [sp, #4]
 8003c1e:	51eb      	str	r3, [r5, r7]
 8003c20:	3504      	adds	r5, #4
 8003c22:	e799      	b.n	8003b58 <__multiply+0x7c>
 8003c24:	3e01      	subs	r6, #1
 8003c26:	e79b      	b.n	8003b60 <__multiply+0x84>
 8003c28:	08004848 	.word	0x08004848
 8003c2c:	08004859 	.word	0x08004859

08003c30 <__pow5mult>:
 8003c30:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003c34:	4615      	mov	r5, r2
 8003c36:	f012 0203 	ands.w	r2, r2, #3
 8003c3a:	4607      	mov	r7, r0
 8003c3c:	460e      	mov	r6, r1
 8003c3e:	d007      	beq.n	8003c50 <__pow5mult+0x20>
 8003c40:	4c25      	ldr	r4, [pc, #148]	@ (8003cd8 <__pow5mult+0xa8>)
 8003c42:	3a01      	subs	r2, #1
 8003c44:	2300      	movs	r3, #0
 8003c46:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8003c4a:	f7ff fe9f 	bl	800398c <__multadd>
 8003c4e:	4606      	mov	r6, r0
 8003c50:	10ad      	asrs	r5, r5, #2
 8003c52:	d03d      	beq.n	8003cd0 <__pow5mult+0xa0>
 8003c54:	69fc      	ldr	r4, [r7, #28]
 8003c56:	b97c      	cbnz	r4, 8003c78 <__pow5mult+0x48>
 8003c58:	2010      	movs	r0, #16
 8003c5a:	f7ff fd7f 	bl	800375c <malloc>
 8003c5e:	4602      	mov	r2, r0
 8003c60:	61f8      	str	r0, [r7, #28]
 8003c62:	b928      	cbnz	r0, 8003c70 <__pow5mult+0x40>
 8003c64:	4b1d      	ldr	r3, [pc, #116]	@ (8003cdc <__pow5mult+0xac>)
 8003c66:	481e      	ldr	r0, [pc, #120]	@ (8003ce0 <__pow5mult+0xb0>)
 8003c68:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8003c6c:	f000 fa78 	bl	8004160 <__assert_func>
 8003c70:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8003c74:	6004      	str	r4, [r0, #0]
 8003c76:	60c4      	str	r4, [r0, #12]
 8003c78:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8003c7c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8003c80:	b94c      	cbnz	r4, 8003c96 <__pow5mult+0x66>
 8003c82:	f240 2171 	movw	r1, #625	@ 0x271
 8003c86:	4638      	mov	r0, r7
 8003c88:	f7ff ff12 	bl	8003ab0 <__i2b>
 8003c8c:	2300      	movs	r3, #0
 8003c8e:	f8c8 0008 	str.w	r0, [r8, #8]
 8003c92:	4604      	mov	r4, r0
 8003c94:	6003      	str	r3, [r0, #0]
 8003c96:	f04f 0900 	mov.w	r9, #0
 8003c9a:	07eb      	lsls	r3, r5, #31
 8003c9c:	d50a      	bpl.n	8003cb4 <__pow5mult+0x84>
 8003c9e:	4631      	mov	r1, r6
 8003ca0:	4622      	mov	r2, r4
 8003ca2:	4638      	mov	r0, r7
 8003ca4:	f7ff ff1a 	bl	8003adc <__multiply>
 8003ca8:	4631      	mov	r1, r6
 8003caa:	4680      	mov	r8, r0
 8003cac:	4638      	mov	r0, r7
 8003cae:	f7ff fe4b 	bl	8003948 <_Bfree>
 8003cb2:	4646      	mov	r6, r8
 8003cb4:	106d      	asrs	r5, r5, #1
 8003cb6:	d00b      	beq.n	8003cd0 <__pow5mult+0xa0>
 8003cb8:	6820      	ldr	r0, [r4, #0]
 8003cba:	b938      	cbnz	r0, 8003ccc <__pow5mult+0x9c>
 8003cbc:	4622      	mov	r2, r4
 8003cbe:	4621      	mov	r1, r4
 8003cc0:	4638      	mov	r0, r7
 8003cc2:	f7ff ff0b 	bl	8003adc <__multiply>
 8003cc6:	6020      	str	r0, [r4, #0]
 8003cc8:	f8c0 9000 	str.w	r9, [r0]
 8003ccc:	4604      	mov	r4, r0
 8003cce:	e7e4      	b.n	8003c9a <__pow5mult+0x6a>
 8003cd0:	4630      	mov	r0, r6
 8003cd2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003cd6:	bf00      	nop
 8003cd8:	080048b4 	.word	0x080048b4
 8003cdc:	080047d9 	.word	0x080047d9
 8003ce0:	08004859 	.word	0x08004859

08003ce4 <__lshift>:
 8003ce4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003ce8:	460c      	mov	r4, r1
 8003cea:	6849      	ldr	r1, [r1, #4]
 8003cec:	6923      	ldr	r3, [r4, #16]
 8003cee:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8003cf2:	68a3      	ldr	r3, [r4, #8]
 8003cf4:	4607      	mov	r7, r0
 8003cf6:	4691      	mov	r9, r2
 8003cf8:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8003cfc:	f108 0601 	add.w	r6, r8, #1
 8003d00:	42b3      	cmp	r3, r6
 8003d02:	db0b      	blt.n	8003d1c <__lshift+0x38>
 8003d04:	4638      	mov	r0, r7
 8003d06:	f7ff fddf 	bl	80038c8 <_Balloc>
 8003d0a:	4605      	mov	r5, r0
 8003d0c:	b948      	cbnz	r0, 8003d22 <__lshift+0x3e>
 8003d0e:	4602      	mov	r2, r0
 8003d10:	4b28      	ldr	r3, [pc, #160]	@ (8003db4 <__lshift+0xd0>)
 8003d12:	4829      	ldr	r0, [pc, #164]	@ (8003db8 <__lshift+0xd4>)
 8003d14:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8003d18:	f000 fa22 	bl	8004160 <__assert_func>
 8003d1c:	3101      	adds	r1, #1
 8003d1e:	005b      	lsls	r3, r3, #1
 8003d20:	e7ee      	b.n	8003d00 <__lshift+0x1c>
 8003d22:	2300      	movs	r3, #0
 8003d24:	f100 0114 	add.w	r1, r0, #20
 8003d28:	f100 0210 	add.w	r2, r0, #16
 8003d2c:	4618      	mov	r0, r3
 8003d2e:	4553      	cmp	r3, sl
 8003d30:	db33      	blt.n	8003d9a <__lshift+0xb6>
 8003d32:	6920      	ldr	r0, [r4, #16]
 8003d34:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8003d38:	f104 0314 	add.w	r3, r4, #20
 8003d3c:	f019 091f 	ands.w	r9, r9, #31
 8003d40:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8003d44:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8003d48:	d02b      	beq.n	8003da2 <__lshift+0xbe>
 8003d4a:	f1c9 0e20 	rsb	lr, r9, #32
 8003d4e:	468a      	mov	sl, r1
 8003d50:	2200      	movs	r2, #0
 8003d52:	6818      	ldr	r0, [r3, #0]
 8003d54:	fa00 f009 	lsl.w	r0, r0, r9
 8003d58:	4310      	orrs	r0, r2
 8003d5a:	f84a 0b04 	str.w	r0, [sl], #4
 8003d5e:	f853 2b04 	ldr.w	r2, [r3], #4
 8003d62:	459c      	cmp	ip, r3
 8003d64:	fa22 f20e 	lsr.w	r2, r2, lr
 8003d68:	d8f3      	bhi.n	8003d52 <__lshift+0x6e>
 8003d6a:	ebac 0304 	sub.w	r3, ip, r4
 8003d6e:	3b15      	subs	r3, #21
 8003d70:	f023 0303 	bic.w	r3, r3, #3
 8003d74:	3304      	adds	r3, #4
 8003d76:	f104 0015 	add.w	r0, r4, #21
 8003d7a:	4584      	cmp	ip, r0
 8003d7c:	bf38      	it	cc
 8003d7e:	2304      	movcc	r3, #4
 8003d80:	50ca      	str	r2, [r1, r3]
 8003d82:	b10a      	cbz	r2, 8003d88 <__lshift+0xa4>
 8003d84:	f108 0602 	add.w	r6, r8, #2
 8003d88:	3e01      	subs	r6, #1
 8003d8a:	4638      	mov	r0, r7
 8003d8c:	612e      	str	r6, [r5, #16]
 8003d8e:	4621      	mov	r1, r4
 8003d90:	f7ff fdda 	bl	8003948 <_Bfree>
 8003d94:	4628      	mov	r0, r5
 8003d96:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003d9a:	f842 0f04 	str.w	r0, [r2, #4]!
 8003d9e:	3301      	adds	r3, #1
 8003da0:	e7c5      	b.n	8003d2e <__lshift+0x4a>
 8003da2:	3904      	subs	r1, #4
 8003da4:	f853 2b04 	ldr.w	r2, [r3], #4
 8003da8:	f841 2f04 	str.w	r2, [r1, #4]!
 8003dac:	459c      	cmp	ip, r3
 8003dae:	d8f9      	bhi.n	8003da4 <__lshift+0xc0>
 8003db0:	e7ea      	b.n	8003d88 <__lshift+0xa4>
 8003db2:	bf00      	nop
 8003db4:	08004848 	.word	0x08004848
 8003db8:	08004859 	.word	0x08004859

08003dbc <__mcmp>:
 8003dbc:	690a      	ldr	r2, [r1, #16]
 8003dbe:	4603      	mov	r3, r0
 8003dc0:	6900      	ldr	r0, [r0, #16]
 8003dc2:	1a80      	subs	r0, r0, r2
 8003dc4:	b530      	push	{r4, r5, lr}
 8003dc6:	d10e      	bne.n	8003de6 <__mcmp+0x2a>
 8003dc8:	3314      	adds	r3, #20
 8003dca:	3114      	adds	r1, #20
 8003dcc:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8003dd0:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8003dd4:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8003dd8:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8003ddc:	4295      	cmp	r5, r2
 8003dde:	d003      	beq.n	8003de8 <__mcmp+0x2c>
 8003de0:	d205      	bcs.n	8003dee <__mcmp+0x32>
 8003de2:	f04f 30ff 	mov.w	r0, #4294967295
 8003de6:	bd30      	pop	{r4, r5, pc}
 8003de8:	42a3      	cmp	r3, r4
 8003dea:	d3f3      	bcc.n	8003dd4 <__mcmp+0x18>
 8003dec:	e7fb      	b.n	8003de6 <__mcmp+0x2a>
 8003dee:	2001      	movs	r0, #1
 8003df0:	e7f9      	b.n	8003de6 <__mcmp+0x2a>
	...

08003df4 <__mdiff>:
 8003df4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003df8:	4689      	mov	r9, r1
 8003dfa:	4606      	mov	r6, r0
 8003dfc:	4611      	mov	r1, r2
 8003dfe:	4648      	mov	r0, r9
 8003e00:	4614      	mov	r4, r2
 8003e02:	f7ff ffdb 	bl	8003dbc <__mcmp>
 8003e06:	1e05      	subs	r5, r0, #0
 8003e08:	d112      	bne.n	8003e30 <__mdiff+0x3c>
 8003e0a:	4629      	mov	r1, r5
 8003e0c:	4630      	mov	r0, r6
 8003e0e:	f7ff fd5b 	bl	80038c8 <_Balloc>
 8003e12:	4602      	mov	r2, r0
 8003e14:	b928      	cbnz	r0, 8003e22 <__mdiff+0x2e>
 8003e16:	4b3f      	ldr	r3, [pc, #252]	@ (8003f14 <__mdiff+0x120>)
 8003e18:	f240 2137 	movw	r1, #567	@ 0x237
 8003e1c:	483e      	ldr	r0, [pc, #248]	@ (8003f18 <__mdiff+0x124>)
 8003e1e:	f000 f99f 	bl	8004160 <__assert_func>
 8003e22:	2301      	movs	r3, #1
 8003e24:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8003e28:	4610      	mov	r0, r2
 8003e2a:	b003      	add	sp, #12
 8003e2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003e30:	bfbc      	itt	lt
 8003e32:	464b      	movlt	r3, r9
 8003e34:	46a1      	movlt	r9, r4
 8003e36:	4630      	mov	r0, r6
 8003e38:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8003e3c:	bfba      	itte	lt
 8003e3e:	461c      	movlt	r4, r3
 8003e40:	2501      	movlt	r5, #1
 8003e42:	2500      	movge	r5, #0
 8003e44:	f7ff fd40 	bl	80038c8 <_Balloc>
 8003e48:	4602      	mov	r2, r0
 8003e4a:	b918      	cbnz	r0, 8003e54 <__mdiff+0x60>
 8003e4c:	4b31      	ldr	r3, [pc, #196]	@ (8003f14 <__mdiff+0x120>)
 8003e4e:	f240 2145 	movw	r1, #581	@ 0x245
 8003e52:	e7e3      	b.n	8003e1c <__mdiff+0x28>
 8003e54:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8003e58:	6926      	ldr	r6, [r4, #16]
 8003e5a:	60c5      	str	r5, [r0, #12]
 8003e5c:	f109 0310 	add.w	r3, r9, #16
 8003e60:	f109 0514 	add.w	r5, r9, #20
 8003e64:	f104 0e14 	add.w	lr, r4, #20
 8003e68:	f100 0b14 	add.w	fp, r0, #20
 8003e6c:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8003e70:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8003e74:	9301      	str	r3, [sp, #4]
 8003e76:	46d9      	mov	r9, fp
 8003e78:	f04f 0c00 	mov.w	ip, #0
 8003e7c:	9b01      	ldr	r3, [sp, #4]
 8003e7e:	f85e 0b04 	ldr.w	r0, [lr], #4
 8003e82:	f853 af04 	ldr.w	sl, [r3, #4]!
 8003e86:	9301      	str	r3, [sp, #4]
 8003e88:	fa1f f38a 	uxth.w	r3, sl
 8003e8c:	4619      	mov	r1, r3
 8003e8e:	b283      	uxth	r3, r0
 8003e90:	1acb      	subs	r3, r1, r3
 8003e92:	0c00      	lsrs	r0, r0, #16
 8003e94:	4463      	add	r3, ip
 8003e96:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8003e9a:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8003e9e:	b29b      	uxth	r3, r3
 8003ea0:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8003ea4:	4576      	cmp	r6, lr
 8003ea6:	f849 3b04 	str.w	r3, [r9], #4
 8003eaa:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8003eae:	d8e5      	bhi.n	8003e7c <__mdiff+0x88>
 8003eb0:	1b33      	subs	r3, r6, r4
 8003eb2:	3b15      	subs	r3, #21
 8003eb4:	f023 0303 	bic.w	r3, r3, #3
 8003eb8:	3415      	adds	r4, #21
 8003eba:	3304      	adds	r3, #4
 8003ebc:	42a6      	cmp	r6, r4
 8003ebe:	bf38      	it	cc
 8003ec0:	2304      	movcc	r3, #4
 8003ec2:	441d      	add	r5, r3
 8003ec4:	445b      	add	r3, fp
 8003ec6:	461e      	mov	r6, r3
 8003ec8:	462c      	mov	r4, r5
 8003eca:	4544      	cmp	r4, r8
 8003ecc:	d30e      	bcc.n	8003eec <__mdiff+0xf8>
 8003ece:	f108 0103 	add.w	r1, r8, #3
 8003ed2:	1b49      	subs	r1, r1, r5
 8003ed4:	f021 0103 	bic.w	r1, r1, #3
 8003ed8:	3d03      	subs	r5, #3
 8003eda:	45a8      	cmp	r8, r5
 8003edc:	bf38      	it	cc
 8003ede:	2100      	movcc	r1, #0
 8003ee0:	440b      	add	r3, r1
 8003ee2:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8003ee6:	b191      	cbz	r1, 8003f0e <__mdiff+0x11a>
 8003ee8:	6117      	str	r7, [r2, #16]
 8003eea:	e79d      	b.n	8003e28 <__mdiff+0x34>
 8003eec:	f854 1b04 	ldr.w	r1, [r4], #4
 8003ef0:	46e6      	mov	lr, ip
 8003ef2:	0c08      	lsrs	r0, r1, #16
 8003ef4:	fa1c fc81 	uxtah	ip, ip, r1
 8003ef8:	4471      	add	r1, lr
 8003efa:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8003efe:	b289      	uxth	r1, r1
 8003f00:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8003f04:	f846 1b04 	str.w	r1, [r6], #4
 8003f08:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8003f0c:	e7dd      	b.n	8003eca <__mdiff+0xd6>
 8003f0e:	3f01      	subs	r7, #1
 8003f10:	e7e7      	b.n	8003ee2 <__mdiff+0xee>
 8003f12:	bf00      	nop
 8003f14:	08004848 	.word	0x08004848
 8003f18:	08004859 	.word	0x08004859

08003f1c <__d2b>:
 8003f1c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8003f20:	460f      	mov	r7, r1
 8003f22:	2101      	movs	r1, #1
 8003f24:	ec59 8b10 	vmov	r8, r9, d0
 8003f28:	4616      	mov	r6, r2
 8003f2a:	f7ff fccd 	bl	80038c8 <_Balloc>
 8003f2e:	4604      	mov	r4, r0
 8003f30:	b930      	cbnz	r0, 8003f40 <__d2b+0x24>
 8003f32:	4602      	mov	r2, r0
 8003f34:	4b23      	ldr	r3, [pc, #140]	@ (8003fc4 <__d2b+0xa8>)
 8003f36:	4824      	ldr	r0, [pc, #144]	@ (8003fc8 <__d2b+0xac>)
 8003f38:	f240 310f 	movw	r1, #783	@ 0x30f
 8003f3c:	f000 f910 	bl	8004160 <__assert_func>
 8003f40:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8003f44:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003f48:	b10d      	cbz	r5, 8003f4e <__d2b+0x32>
 8003f4a:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8003f4e:	9301      	str	r3, [sp, #4]
 8003f50:	f1b8 0300 	subs.w	r3, r8, #0
 8003f54:	d023      	beq.n	8003f9e <__d2b+0x82>
 8003f56:	4668      	mov	r0, sp
 8003f58:	9300      	str	r3, [sp, #0]
 8003f5a:	f7ff fd7c 	bl	8003a56 <__lo0bits>
 8003f5e:	e9dd 1200 	ldrd	r1, r2, [sp]
 8003f62:	b1d0      	cbz	r0, 8003f9a <__d2b+0x7e>
 8003f64:	f1c0 0320 	rsb	r3, r0, #32
 8003f68:	fa02 f303 	lsl.w	r3, r2, r3
 8003f6c:	430b      	orrs	r3, r1
 8003f6e:	40c2      	lsrs	r2, r0
 8003f70:	6163      	str	r3, [r4, #20]
 8003f72:	9201      	str	r2, [sp, #4]
 8003f74:	9b01      	ldr	r3, [sp, #4]
 8003f76:	61a3      	str	r3, [r4, #24]
 8003f78:	2b00      	cmp	r3, #0
 8003f7a:	bf0c      	ite	eq
 8003f7c:	2201      	moveq	r2, #1
 8003f7e:	2202      	movne	r2, #2
 8003f80:	6122      	str	r2, [r4, #16]
 8003f82:	b1a5      	cbz	r5, 8003fae <__d2b+0x92>
 8003f84:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8003f88:	4405      	add	r5, r0
 8003f8a:	603d      	str	r5, [r7, #0]
 8003f8c:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8003f90:	6030      	str	r0, [r6, #0]
 8003f92:	4620      	mov	r0, r4
 8003f94:	b003      	add	sp, #12
 8003f96:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003f9a:	6161      	str	r1, [r4, #20]
 8003f9c:	e7ea      	b.n	8003f74 <__d2b+0x58>
 8003f9e:	a801      	add	r0, sp, #4
 8003fa0:	f7ff fd59 	bl	8003a56 <__lo0bits>
 8003fa4:	9b01      	ldr	r3, [sp, #4]
 8003fa6:	6163      	str	r3, [r4, #20]
 8003fa8:	3020      	adds	r0, #32
 8003faa:	2201      	movs	r2, #1
 8003fac:	e7e8      	b.n	8003f80 <__d2b+0x64>
 8003fae:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8003fb2:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8003fb6:	6038      	str	r0, [r7, #0]
 8003fb8:	6918      	ldr	r0, [r3, #16]
 8003fba:	f7ff fd2d 	bl	8003a18 <__hi0bits>
 8003fbe:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8003fc2:	e7e5      	b.n	8003f90 <__d2b+0x74>
 8003fc4:	08004848 	.word	0x08004848
 8003fc8:	08004859 	.word	0x08004859

08003fcc <__sflush_r>:
 8003fcc:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8003fd0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003fd4:	0716      	lsls	r6, r2, #28
 8003fd6:	4605      	mov	r5, r0
 8003fd8:	460c      	mov	r4, r1
 8003fda:	d454      	bmi.n	8004086 <__sflush_r+0xba>
 8003fdc:	684b      	ldr	r3, [r1, #4]
 8003fde:	2b00      	cmp	r3, #0
 8003fe0:	dc02      	bgt.n	8003fe8 <__sflush_r+0x1c>
 8003fe2:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8003fe4:	2b00      	cmp	r3, #0
 8003fe6:	dd48      	ble.n	800407a <__sflush_r+0xae>
 8003fe8:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8003fea:	2e00      	cmp	r6, #0
 8003fec:	d045      	beq.n	800407a <__sflush_r+0xae>
 8003fee:	2300      	movs	r3, #0
 8003ff0:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8003ff4:	682f      	ldr	r7, [r5, #0]
 8003ff6:	6a21      	ldr	r1, [r4, #32]
 8003ff8:	602b      	str	r3, [r5, #0]
 8003ffa:	d030      	beq.n	800405e <__sflush_r+0x92>
 8003ffc:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8003ffe:	89a3      	ldrh	r3, [r4, #12]
 8004000:	0759      	lsls	r1, r3, #29
 8004002:	d505      	bpl.n	8004010 <__sflush_r+0x44>
 8004004:	6863      	ldr	r3, [r4, #4]
 8004006:	1ad2      	subs	r2, r2, r3
 8004008:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800400a:	b10b      	cbz	r3, 8004010 <__sflush_r+0x44>
 800400c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800400e:	1ad2      	subs	r2, r2, r3
 8004010:	2300      	movs	r3, #0
 8004012:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8004014:	6a21      	ldr	r1, [r4, #32]
 8004016:	4628      	mov	r0, r5
 8004018:	47b0      	blx	r6
 800401a:	1c43      	adds	r3, r0, #1
 800401c:	89a3      	ldrh	r3, [r4, #12]
 800401e:	d106      	bne.n	800402e <__sflush_r+0x62>
 8004020:	6829      	ldr	r1, [r5, #0]
 8004022:	291d      	cmp	r1, #29
 8004024:	d82b      	bhi.n	800407e <__sflush_r+0xb2>
 8004026:	4a2a      	ldr	r2, [pc, #168]	@ (80040d0 <__sflush_r+0x104>)
 8004028:	410a      	asrs	r2, r1
 800402a:	07d6      	lsls	r6, r2, #31
 800402c:	d427      	bmi.n	800407e <__sflush_r+0xb2>
 800402e:	2200      	movs	r2, #0
 8004030:	6062      	str	r2, [r4, #4]
 8004032:	04d9      	lsls	r1, r3, #19
 8004034:	6922      	ldr	r2, [r4, #16]
 8004036:	6022      	str	r2, [r4, #0]
 8004038:	d504      	bpl.n	8004044 <__sflush_r+0x78>
 800403a:	1c42      	adds	r2, r0, #1
 800403c:	d101      	bne.n	8004042 <__sflush_r+0x76>
 800403e:	682b      	ldr	r3, [r5, #0]
 8004040:	b903      	cbnz	r3, 8004044 <__sflush_r+0x78>
 8004042:	6560      	str	r0, [r4, #84]	@ 0x54
 8004044:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8004046:	602f      	str	r7, [r5, #0]
 8004048:	b1b9      	cbz	r1, 800407a <__sflush_r+0xae>
 800404a:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800404e:	4299      	cmp	r1, r3
 8004050:	d002      	beq.n	8004058 <__sflush_r+0x8c>
 8004052:	4628      	mov	r0, r5
 8004054:	f7ff fb38 	bl	80036c8 <_free_r>
 8004058:	2300      	movs	r3, #0
 800405a:	6363      	str	r3, [r4, #52]	@ 0x34
 800405c:	e00d      	b.n	800407a <__sflush_r+0xae>
 800405e:	2301      	movs	r3, #1
 8004060:	4628      	mov	r0, r5
 8004062:	47b0      	blx	r6
 8004064:	4602      	mov	r2, r0
 8004066:	1c50      	adds	r0, r2, #1
 8004068:	d1c9      	bne.n	8003ffe <__sflush_r+0x32>
 800406a:	682b      	ldr	r3, [r5, #0]
 800406c:	2b00      	cmp	r3, #0
 800406e:	d0c6      	beq.n	8003ffe <__sflush_r+0x32>
 8004070:	2b1d      	cmp	r3, #29
 8004072:	d001      	beq.n	8004078 <__sflush_r+0xac>
 8004074:	2b16      	cmp	r3, #22
 8004076:	d11e      	bne.n	80040b6 <__sflush_r+0xea>
 8004078:	602f      	str	r7, [r5, #0]
 800407a:	2000      	movs	r0, #0
 800407c:	e022      	b.n	80040c4 <__sflush_r+0xf8>
 800407e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8004082:	b21b      	sxth	r3, r3
 8004084:	e01b      	b.n	80040be <__sflush_r+0xf2>
 8004086:	690f      	ldr	r7, [r1, #16]
 8004088:	2f00      	cmp	r7, #0
 800408a:	d0f6      	beq.n	800407a <__sflush_r+0xae>
 800408c:	0793      	lsls	r3, r2, #30
 800408e:	680e      	ldr	r6, [r1, #0]
 8004090:	bf08      	it	eq
 8004092:	694b      	ldreq	r3, [r1, #20]
 8004094:	600f      	str	r7, [r1, #0]
 8004096:	bf18      	it	ne
 8004098:	2300      	movne	r3, #0
 800409a:	eba6 0807 	sub.w	r8, r6, r7
 800409e:	608b      	str	r3, [r1, #8]
 80040a0:	f1b8 0f00 	cmp.w	r8, #0
 80040a4:	dde9      	ble.n	800407a <__sflush_r+0xae>
 80040a6:	6a21      	ldr	r1, [r4, #32]
 80040a8:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 80040aa:	4643      	mov	r3, r8
 80040ac:	463a      	mov	r2, r7
 80040ae:	4628      	mov	r0, r5
 80040b0:	47b0      	blx	r6
 80040b2:	2800      	cmp	r0, #0
 80040b4:	dc08      	bgt.n	80040c8 <__sflush_r+0xfc>
 80040b6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80040ba:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80040be:	81a3      	strh	r3, [r4, #12]
 80040c0:	f04f 30ff 	mov.w	r0, #4294967295
 80040c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80040c8:	4407      	add	r7, r0
 80040ca:	eba8 0800 	sub.w	r8, r8, r0
 80040ce:	e7e7      	b.n	80040a0 <__sflush_r+0xd4>
 80040d0:	dfbffffe 	.word	0xdfbffffe

080040d4 <_fflush_r>:
 80040d4:	b538      	push	{r3, r4, r5, lr}
 80040d6:	690b      	ldr	r3, [r1, #16]
 80040d8:	4605      	mov	r5, r0
 80040da:	460c      	mov	r4, r1
 80040dc:	b913      	cbnz	r3, 80040e4 <_fflush_r+0x10>
 80040de:	2500      	movs	r5, #0
 80040e0:	4628      	mov	r0, r5
 80040e2:	bd38      	pop	{r3, r4, r5, pc}
 80040e4:	b118      	cbz	r0, 80040ee <_fflush_r+0x1a>
 80040e6:	6a03      	ldr	r3, [r0, #32]
 80040e8:	b90b      	cbnz	r3, 80040ee <_fflush_r+0x1a>
 80040ea:	f7fe fba7 	bl	800283c <__sinit>
 80040ee:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80040f2:	2b00      	cmp	r3, #0
 80040f4:	d0f3      	beq.n	80040de <_fflush_r+0xa>
 80040f6:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80040f8:	07d0      	lsls	r0, r2, #31
 80040fa:	d404      	bmi.n	8004106 <_fflush_r+0x32>
 80040fc:	0599      	lsls	r1, r3, #22
 80040fe:	d402      	bmi.n	8004106 <_fflush_r+0x32>
 8004100:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8004102:	f7fe fc92 	bl	8002a2a <__retarget_lock_acquire_recursive>
 8004106:	4628      	mov	r0, r5
 8004108:	4621      	mov	r1, r4
 800410a:	f7ff ff5f 	bl	8003fcc <__sflush_r>
 800410e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8004110:	07da      	lsls	r2, r3, #31
 8004112:	4605      	mov	r5, r0
 8004114:	d4e4      	bmi.n	80040e0 <_fflush_r+0xc>
 8004116:	89a3      	ldrh	r3, [r4, #12]
 8004118:	059b      	lsls	r3, r3, #22
 800411a:	d4e1      	bmi.n	80040e0 <_fflush_r+0xc>
 800411c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800411e:	f7fe fc85 	bl	8002a2c <__retarget_lock_release_recursive>
 8004122:	e7dd      	b.n	80040e0 <_fflush_r+0xc>

08004124 <_sbrk_r>:
 8004124:	b538      	push	{r3, r4, r5, lr}
 8004126:	4d06      	ldr	r5, [pc, #24]	@ (8004140 <_sbrk_r+0x1c>)
 8004128:	2300      	movs	r3, #0
 800412a:	4604      	mov	r4, r0
 800412c:	4608      	mov	r0, r1
 800412e:	602b      	str	r3, [r5, #0]
 8004130:	f7fc ff6a 	bl	8001008 <_sbrk>
 8004134:	1c43      	adds	r3, r0, #1
 8004136:	d102      	bne.n	800413e <_sbrk_r+0x1a>
 8004138:	682b      	ldr	r3, [r5, #0]
 800413a:	b103      	cbz	r3, 800413e <_sbrk_r+0x1a>
 800413c:	6023      	str	r3, [r4, #0]
 800413e:	bd38      	pop	{r3, r4, r5, pc}
 8004140:	20000330 	.word	0x20000330

08004144 <memcpy>:
 8004144:	440a      	add	r2, r1
 8004146:	4291      	cmp	r1, r2
 8004148:	f100 33ff 	add.w	r3, r0, #4294967295
 800414c:	d100      	bne.n	8004150 <memcpy+0xc>
 800414e:	4770      	bx	lr
 8004150:	b510      	push	{r4, lr}
 8004152:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004156:	f803 4f01 	strb.w	r4, [r3, #1]!
 800415a:	4291      	cmp	r1, r2
 800415c:	d1f9      	bne.n	8004152 <memcpy+0xe>
 800415e:	bd10      	pop	{r4, pc}

08004160 <__assert_func>:
 8004160:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8004162:	4614      	mov	r4, r2
 8004164:	461a      	mov	r2, r3
 8004166:	4b09      	ldr	r3, [pc, #36]	@ (800418c <__assert_func+0x2c>)
 8004168:	681b      	ldr	r3, [r3, #0]
 800416a:	4605      	mov	r5, r0
 800416c:	68d8      	ldr	r0, [r3, #12]
 800416e:	b954      	cbnz	r4, 8004186 <__assert_func+0x26>
 8004170:	4b07      	ldr	r3, [pc, #28]	@ (8004190 <__assert_func+0x30>)
 8004172:	461c      	mov	r4, r3
 8004174:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8004178:	9100      	str	r1, [sp, #0]
 800417a:	462b      	mov	r3, r5
 800417c:	4905      	ldr	r1, [pc, #20]	@ (8004194 <__assert_func+0x34>)
 800417e:	f000 f841 	bl	8004204 <fiprintf>
 8004182:	f000 f851 	bl	8004228 <abort>
 8004186:	4b04      	ldr	r3, [pc, #16]	@ (8004198 <__assert_func+0x38>)
 8004188:	e7f4      	b.n	8004174 <__assert_func+0x14>
 800418a:	bf00      	nop
 800418c:	20000014 	.word	0x20000014
 8004190:	080049f5 	.word	0x080049f5
 8004194:	080049c7 	.word	0x080049c7
 8004198:	080049ba 	.word	0x080049ba

0800419c <_calloc_r>:
 800419c:	b570      	push	{r4, r5, r6, lr}
 800419e:	fba1 5402 	umull	r5, r4, r1, r2
 80041a2:	b93c      	cbnz	r4, 80041b4 <_calloc_r+0x18>
 80041a4:	4629      	mov	r1, r5
 80041a6:	f7ff fb03 	bl	80037b0 <_malloc_r>
 80041aa:	4606      	mov	r6, r0
 80041ac:	b928      	cbnz	r0, 80041ba <_calloc_r+0x1e>
 80041ae:	2600      	movs	r6, #0
 80041b0:	4630      	mov	r0, r6
 80041b2:	bd70      	pop	{r4, r5, r6, pc}
 80041b4:	220c      	movs	r2, #12
 80041b6:	6002      	str	r2, [r0, #0]
 80041b8:	e7f9      	b.n	80041ae <_calloc_r+0x12>
 80041ba:	462a      	mov	r2, r5
 80041bc:	4621      	mov	r1, r4
 80041be:	f7fe fbb6 	bl	800292e <memset>
 80041c2:	e7f5      	b.n	80041b0 <_calloc_r+0x14>

080041c4 <__ascii_mbtowc>:
 80041c4:	b082      	sub	sp, #8
 80041c6:	b901      	cbnz	r1, 80041ca <__ascii_mbtowc+0x6>
 80041c8:	a901      	add	r1, sp, #4
 80041ca:	b142      	cbz	r2, 80041de <__ascii_mbtowc+0x1a>
 80041cc:	b14b      	cbz	r3, 80041e2 <__ascii_mbtowc+0x1e>
 80041ce:	7813      	ldrb	r3, [r2, #0]
 80041d0:	600b      	str	r3, [r1, #0]
 80041d2:	7812      	ldrb	r2, [r2, #0]
 80041d4:	1e10      	subs	r0, r2, #0
 80041d6:	bf18      	it	ne
 80041d8:	2001      	movne	r0, #1
 80041da:	b002      	add	sp, #8
 80041dc:	4770      	bx	lr
 80041de:	4610      	mov	r0, r2
 80041e0:	e7fb      	b.n	80041da <__ascii_mbtowc+0x16>
 80041e2:	f06f 0001 	mvn.w	r0, #1
 80041e6:	e7f8      	b.n	80041da <__ascii_mbtowc+0x16>

080041e8 <__ascii_wctomb>:
 80041e8:	4603      	mov	r3, r0
 80041ea:	4608      	mov	r0, r1
 80041ec:	b141      	cbz	r1, 8004200 <__ascii_wctomb+0x18>
 80041ee:	2aff      	cmp	r2, #255	@ 0xff
 80041f0:	d904      	bls.n	80041fc <__ascii_wctomb+0x14>
 80041f2:	228a      	movs	r2, #138	@ 0x8a
 80041f4:	601a      	str	r2, [r3, #0]
 80041f6:	f04f 30ff 	mov.w	r0, #4294967295
 80041fa:	4770      	bx	lr
 80041fc:	700a      	strb	r2, [r1, #0]
 80041fe:	2001      	movs	r0, #1
 8004200:	4770      	bx	lr
	...

08004204 <fiprintf>:
 8004204:	b40e      	push	{r1, r2, r3}
 8004206:	b503      	push	{r0, r1, lr}
 8004208:	4601      	mov	r1, r0
 800420a:	ab03      	add	r3, sp, #12
 800420c:	4805      	ldr	r0, [pc, #20]	@ (8004224 <fiprintf+0x20>)
 800420e:	f853 2b04 	ldr.w	r2, [r3], #4
 8004212:	6800      	ldr	r0, [r0, #0]
 8004214:	9301      	str	r3, [sp, #4]
 8004216:	f000 f837 	bl	8004288 <_vfiprintf_r>
 800421a:	b002      	add	sp, #8
 800421c:	f85d eb04 	ldr.w	lr, [sp], #4
 8004220:	b003      	add	sp, #12
 8004222:	4770      	bx	lr
 8004224:	20000014 	.word	0x20000014

08004228 <abort>:
 8004228:	b508      	push	{r3, lr}
 800422a:	2006      	movs	r0, #6
 800422c:	f000 fa00 	bl	8004630 <raise>
 8004230:	2001      	movs	r0, #1
 8004232:	f7fc fe71 	bl	8000f18 <_exit>

08004236 <__sfputc_r>:
 8004236:	6893      	ldr	r3, [r2, #8]
 8004238:	3b01      	subs	r3, #1
 800423a:	2b00      	cmp	r3, #0
 800423c:	b410      	push	{r4}
 800423e:	6093      	str	r3, [r2, #8]
 8004240:	da08      	bge.n	8004254 <__sfputc_r+0x1e>
 8004242:	6994      	ldr	r4, [r2, #24]
 8004244:	42a3      	cmp	r3, r4
 8004246:	db01      	blt.n	800424c <__sfputc_r+0x16>
 8004248:	290a      	cmp	r1, #10
 800424a:	d103      	bne.n	8004254 <__sfputc_r+0x1e>
 800424c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004250:	f000 b932 	b.w	80044b8 <__swbuf_r>
 8004254:	6813      	ldr	r3, [r2, #0]
 8004256:	1c58      	adds	r0, r3, #1
 8004258:	6010      	str	r0, [r2, #0]
 800425a:	7019      	strb	r1, [r3, #0]
 800425c:	4608      	mov	r0, r1
 800425e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004262:	4770      	bx	lr

08004264 <__sfputs_r>:
 8004264:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004266:	4606      	mov	r6, r0
 8004268:	460f      	mov	r7, r1
 800426a:	4614      	mov	r4, r2
 800426c:	18d5      	adds	r5, r2, r3
 800426e:	42ac      	cmp	r4, r5
 8004270:	d101      	bne.n	8004276 <__sfputs_r+0x12>
 8004272:	2000      	movs	r0, #0
 8004274:	e007      	b.n	8004286 <__sfputs_r+0x22>
 8004276:	f814 1b01 	ldrb.w	r1, [r4], #1
 800427a:	463a      	mov	r2, r7
 800427c:	4630      	mov	r0, r6
 800427e:	f7ff ffda 	bl	8004236 <__sfputc_r>
 8004282:	1c43      	adds	r3, r0, #1
 8004284:	d1f3      	bne.n	800426e <__sfputs_r+0xa>
 8004286:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08004288 <_vfiprintf_r>:
 8004288:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800428c:	460d      	mov	r5, r1
 800428e:	b09d      	sub	sp, #116	@ 0x74
 8004290:	4614      	mov	r4, r2
 8004292:	4698      	mov	r8, r3
 8004294:	4606      	mov	r6, r0
 8004296:	b118      	cbz	r0, 80042a0 <_vfiprintf_r+0x18>
 8004298:	6a03      	ldr	r3, [r0, #32]
 800429a:	b90b      	cbnz	r3, 80042a0 <_vfiprintf_r+0x18>
 800429c:	f7fe face 	bl	800283c <__sinit>
 80042a0:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80042a2:	07d9      	lsls	r1, r3, #31
 80042a4:	d405      	bmi.n	80042b2 <_vfiprintf_r+0x2a>
 80042a6:	89ab      	ldrh	r3, [r5, #12]
 80042a8:	059a      	lsls	r2, r3, #22
 80042aa:	d402      	bmi.n	80042b2 <_vfiprintf_r+0x2a>
 80042ac:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80042ae:	f7fe fbbc 	bl	8002a2a <__retarget_lock_acquire_recursive>
 80042b2:	89ab      	ldrh	r3, [r5, #12]
 80042b4:	071b      	lsls	r3, r3, #28
 80042b6:	d501      	bpl.n	80042bc <_vfiprintf_r+0x34>
 80042b8:	692b      	ldr	r3, [r5, #16]
 80042ba:	b99b      	cbnz	r3, 80042e4 <_vfiprintf_r+0x5c>
 80042bc:	4629      	mov	r1, r5
 80042be:	4630      	mov	r0, r6
 80042c0:	f000 f938 	bl	8004534 <__swsetup_r>
 80042c4:	b170      	cbz	r0, 80042e4 <_vfiprintf_r+0x5c>
 80042c6:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80042c8:	07dc      	lsls	r4, r3, #31
 80042ca:	d504      	bpl.n	80042d6 <_vfiprintf_r+0x4e>
 80042cc:	f04f 30ff 	mov.w	r0, #4294967295
 80042d0:	b01d      	add	sp, #116	@ 0x74
 80042d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80042d6:	89ab      	ldrh	r3, [r5, #12]
 80042d8:	0598      	lsls	r0, r3, #22
 80042da:	d4f7      	bmi.n	80042cc <_vfiprintf_r+0x44>
 80042dc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80042de:	f7fe fba5 	bl	8002a2c <__retarget_lock_release_recursive>
 80042e2:	e7f3      	b.n	80042cc <_vfiprintf_r+0x44>
 80042e4:	2300      	movs	r3, #0
 80042e6:	9309      	str	r3, [sp, #36]	@ 0x24
 80042e8:	2320      	movs	r3, #32
 80042ea:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80042ee:	f8cd 800c 	str.w	r8, [sp, #12]
 80042f2:	2330      	movs	r3, #48	@ 0x30
 80042f4:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 80044a4 <_vfiprintf_r+0x21c>
 80042f8:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80042fc:	f04f 0901 	mov.w	r9, #1
 8004300:	4623      	mov	r3, r4
 8004302:	469a      	mov	sl, r3
 8004304:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004308:	b10a      	cbz	r2, 800430e <_vfiprintf_r+0x86>
 800430a:	2a25      	cmp	r2, #37	@ 0x25
 800430c:	d1f9      	bne.n	8004302 <_vfiprintf_r+0x7a>
 800430e:	ebba 0b04 	subs.w	fp, sl, r4
 8004312:	d00b      	beq.n	800432c <_vfiprintf_r+0xa4>
 8004314:	465b      	mov	r3, fp
 8004316:	4622      	mov	r2, r4
 8004318:	4629      	mov	r1, r5
 800431a:	4630      	mov	r0, r6
 800431c:	f7ff ffa2 	bl	8004264 <__sfputs_r>
 8004320:	3001      	adds	r0, #1
 8004322:	f000 80a7 	beq.w	8004474 <_vfiprintf_r+0x1ec>
 8004326:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004328:	445a      	add	r2, fp
 800432a:	9209      	str	r2, [sp, #36]	@ 0x24
 800432c:	f89a 3000 	ldrb.w	r3, [sl]
 8004330:	2b00      	cmp	r3, #0
 8004332:	f000 809f 	beq.w	8004474 <_vfiprintf_r+0x1ec>
 8004336:	2300      	movs	r3, #0
 8004338:	f04f 32ff 	mov.w	r2, #4294967295
 800433c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004340:	f10a 0a01 	add.w	sl, sl, #1
 8004344:	9304      	str	r3, [sp, #16]
 8004346:	9307      	str	r3, [sp, #28]
 8004348:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800434c:	931a      	str	r3, [sp, #104]	@ 0x68
 800434e:	4654      	mov	r4, sl
 8004350:	2205      	movs	r2, #5
 8004352:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004356:	4853      	ldr	r0, [pc, #332]	@ (80044a4 <_vfiprintf_r+0x21c>)
 8004358:	f7fb ff62 	bl	8000220 <memchr>
 800435c:	9a04      	ldr	r2, [sp, #16]
 800435e:	b9d8      	cbnz	r0, 8004398 <_vfiprintf_r+0x110>
 8004360:	06d1      	lsls	r1, r2, #27
 8004362:	bf44      	itt	mi
 8004364:	2320      	movmi	r3, #32
 8004366:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800436a:	0713      	lsls	r3, r2, #28
 800436c:	bf44      	itt	mi
 800436e:	232b      	movmi	r3, #43	@ 0x2b
 8004370:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8004374:	f89a 3000 	ldrb.w	r3, [sl]
 8004378:	2b2a      	cmp	r3, #42	@ 0x2a
 800437a:	d015      	beq.n	80043a8 <_vfiprintf_r+0x120>
 800437c:	9a07      	ldr	r2, [sp, #28]
 800437e:	4654      	mov	r4, sl
 8004380:	2000      	movs	r0, #0
 8004382:	f04f 0c0a 	mov.w	ip, #10
 8004386:	4621      	mov	r1, r4
 8004388:	f811 3b01 	ldrb.w	r3, [r1], #1
 800438c:	3b30      	subs	r3, #48	@ 0x30
 800438e:	2b09      	cmp	r3, #9
 8004390:	d94b      	bls.n	800442a <_vfiprintf_r+0x1a2>
 8004392:	b1b0      	cbz	r0, 80043c2 <_vfiprintf_r+0x13a>
 8004394:	9207      	str	r2, [sp, #28]
 8004396:	e014      	b.n	80043c2 <_vfiprintf_r+0x13a>
 8004398:	eba0 0308 	sub.w	r3, r0, r8
 800439c:	fa09 f303 	lsl.w	r3, r9, r3
 80043a0:	4313      	orrs	r3, r2
 80043a2:	9304      	str	r3, [sp, #16]
 80043a4:	46a2      	mov	sl, r4
 80043a6:	e7d2      	b.n	800434e <_vfiprintf_r+0xc6>
 80043a8:	9b03      	ldr	r3, [sp, #12]
 80043aa:	1d19      	adds	r1, r3, #4
 80043ac:	681b      	ldr	r3, [r3, #0]
 80043ae:	9103      	str	r1, [sp, #12]
 80043b0:	2b00      	cmp	r3, #0
 80043b2:	bfbb      	ittet	lt
 80043b4:	425b      	neglt	r3, r3
 80043b6:	f042 0202 	orrlt.w	r2, r2, #2
 80043ba:	9307      	strge	r3, [sp, #28]
 80043bc:	9307      	strlt	r3, [sp, #28]
 80043be:	bfb8      	it	lt
 80043c0:	9204      	strlt	r2, [sp, #16]
 80043c2:	7823      	ldrb	r3, [r4, #0]
 80043c4:	2b2e      	cmp	r3, #46	@ 0x2e
 80043c6:	d10a      	bne.n	80043de <_vfiprintf_r+0x156>
 80043c8:	7863      	ldrb	r3, [r4, #1]
 80043ca:	2b2a      	cmp	r3, #42	@ 0x2a
 80043cc:	d132      	bne.n	8004434 <_vfiprintf_r+0x1ac>
 80043ce:	9b03      	ldr	r3, [sp, #12]
 80043d0:	1d1a      	adds	r2, r3, #4
 80043d2:	681b      	ldr	r3, [r3, #0]
 80043d4:	9203      	str	r2, [sp, #12]
 80043d6:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80043da:	3402      	adds	r4, #2
 80043dc:	9305      	str	r3, [sp, #20]
 80043de:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 80044b4 <_vfiprintf_r+0x22c>
 80043e2:	7821      	ldrb	r1, [r4, #0]
 80043e4:	2203      	movs	r2, #3
 80043e6:	4650      	mov	r0, sl
 80043e8:	f7fb ff1a 	bl	8000220 <memchr>
 80043ec:	b138      	cbz	r0, 80043fe <_vfiprintf_r+0x176>
 80043ee:	9b04      	ldr	r3, [sp, #16]
 80043f0:	eba0 000a 	sub.w	r0, r0, sl
 80043f4:	2240      	movs	r2, #64	@ 0x40
 80043f6:	4082      	lsls	r2, r0
 80043f8:	4313      	orrs	r3, r2
 80043fa:	3401      	adds	r4, #1
 80043fc:	9304      	str	r3, [sp, #16]
 80043fe:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004402:	4829      	ldr	r0, [pc, #164]	@ (80044a8 <_vfiprintf_r+0x220>)
 8004404:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8004408:	2206      	movs	r2, #6
 800440a:	f7fb ff09 	bl	8000220 <memchr>
 800440e:	2800      	cmp	r0, #0
 8004410:	d03f      	beq.n	8004492 <_vfiprintf_r+0x20a>
 8004412:	4b26      	ldr	r3, [pc, #152]	@ (80044ac <_vfiprintf_r+0x224>)
 8004414:	bb1b      	cbnz	r3, 800445e <_vfiprintf_r+0x1d6>
 8004416:	9b03      	ldr	r3, [sp, #12]
 8004418:	3307      	adds	r3, #7
 800441a:	f023 0307 	bic.w	r3, r3, #7
 800441e:	3308      	adds	r3, #8
 8004420:	9303      	str	r3, [sp, #12]
 8004422:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004424:	443b      	add	r3, r7
 8004426:	9309      	str	r3, [sp, #36]	@ 0x24
 8004428:	e76a      	b.n	8004300 <_vfiprintf_r+0x78>
 800442a:	fb0c 3202 	mla	r2, ip, r2, r3
 800442e:	460c      	mov	r4, r1
 8004430:	2001      	movs	r0, #1
 8004432:	e7a8      	b.n	8004386 <_vfiprintf_r+0xfe>
 8004434:	2300      	movs	r3, #0
 8004436:	3401      	adds	r4, #1
 8004438:	9305      	str	r3, [sp, #20]
 800443a:	4619      	mov	r1, r3
 800443c:	f04f 0c0a 	mov.w	ip, #10
 8004440:	4620      	mov	r0, r4
 8004442:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004446:	3a30      	subs	r2, #48	@ 0x30
 8004448:	2a09      	cmp	r2, #9
 800444a:	d903      	bls.n	8004454 <_vfiprintf_r+0x1cc>
 800444c:	2b00      	cmp	r3, #0
 800444e:	d0c6      	beq.n	80043de <_vfiprintf_r+0x156>
 8004450:	9105      	str	r1, [sp, #20]
 8004452:	e7c4      	b.n	80043de <_vfiprintf_r+0x156>
 8004454:	fb0c 2101 	mla	r1, ip, r1, r2
 8004458:	4604      	mov	r4, r0
 800445a:	2301      	movs	r3, #1
 800445c:	e7f0      	b.n	8004440 <_vfiprintf_r+0x1b8>
 800445e:	ab03      	add	r3, sp, #12
 8004460:	9300      	str	r3, [sp, #0]
 8004462:	462a      	mov	r2, r5
 8004464:	4b12      	ldr	r3, [pc, #72]	@ (80044b0 <_vfiprintf_r+0x228>)
 8004466:	a904      	add	r1, sp, #16
 8004468:	4630      	mov	r0, r6
 800446a:	f7fd fda3 	bl	8001fb4 <_printf_float>
 800446e:	4607      	mov	r7, r0
 8004470:	1c78      	adds	r0, r7, #1
 8004472:	d1d6      	bne.n	8004422 <_vfiprintf_r+0x19a>
 8004474:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8004476:	07d9      	lsls	r1, r3, #31
 8004478:	d405      	bmi.n	8004486 <_vfiprintf_r+0x1fe>
 800447a:	89ab      	ldrh	r3, [r5, #12]
 800447c:	059a      	lsls	r2, r3, #22
 800447e:	d402      	bmi.n	8004486 <_vfiprintf_r+0x1fe>
 8004480:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8004482:	f7fe fad3 	bl	8002a2c <__retarget_lock_release_recursive>
 8004486:	89ab      	ldrh	r3, [r5, #12]
 8004488:	065b      	lsls	r3, r3, #25
 800448a:	f53f af1f 	bmi.w	80042cc <_vfiprintf_r+0x44>
 800448e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004490:	e71e      	b.n	80042d0 <_vfiprintf_r+0x48>
 8004492:	ab03      	add	r3, sp, #12
 8004494:	9300      	str	r3, [sp, #0]
 8004496:	462a      	mov	r2, r5
 8004498:	4b05      	ldr	r3, [pc, #20]	@ (80044b0 <_vfiprintf_r+0x228>)
 800449a:	a904      	add	r1, sp, #16
 800449c:	4630      	mov	r0, r6
 800449e:	f7fe f821 	bl	80024e4 <_printf_i>
 80044a2:	e7e4      	b.n	800446e <_vfiprintf_r+0x1e6>
 80044a4:	08004af7 	.word	0x08004af7
 80044a8:	08004b01 	.word	0x08004b01
 80044ac:	08001fb5 	.word	0x08001fb5
 80044b0:	08004265 	.word	0x08004265
 80044b4:	08004afd 	.word	0x08004afd

080044b8 <__swbuf_r>:
 80044b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80044ba:	460e      	mov	r6, r1
 80044bc:	4614      	mov	r4, r2
 80044be:	4605      	mov	r5, r0
 80044c0:	b118      	cbz	r0, 80044ca <__swbuf_r+0x12>
 80044c2:	6a03      	ldr	r3, [r0, #32]
 80044c4:	b90b      	cbnz	r3, 80044ca <__swbuf_r+0x12>
 80044c6:	f7fe f9b9 	bl	800283c <__sinit>
 80044ca:	69a3      	ldr	r3, [r4, #24]
 80044cc:	60a3      	str	r3, [r4, #8]
 80044ce:	89a3      	ldrh	r3, [r4, #12]
 80044d0:	071a      	lsls	r2, r3, #28
 80044d2:	d501      	bpl.n	80044d8 <__swbuf_r+0x20>
 80044d4:	6923      	ldr	r3, [r4, #16]
 80044d6:	b943      	cbnz	r3, 80044ea <__swbuf_r+0x32>
 80044d8:	4621      	mov	r1, r4
 80044da:	4628      	mov	r0, r5
 80044dc:	f000 f82a 	bl	8004534 <__swsetup_r>
 80044e0:	b118      	cbz	r0, 80044ea <__swbuf_r+0x32>
 80044e2:	f04f 37ff 	mov.w	r7, #4294967295
 80044e6:	4638      	mov	r0, r7
 80044e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80044ea:	6823      	ldr	r3, [r4, #0]
 80044ec:	6922      	ldr	r2, [r4, #16]
 80044ee:	1a98      	subs	r0, r3, r2
 80044f0:	6963      	ldr	r3, [r4, #20]
 80044f2:	b2f6      	uxtb	r6, r6
 80044f4:	4283      	cmp	r3, r0
 80044f6:	4637      	mov	r7, r6
 80044f8:	dc05      	bgt.n	8004506 <__swbuf_r+0x4e>
 80044fa:	4621      	mov	r1, r4
 80044fc:	4628      	mov	r0, r5
 80044fe:	f7ff fde9 	bl	80040d4 <_fflush_r>
 8004502:	2800      	cmp	r0, #0
 8004504:	d1ed      	bne.n	80044e2 <__swbuf_r+0x2a>
 8004506:	68a3      	ldr	r3, [r4, #8]
 8004508:	3b01      	subs	r3, #1
 800450a:	60a3      	str	r3, [r4, #8]
 800450c:	6823      	ldr	r3, [r4, #0]
 800450e:	1c5a      	adds	r2, r3, #1
 8004510:	6022      	str	r2, [r4, #0]
 8004512:	701e      	strb	r6, [r3, #0]
 8004514:	6962      	ldr	r2, [r4, #20]
 8004516:	1c43      	adds	r3, r0, #1
 8004518:	429a      	cmp	r2, r3
 800451a:	d004      	beq.n	8004526 <__swbuf_r+0x6e>
 800451c:	89a3      	ldrh	r3, [r4, #12]
 800451e:	07db      	lsls	r3, r3, #31
 8004520:	d5e1      	bpl.n	80044e6 <__swbuf_r+0x2e>
 8004522:	2e0a      	cmp	r6, #10
 8004524:	d1df      	bne.n	80044e6 <__swbuf_r+0x2e>
 8004526:	4621      	mov	r1, r4
 8004528:	4628      	mov	r0, r5
 800452a:	f7ff fdd3 	bl	80040d4 <_fflush_r>
 800452e:	2800      	cmp	r0, #0
 8004530:	d0d9      	beq.n	80044e6 <__swbuf_r+0x2e>
 8004532:	e7d6      	b.n	80044e2 <__swbuf_r+0x2a>

08004534 <__swsetup_r>:
 8004534:	b538      	push	{r3, r4, r5, lr}
 8004536:	4b29      	ldr	r3, [pc, #164]	@ (80045dc <__swsetup_r+0xa8>)
 8004538:	4605      	mov	r5, r0
 800453a:	6818      	ldr	r0, [r3, #0]
 800453c:	460c      	mov	r4, r1
 800453e:	b118      	cbz	r0, 8004548 <__swsetup_r+0x14>
 8004540:	6a03      	ldr	r3, [r0, #32]
 8004542:	b90b      	cbnz	r3, 8004548 <__swsetup_r+0x14>
 8004544:	f7fe f97a 	bl	800283c <__sinit>
 8004548:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800454c:	0719      	lsls	r1, r3, #28
 800454e:	d422      	bmi.n	8004596 <__swsetup_r+0x62>
 8004550:	06da      	lsls	r2, r3, #27
 8004552:	d407      	bmi.n	8004564 <__swsetup_r+0x30>
 8004554:	2209      	movs	r2, #9
 8004556:	602a      	str	r2, [r5, #0]
 8004558:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800455c:	81a3      	strh	r3, [r4, #12]
 800455e:	f04f 30ff 	mov.w	r0, #4294967295
 8004562:	e033      	b.n	80045cc <__swsetup_r+0x98>
 8004564:	0758      	lsls	r0, r3, #29
 8004566:	d512      	bpl.n	800458e <__swsetup_r+0x5a>
 8004568:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800456a:	b141      	cbz	r1, 800457e <__swsetup_r+0x4a>
 800456c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8004570:	4299      	cmp	r1, r3
 8004572:	d002      	beq.n	800457a <__swsetup_r+0x46>
 8004574:	4628      	mov	r0, r5
 8004576:	f7ff f8a7 	bl	80036c8 <_free_r>
 800457a:	2300      	movs	r3, #0
 800457c:	6363      	str	r3, [r4, #52]	@ 0x34
 800457e:	89a3      	ldrh	r3, [r4, #12]
 8004580:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8004584:	81a3      	strh	r3, [r4, #12]
 8004586:	2300      	movs	r3, #0
 8004588:	6063      	str	r3, [r4, #4]
 800458a:	6923      	ldr	r3, [r4, #16]
 800458c:	6023      	str	r3, [r4, #0]
 800458e:	89a3      	ldrh	r3, [r4, #12]
 8004590:	f043 0308 	orr.w	r3, r3, #8
 8004594:	81a3      	strh	r3, [r4, #12]
 8004596:	6923      	ldr	r3, [r4, #16]
 8004598:	b94b      	cbnz	r3, 80045ae <__swsetup_r+0x7a>
 800459a:	89a3      	ldrh	r3, [r4, #12]
 800459c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80045a0:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80045a4:	d003      	beq.n	80045ae <__swsetup_r+0x7a>
 80045a6:	4621      	mov	r1, r4
 80045a8:	4628      	mov	r0, r5
 80045aa:	f000 f883 	bl	80046b4 <__smakebuf_r>
 80045ae:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80045b2:	f013 0201 	ands.w	r2, r3, #1
 80045b6:	d00a      	beq.n	80045ce <__swsetup_r+0x9a>
 80045b8:	2200      	movs	r2, #0
 80045ba:	60a2      	str	r2, [r4, #8]
 80045bc:	6962      	ldr	r2, [r4, #20]
 80045be:	4252      	negs	r2, r2
 80045c0:	61a2      	str	r2, [r4, #24]
 80045c2:	6922      	ldr	r2, [r4, #16]
 80045c4:	b942      	cbnz	r2, 80045d8 <__swsetup_r+0xa4>
 80045c6:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80045ca:	d1c5      	bne.n	8004558 <__swsetup_r+0x24>
 80045cc:	bd38      	pop	{r3, r4, r5, pc}
 80045ce:	0799      	lsls	r1, r3, #30
 80045d0:	bf58      	it	pl
 80045d2:	6962      	ldrpl	r2, [r4, #20]
 80045d4:	60a2      	str	r2, [r4, #8]
 80045d6:	e7f4      	b.n	80045c2 <__swsetup_r+0x8e>
 80045d8:	2000      	movs	r0, #0
 80045da:	e7f7      	b.n	80045cc <__swsetup_r+0x98>
 80045dc:	20000014 	.word	0x20000014

080045e0 <_raise_r>:
 80045e0:	291f      	cmp	r1, #31
 80045e2:	b538      	push	{r3, r4, r5, lr}
 80045e4:	4605      	mov	r5, r0
 80045e6:	460c      	mov	r4, r1
 80045e8:	d904      	bls.n	80045f4 <_raise_r+0x14>
 80045ea:	2316      	movs	r3, #22
 80045ec:	6003      	str	r3, [r0, #0]
 80045ee:	f04f 30ff 	mov.w	r0, #4294967295
 80045f2:	bd38      	pop	{r3, r4, r5, pc}
 80045f4:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80045f6:	b112      	cbz	r2, 80045fe <_raise_r+0x1e>
 80045f8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80045fc:	b94b      	cbnz	r3, 8004612 <_raise_r+0x32>
 80045fe:	4628      	mov	r0, r5
 8004600:	f000 f830 	bl	8004664 <_getpid_r>
 8004604:	4622      	mov	r2, r4
 8004606:	4601      	mov	r1, r0
 8004608:	4628      	mov	r0, r5
 800460a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800460e:	f000 b817 	b.w	8004640 <_kill_r>
 8004612:	2b01      	cmp	r3, #1
 8004614:	d00a      	beq.n	800462c <_raise_r+0x4c>
 8004616:	1c59      	adds	r1, r3, #1
 8004618:	d103      	bne.n	8004622 <_raise_r+0x42>
 800461a:	2316      	movs	r3, #22
 800461c:	6003      	str	r3, [r0, #0]
 800461e:	2001      	movs	r0, #1
 8004620:	e7e7      	b.n	80045f2 <_raise_r+0x12>
 8004622:	2100      	movs	r1, #0
 8004624:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8004628:	4620      	mov	r0, r4
 800462a:	4798      	blx	r3
 800462c:	2000      	movs	r0, #0
 800462e:	e7e0      	b.n	80045f2 <_raise_r+0x12>

08004630 <raise>:
 8004630:	4b02      	ldr	r3, [pc, #8]	@ (800463c <raise+0xc>)
 8004632:	4601      	mov	r1, r0
 8004634:	6818      	ldr	r0, [r3, #0]
 8004636:	f7ff bfd3 	b.w	80045e0 <_raise_r>
 800463a:	bf00      	nop
 800463c:	20000014 	.word	0x20000014

08004640 <_kill_r>:
 8004640:	b538      	push	{r3, r4, r5, lr}
 8004642:	4d07      	ldr	r5, [pc, #28]	@ (8004660 <_kill_r+0x20>)
 8004644:	2300      	movs	r3, #0
 8004646:	4604      	mov	r4, r0
 8004648:	4608      	mov	r0, r1
 800464a:	4611      	mov	r1, r2
 800464c:	602b      	str	r3, [r5, #0]
 800464e:	f7fc fc53 	bl	8000ef8 <_kill>
 8004652:	1c43      	adds	r3, r0, #1
 8004654:	d102      	bne.n	800465c <_kill_r+0x1c>
 8004656:	682b      	ldr	r3, [r5, #0]
 8004658:	b103      	cbz	r3, 800465c <_kill_r+0x1c>
 800465a:	6023      	str	r3, [r4, #0]
 800465c:	bd38      	pop	{r3, r4, r5, pc}
 800465e:	bf00      	nop
 8004660:	20000330 	.word	0x20000330

08004664 <_getpid_r>:
 8004664:	f7fc bc40 	b.w	8000ee8 <_getpid>

08004668 <__swhatbuf_r>:
 8004668:	b570      	push	{r4, r5, r6, lr}
 800466a:	460c      	mov	r4, r1
 800466c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004670:	2900      	cmp	r1, #0
 8004672:	b096      	sub	sp, #88	@ 0x58
 8004674:	4615      	mov	r5, r2
 8004676:	461e      	mov	r6, r3
 8004678:	da0d      	bge.n	8004696 <__swhatbuf_r+0x2e>
 800467a:	89a3      	ldrh	r3, [r4, #12]
 800467c:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8004680:	f04f 0100 	mov.w	r1, #0
 8004684:	bf14      	ite	ne
 8004686:	2340      	movne	r3, #64	@ 0x40
 8004688:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 800468c:	2000      	movs	r0, #0
 800468e:	6031      	str	r1, [r6, #0]
 8004690:	602b      	str	r3, [r5, #0]
 8004692:	b016      	add	sp, #88	@ 0x58
 8004694:	bd70      	pop	{r4, r5, r6, pc}
 8004696:	466a      	mov	r2, sp
 8004698:	f000 f848 	bl	800472c <_fstat_r>
 800469c:	2800      	cmp	r0, #0
 800469e:	dbec      	blt.n	800467a <__swhatbuf_r+0x12>
 80046a0:	9901      	ldr	r1, [sp, #4]
 80046a2:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80046a6:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80046aa:	4259      	negs	r1, r3
 80046ac:	4159      	adcs	r1, r3
 80046ae:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80046b2:	e7eb      	b.n	800468c <__swhatbuf_r+0x24>

080046b4 <__smakebuf_r>:
 80046b4:	898b      	ldrh	r3, [r1, #12]
 80046b6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80046b8:	079d      	lsls	r5, r3, #30
 80046ba:	4606      	mov	r6, r0
 80046bc:	460c      	mov	r4, r1
 80046be:	d507      	bpl.n	80046d0 <__smakebuf_r+0x1c>
 80046c0:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80046c4:	6023      	str	r3, [r4, #0]
 80046c6:	6123      	str	r3, [r4, #16]
 80046c8:	2301      	movs	r3, #1
 80046ca:	6163      	str	r3, [r4, #20]
 80046cc:	b003      	add	sp, #12
 80046ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80046d0:	ab01      	add	r3, sp, #4
 80046d2:	466a      	mov	r2, sp
 80046d4:	f7ff ffc8 	bl	8004668 <__swhatbuf_r>
 80046d8:	9f00      	ldr	r7, [sp, #0]
 80046da:	4605      	mov	r5, r0
 80046dc:	4639      	mov	r1, r7
 80046de:	4630      	mov	r0, r6
 80046e0:	f7ff f866 	bl	80037b0 <_malloc_r>
 80046e4:	b948      	cbnz	r0, 80046fa <__smakebuf_r+0x46>
 80046e6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80046ea:	059a      	lsls	r2, r3, #22
 80046ec:	d4ee      	bmi.n	80046cc <__smakebuf_r+0x18>
 80046ee:	f023 0303 	bic.w	r3, r3, #3
 80046f2:	f043 0302 	orr.w	r3, r3, #2
 80046f6:	81a3      	strh	r3, [r4, #12]
 80046f8:	e7e2      	b.n	80046c0 <__smakebuf_r+0xc>
 80046fa:	89a3      	ldrh	r3, [r4, #12]
 80046fc:	6020      	str	r0, [r4, #0]
 80046fe:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004702:	81a3      	strh	r3, [r4, #12]
 8004704:	9b01      	ldr	r3, [sp, #4]
 8004706:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800470a:	b15b      	cbz	r3, 8004724 <__smakebuf_r+0x70>
 800470c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004710:	4630      	mov	r0, r6
 8004712:	f000 f81d 	bl	8004750 <_isatty_r>
 8004716:	b128      	cbz	r0, 8004724 <__smakebuf_r+0x70>
 8004718:	89a3      	ldrh	r3, [r4, #12]
 800471a:	f023 0303 	bic.w	r3, r3, #3
 800471e:	f043 0301 	orr.w	r3, r3, #1
 8004722:	81a3      	strh	r3, [r4, #12]
 8004724:	89a3      	ldrh	r3, [r4, #12]
 8004726:	431d      	orrs	r5, r3
 8004728:	81a5      	strh	r5, [r4, #12]
 800472a:	e7cf      	b.n	80046cc <__smakebuf_r+0x18>

0800472c <_fstat_r>:
 800472c:	b538      	push	{r3, r4, r5, lr}
 800472e:	4d07      	ldr	r5, [pc, #28]	@ (800474c <_fstat_r+0x20>)
 8004730:	2300      	movs	r3, #0
 8004732:	4604      	mov	r4, r0
 8004734:	4608      	mov	r0, r1
 8004736:	4611      	mov	r1, r2
 8004738:	602b      	str	r3, [r5, #0]
 800473a:	f7fc fc3d 	bl	8000fb8 <_fstat>
 800473e:	1c43      	adds	r3, r0, #1
 8004740:	d102      	bne.n	8004748 <_fstat_r+0x1c>
 8004742:	682b      	ldr	r3, [r5, #0]
 8004744:	b103      	cbz	r3, 8004748 <_fstat_r+0x1c>
 8004746:	6023      	str	r3, [r4, #0]
 8004748:	bd38      	pop	{r3, r4, r5, pc}
 800474a:	bf00      	nop
 800474c:	20000330 	.word	0x20000330

08004750 <_isatty_r>:
 8004750:	b538      	push	{r3, r4, r5, lr}
 8004752:	4d06      	ldr	r5, [pc, #24]	@ (800476c <_isatty_r+0x1c>)
 8004754:	2300      	movs	r3, #0
 8004756:	4604      	mov	r4, r0
 8004758:	4608      	mov	r0, r1
 800475a:	602b      	str	r3, [r5, #0]
 800475c:	f7fc fc3c 	bl	8000fd8 <_isatty>
 8004760:	1c43      	adds	r3, r0, #1
 8004762:	d102      	bne.n	800476a <_isatty_r+0x1a>
 8004764:	682b      	ldr	r3, [r5, #0]
 8004766:	b103      	cbz	r3, 800476a <_isatty_r+0x1a>
 8004768:	6023      	str	r3, [r4, #0]
 800476a:	bd38      	pop	{r3, r4, r5, pc}
 800476c:	20000330 	.word	0x20000330

08004770 <_init>:
 8004770:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004772:	bf00      	nop
 8004774:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004776:	bc08      	pop	{r3}
 8004778:	469e      	mov	lr, r3
 800477a:	4770      	bx	lr

0800477c <_fini>:
 800477c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800477e:	bf00      	nop
 8004780:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004782:	bc08      	pop	{r3}
 8004784:	469e      	mov	lr, r3
 8004786:	4770      	bx	lr
